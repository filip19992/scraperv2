"Witam. Mam pytanie, bo jesteście obznajomieni z nowymi technologiami. Myślę nad byciem grafikiem i nie wiem czy za mojego życia albo w bliższej przyszłości tego zawodu nie wyprze sztuczna inteligencja bo już teraz potrafi generować obrazy. :);"
Sądzę że ciebie wyprze. Już nie programowanie?;
"Jak będziesz tworzył dla odbiorców na żywo wydzielinami własnego ciała ;) , to pewnie AI nie ma szans, przynajmniej takie masowe. A tu coś do pooglądania i ew. samodzielnej próby wyrobienia sobie zdania: https://generrated.com/ Kolejna wersja narzędzia, którym to było robione, wychodzi niedługo.;"
"Nie wiem jak z 3d, ale 2d coś tam sobie radzi, ale photoshop ma tyle narzędzi, że obróbka jest prosta i graficy teraz to po prostu są grafikami AI zamiast robić ręcznie to generują. 3d to tworzyłem kiedyś w blenderze i w CAD to dosyć prosto się robi razem z animowaniem, ale już dopieścić detale to ciężko, żeby ładnie wyglądało, chodź w CAD jest prościej bo masz pomierzone wielkości, gdzie przy twarzach to masz bardziej proporcje i na oko się robi czyli byle jak. Strony bardzo mocno bazuja na obrazach, ikonach, kompozycji kolorów, AI wygeneruje template jakiś, ale jakiegoś customowego stylu nie zrobi, a nagabując o modyfikacje w końcu wygeneruje niedziałający kod. Z obrazkami trochę łatwiej jest bo dajesz prompty lub zaznaczasz fragmenty i ci wyedytuje. Jak masz szkicownik to rysujesz jakisz prosty szkic i dodajesz prompt np. pokoloruj, wykończ w kreskówkowym stylu itp. I ci przerobi szkic na obrazek już gotowy, szkic to też obrazek, ale taki niedokończony. Praca grafika to musisz po prostu tworzyć ładne rzeczy, żeby móc później pokazywać ludziom, nie wiem jak na tym rynku jest, ale niektórzy tworzą jakieś templaty i sprzedawają czy to modele do gier, jakieś wykończone strony w figma czy jakieś obrazki, które mogą potem wykorzystać na swoich stronach itp. Zależy jaki kontent produkujesz to musisz potem szukać gdzie go opylić ludzie kupują raczej te assety, chodź ja akurat zawsze z free korzystam.;"
A jak myślicie czy w przyszłości AI zastąpi grafika całkowicie?;
"Nie ważne jak dobry by był, ktoś będzie mu musiał mówić co ma zrobić, znać jakieś style np. styl kreskówkowy to taki prosty jak w bajkach albo hiperrealistyczny i tam graficy mają jakieś swoje ciekawe określenia wykorzystywane w fachu, czasem trudno wytłumaczyć to co się widzi w wyobraźni, żeby ktoś inny np. AI bot zrozumiał co mieliśmy na myśli. Potem i tak po wygenerowaniu trzeba ocenić i jak źle to dalej go męczyć z generowaniem, więc wtedy to prompt grafik jest. W ogóle jak ktoś ma hajs to jest leniwy, zleca innym i ma być gotowe nic nie będzie się przemęczał, ani myślał, tylko zleci i ma być gotowe, a mimo to ktoś musi tego AI użyć, pobawić się z nim, czasem coś dokończyć za niego.;"
Warto zajmować się grafiką jeżeli chce się pracować podobnie jak teraz graficy 2d a nie tylko wpisywać komendy do AI ewentualnie coś poprawiać ale żeby mieć jakieś pole popisu a nie tylko wykorzystywać sztuczną inteligencję?;
"Witam, szukam pomocy w zadaniu, ze sztucznej inteligencji. Oto zadanie i rysunek do niego:  Problem polega na części, która mówi o ""Warstwie pierwszej wystarczą 2 neurony"". Czy ktoś mógłby wytłumaczyć mi jak to zaznaczyć? Liczenie całej reszty ogarniam, tylko ten rysunek sprawił mi problem. Dziękuję i pozdrawiam   Screenshot 2024-02-06 203828.png (32 KB) - ściągnięć: 4 Screenshot 2024-02-06 204439.png (9 KB) - ściągnięć: 2;"
"oryginalny news: https://www.bloomberg.com/news/articles/2023-05-01/ibm-to-pause-hiring-for-back-office-jobs-that-ai-could-kill#xj4y7vzkg polski: https://www.computerworld.pl/news/W-ciagu-5-lat-IBM-zastapi-30-pracownikow-sztuczna-inteligencja,445372.html;"
"Powinniśmy współczuć, ale redaktorom polskich gazetek, że zostaną zastąpieni przez AI jeszcze szybciej. Szczególnie jeśli redaktorzy jedyne co umieją, to streszczać swoimi zdaniami czyjeś artykuły, które na dodatek albo kiepsko zrozumieli albo kiepsko opisali. Chyba że ChatGPT to pisał.;"
"Nie no, co jak co, ale kiedy AI zastąpi twórców tych artykułów na polskich stronach to poziom wzrośnie diametralnie. Często jest to taka patologia, że grzechem jest czytać bez adblocka.;"
"Od wielu lat, wszystkie skrzynki pocztowe w domyślnej konfiguracji mają folder ""spam"" i jakiś algorytm wydzielający spam. Żeby było jeszcze ciekawiej, są tacy dostawcy usług e-mail, w których nie ma możliwości tego wyłączyć, np. WP.pl. Ja, już dawno temu, całkowicie wyłączyłem ten automat, a stosuję sztywne reguły, które w sposób skuteczny i niezawodny odrzuca część spamu. Każda reguła jest taka, że wszystkie maile z konkretnym adresem nadawcy lub konkretnym ciągiem znaków w temacie mają być automatycznie przenoszone do kosza i to działa. Jak zacznie się regularnie pojawiać spam z konkretnego adresu e-mail, to dopisuję kolejną regułę. Co prawda, w ten sposób nie wszystkie śmieci same zniknął, ale, co ważne, żaden ważny mail nie umknie, a o to chodziło. Automatyczny filtr spamu myli się w obie strony, czyli zarówno nie każdy śmieć przeniesie do ""spam"", jak i od czasu do czasu przeniesie do ""spam"". Konieczność zaglądania do folderu ""spam"", bo czasem może tam trafić ważny mail sprawia, że całe to filtrowanie przestaje mieć sens, bo i tak obserwuję dwa foldery. To żadna różnica, czy dodatkowy folder nazywa się ""spam"", czy ""odebrane2"". Jednego dnia dostaję ok. 5 śmieci, góra 10 poza regułami przekierowania. Nie wiem i nie interesuje mnie, ile oprócz tego dostaję śmieci automatycznie przechodzących do kosza dzięki ręcznie ustawionym regułom regułom. Już po temacie i adresie nadawcy widać, że to śmieć, a zaznaczenie i wyrzucenie do kosza trwa kilka sekund. Pytanie jest proste: Jaki ma sens ""inteligentny"" filtr spamu, skoro i tak trzeba zaglądać do folderu ""spam"" i własnymi oczami ""filtrować"" spam i zaznaczać śmieci, żeby kliknąć przycisk ""usuń""? Jeżeli robię to sam, to co za różnica, czy robię to w folderze ""odebrane"", czy w folderze ""spam""? Skąd taka popularność tych automatów pomimo ryzyka przegapienia czegoś ważnego? Tym bardziej, że śmieci otrzymywane z określonego adresu lub zawierające charakterystyczne słowa, można wyciąć w sposób prosty i niezawodny. Działanie automatu można porównać do następującej czynności domowej: Mam jakiś przedmiot, który na pierwszy rzut oka wydaje się być niepotrzebny, więc wyrzucam go do kosza na śmieci, mimo, że nie mam pewności, że nie przyda się i mogę wyrzucić. Przed wyniesieniem śmieci do śmietnika przeglądam zawartość kosza, bo może jednak w koszu jest jakiś przedmiot, który mi się przyda. Czy taki sposób postępowania ma sens? Ja do kosza wyrzuca tylko to, co na pewno nie jest potrzebne i nigdy się nie przyda, a przy wynoszeniu do śmietnika nie sprawdzam zawartości kosza.;"
"Dzień dobry! Mam 14 lat i ostatnio pomyślałem sobie: ""Chciałbym się nauczyć programowania, jeśli będę się czuć w tym dobry i będzie mi to sprawiać fun to może będę pracować jako programista"". No i mam zamiar się zacząć uczyć od przyszłego tygodnia już mniej więcej mam plan nauki  jak poznać podstawy podstaw programowania. Jednak też pojawiają się w głowie liczne wątpliwości i pytania... Sztuczna inteligencja rozwija się prężnie. Teraz nie stanowi żadnego zagrożenia dla programistów. Ale co będzie za 5, 10 15 lat? Czy jako nastolatek warto myśleć o wiązaniu kariery z programowaniem? Myślę, że sztuczna inteligencja się tak rozwinie że będzie w stanie myśleć tak jak człowiek, czyli nie tylko klepać kod ale też będzie w stanie dostosować się do problemu jaki przed nią stoi i rozwiązać problem tak jak człowiek - czyli będzie mogła zastąpić człowieka (jak coś to jestem zielony w temacie programowania i na chwilę obecną nie napisałem żadnego kodu i jedynie co zrobiłem to obejrzalem kilka krótkich filmików na YT na temat programowania, więc mogę się bardzo mylić). Nie chcę żeby teraz w liceum przygotowywać się do matury informatycznej a potem iść na studia informatyczne i poświęcać swój czas na coś co okaże się bezużyteczne bo sztuczna inteligencja wyparła programistów i nie ma dla nich miejsc pracy i tak naprawdę te wszystkie lata edukacji poszły na marne. Stąd właśnie takie moje wątpliwości.;"
"Jakbym wiedział co będzie za 5, 10 i 15 lat to bym został wróżką a nie programistą.;"
"Ja widzę to tak. Na początku nie będzie różnicy.  najpierw zmieni się sposób programowania (nowe narzędzia i języki programowania). Jest juz np Copilot itp. potem będzie spadek zapotrzebowania na nowych programistów. następnie oprogramowanie się skomplikuje jeszcze bardziej i znowu będzie ssanie na nowych ludzi w branży. (tak jak z odkurzaczem, jak go wymyślono to ludzie zamiast mniej czasu spędzać na sprzątanie, podnieśli standardy czystości, w tym samym czasie robi się więcej). na koniec AI osiągnie poziom komputerów ze StarTreck i programowanie będzie się sprowadzało do podawania wymagań przez omówienie problemu z AI i  programiści staną się zbędni tak samo jak kiedyś telefonistki w centralkach telefonicznych. Przetrwają tylko ci najbardziej wyspecjalizowani i ogromnej wiedzy i umiejętnościach.  Pytanie ile to zajmie czasu doście do ostatniego punktu? 5 lat czy 30 lat? A jeszcze ostatni punkt:  na sam koniec AI stworzy następcę Facebook/TikTok/Instagram, która będzie tak uzależniająca, że ludzie zapomną o popędzie płciowym lub nawet o jedzeniu, więc ludzkość wyginie na własne życzenie. Wtedy już nawet jeśli będą jeszcze potrzebni ludzcy programiści, to nie bezie ich skąd wsiąść, bo przetrwają jedynie Mormoni i ostatnie dzikie plemiona z Amazonii;"
"Powiem Ci, że proste rzeczy jak HTML do artykułów już ogarniamy przez AI. Jeszcze pół roku temu płaciliśmy za to ludziom. Kawałek kodu + integracja z GTP i kilkanaście tysięcy miesięcznie zostaje w kieszeni. Także uważam, że ci co wykonują proste rzeczy, czyli takie które można wykonywać zgodnie z instrukcją zostaną a nawet już są zastępowani przez AI i kawałek kodu napisanego przez bardziej ogarniętego pracownika. Jeśli SEO podpiąć pod IT to już właściwie tam mają pozamiatane - zostają tylko najlepsi. Copywriter'zy właściwie już w ogóle potrzebni. Programowanie jednak wciąż będzie istniało nawet za 50 lat aczkolwiek wyglądać będzie zdecydowanie inaczej. Kiedyś dziurkowało się karty, teraz siedzisz wygodnie w fotelu przed kolorowym IDE rozciągniętym na zakrzywionym ekranie 42"" używając gotowych bibliotek 3D tylko po to by Twój wykres ładnie wyglądał na prezentacji a wewnętrzne mechanizmy podpowiadają Ci składnie, poprawiają błędy itp.. itd... Nie da się ukryć, że osoby, które dziurkowały karty już dawno nie są potrzebne - programowanie w tej postaci właściwie nie istnieje ale istnieje w nowej wówczas wręcz niewyobrażalnej formie. Dobry programista to osoba, która potrafi myśleć, wykorzystywać dostępne narzędzia by tworzyć z nich nowe rzeczy. Na takich będzie zawsze zapotrzebowanie. Nie będzie natomiast potrzeby koleś rzemieślnik co ""naumiał' się wszystkie komendy CSS i 32 frameworki JavaScipt... Bo pewnie taką robotę doskonale wykona AI.;"
"Ktoś tak czy siak będzie musiał utrzymywać te systemy wykorzystujące AI oraz samo AI (naprawiać bugi i dodawać ficzery), więc programiści zawsze będą potrzebni. Co najwyżej nastąpi kolejne przebranżowienie, ludzie z pozycji klepaczy kodu przesiądą się na klepaczy wymagań. Nie ma się co obsrywać i wierzyć w te medialne brednie, jakoby AI miało zabrać wszystkim pracę i w ogóle nas pozabijać swoją zajebistością. ;);"
"Ta AI, która jest teraz, zastąpi sporo programistów, ale nie tyle ile nam się wydaje: a:) myli się b:) ma mały kontekst, kilkadziesiąt tysięcy słów? Oczywiście sytuacja jest dynamiczna;"
"Rozwój techniczny jest szybszy niż kulturowy czy społeczny. Np. potrzeba było aż pandemii, żeby firmy przeszły na pracę zdalną, a teraz i tak wiele firm powraca do pracy stacjonarnej bądź hybrydowej. Ludzie lubią być ludźmi - komunikować się twarzą w twarz (nawet przez kamerkę) itp. Więc potencjalna AI będzie miała utrudnione zadanie. Bo programowanie to nie tylko klepańsko kodu, ale w dużej mierze komunikacja z ludźmi, klarowanie wymagań. Żeby zastąpić programistów, należałoby również zastąpić całą kulturę w firmie i dostosować ją do potrzeb AI. Tak, żeby biznes rozmawiał bezpośrednio z AI, a ona by wykrywała również mowę ciała, emocje oraz używała jakichś heurystyk, żeby odcyfrować, co chce biznes i formułowała własne hipotezy. Plus to, że poza komunikacją, programista też musi umieć rozkminiać coś, przewidywać przyszłe problemy, naprawiać bugi, myśleć o architekturze kodu, zastanawiać się, czy czegoś nie da się prościej zrobić, to też nie jest hop siup, że naklepiesz kod i on będzie. Nie wiem, czy obecnie AI jest w ogóle na takim poziomie. Bawię się czasem ChatGPT 3.5 (w tej darmowej wersji) i to jest mega-imponujące biorąc pod uwagę, że to komputer wymyśla, jednak jeśli to porównać do człowieka, to ChatGPT to taki wyuczony przygłup, który dużo widział i dużo podpowiada i może być przydatny jako chodząca encyklopedia, ale jednak nie potrafi myśleć głębiej, podejmować bardziej głębszego rozumowania, a jak czegoś nie wie, to zmyśla. Gdyby ChatGPT byłby człowiekiem, to strach byłoby takiego zatrudnić.;"
Udział AI będzie rosnąć w rynku ale póki co to co ona oferuje to za mało żeby mówić o rewolucji. Chyba że jako rewolucję uznajemy stworzenie obrazka Godzilli z wielki bimbałami. Copilot miał być taki super i tak ułatwiać a tymczasem wolę używać tego pseudo AI które daje mi za free MS bo copilot mi dawał parę snipetow tak naprawdę które mam w necie;
",,Myślę, że sztuczna inteligencja się tak rozwinie że będzie w stanie myśleć tak jak człowiek"" -  A więc musisz nauczyć się myśleć (może nawet żyć) jak nieczłowiek. Wówczas AI nie będzie dla ciebie żadną konkurencją.;"
"Jestem w tematyce SI dość ogarnięty i mogę powiedzieć jedno. SI będzie zastępować ludzi w pracach umysłowych i to coraz szybciej i szerzej.  Będzie lepsze i tańsze. Zawody takie jak fach w rękach utrzymają się najdłużej a nie zawody umysłowe (tutaj będą i już są przetasowania). Naucz się stolarstwa, hydrauliki, elektryki to będziesz miał pewność pracy i dobrze płatnej do końca życia. Każdy zawód umysłowo technologiczny natomiast będzie pod dużym znakiem zagrożenia na rzecz SI. To jest normalny rozwój technologii i techniki i kolej rzeczy. Informatyk może mieć pewniejszą pracę niż programista nawet na najbliższe naście lat. Dziś jak bym się mógł cofnąć do lat nauki - to bym wybrał kierunki techniczne z fachem w rękach a nie głowie. Obecnie już zarobiłem tyle, że teoretycznie mógłbym żyć i nie pracować na tym samym poziomie.. ale teoria praktyka zawsze się rozchodzi w szwach... dzięki polityką i ich szkodliwych działaniach. A na pewno nam sprawią jakiś kocioł za 2- 5 lat.;"
@Cimron: bez urazy ale z dwa dni temu nie potrafiłeś znaleźć w internecie czym różnią się dwie funkcje w WordPressie które edytowaly CSS więc powątpiewam w to ogarnianie AI prze ciebie.;
"Może po prostu ktoś powiedział ""król jest nagi"". Ludzie myśleli, że wykonują zawód intelektualny, a w rzeczywistości robili coś rutynowo, co AI może zastąpić za pomocą zwykłej statystyki i przewidywania wzorców. Jednak zawód umysłowy to dzisiaj zwykle zawód społeczny. Potrzebni tak czy siak będą ludzie, żeby gadali z innymi ludźmi, zbierali wymagania, a potem ""gadali"" z komputerem, tłumaczyli z ludzkiego na komputerowe i odwrotnie. Dzisiaj się to nazywa programista, jutro może się to nazywać prompt engineer. Myślę, że całkowita rewolucja będzie wtedy, jak AI będzie potrafiło samo zaprojektować apkę, oraz ją zaimplementować w całości i rozwijać (reagując na feedback od użytkowników), ale na razie o tym chyba się nie mówi jeszcze. AI dzisiaj używa się miejscowo, a nie całościowo. A wyobraźcie sobie usługę, gdzie zamawiasz grę np. mówisz zrób mi MMORPG dziejące się w klimatach średniowiecznej Polski i komputer robi. A potem mówisz przerób, żeby był większy nacisk na ekonomię, a mniej na walki i komputer zmienia. To dopiero byłoby AI.;"
Tutaj ktoś fajnie opisał jak to działa https://wszystkoconajwazniejsze.pl/andrzej-kisielewicz-bajki-o-sztucznej-inteligencji-i-prawdziwe-zagrozenia/ Jesteśmy na fali hype. Zobaczymy co będzie dalej. Ale na ten moment copilot który jest dodany do projektu ma wgląd w kod źródłowy często się myli. Jak ma to budować całe systemy ? Jeszcze trochę czasu upłynie. PS Venkat fajnie napisał https://x.com/venkat_s/status/1728325213551820970?s=46&t=ieQrpj0cEXH-oU7sLcR1hg;
"No to siądź, zacznij się uczyć. Masz jeszcze ~10 lat do wejścia na rynek pracy. Nikt ci nie zagwarantuje w tej chwili, czy za 10 lat rynek pracy będzie wyglądał lepiej, czy gorzej niż dzisiaj. Jak by nie było, to zachodnia cywilizacja oparta jest na wiedzy i tym, że potrafimy zrobić coś, z czym jeszcze sobie nie radzą w Indiach, lub Chinach. Programowanie, czy ogólnie inżynieria zmienia perspektywę, przez jaką postrzegamy świat i rozwiązujemy problemy i jest to bardzo przydatne w świecie opartym na technologii.  Nikt nie wie jak rozwinie się AI i który obszar naszego świata zmieni. Jak na razie przez komputeryzację i AI oberwali przypadkowi ludzie. ~25 lat temu księgowość była dobrze płatnym zawodem, w którym była duża liczba miejsc pracy, bo każda firma musiała prowadzić księgi rachunkowe ręcznie. Każdy zakup dziurkacza powodował, że ktoś musiał wystawić fakturę, ktoś inny musiał ją przeczytać, sklasyfikować i zaksięgować wg. schematu na kilkunastu kontach księgowych ręcznie (długopisem). Co roku, te tłumy księgowych robiły przez miesiąc, lub 2 ""bilans"", czyli podliczały kartki i sprawdzały, dlaczego suma z jednej z nich nie zgadza się z sumą na innej. W momencie pojawienia się komputerów z programami do księgowania i fakturowania, ilość ten pracy zmalała o ~80%, bo masa ręcznie wykonywanych czynności robiła się ""sama"". Gdybyś wtedy zapytał księgowych o to, czy za 30 lat będą potrzebni, odpowiedzieliby ""gdzie tam, to przecież praca na zawsze, komputer tego nie ogarnie"". Taksówkarze 15 lat temu, mówiliby, że to praca na zawsze, bo trzeba znać miasto, trzeba wiedzieć gdzie najlepiej czekać na klienta, a ludzie będą zawsze potrzebowali taksówek. Potrzebują nadal, tylko taki Uber sprawia, że taksówkarz zamiast stać na postoju przez większość swojego czasu pracy dostaje zlecenie na odebranie klienta kilometr dalej i zanim go dowiezie, to już wie jakie będzie następne. To sprawia, że teraz pracuje efektywnie przez większość swojego czasu pracy, co za tym idzie potrzeba mniej taksówkarzy. Kiedy wejdą samochody autonomiczne (bo wiadomo, że wejdą, nie wiadomo kiedy), taksiarze przestaną być potrzebni. Właściwie już teraz chronią ich jedynie regulacje tej działalności w EU. 10 lat temu, bankowość była traktowana jak eldorado. Na kierunkach bankowych tłoczyli się ludzie. Główna ulica mojego miasta była zapełniona oddziałami różnych banków. Jak chciałeś wziąć kredyt, trzeba było tam pójść, pogadać, dostać kwitek, pójść do pracy, żeby wypełnili, trzeba było wrócić, wypełnić wniosek zaczekać na jego rozpatrzenie, wniosek ""leciał"" do centrali, ktoś go sprawdzał, oceniał twoją zdolność kredytową, wracał i dostawało się kasę. Dzisiaj placówek bankowych, w których pracował tłum ""specjalistów od obsługi klienta"" nie ma wcale. Wszystko załatwia się przez Internet, nawet ten wniosek kredytowy jest analizowany automatycznie. Specjaliści musieli poszukać roboty w innych miejscach. Z drugiej strony, bezrobocie mamy aktualnie na poziomie śladowym, więc wszyscy ci ludzie gdzieś znaleźli pracę.  Lata edukacji nigdy nie idą na marne. Przed sobą masz wybór profilu liceum. Wszystko i tak sprowadza się do zdecydowania się pomiędzy ""nie wiem co mam robić"", ""lubię język polski"", ""lubię chemię i biologię"", ""lubię matematykę i fizykę"". Szkoły wyższe na kierunkach technicznych patrzą na wyniki matury z informatyki albo fizyki. Jeżeli wybierzesz sobie informatykę i zrobisz wynik, będziesz miał dokładnie taką samą szansę dostania się na budownictwo, budowę maszyn jak ktoś kto ma taki sam wynik, tylko z fizyki. Czyli wyluzuj, jak interesuje cię technika, to idź na profil ścisły (jak by się nie nazywał). Ostatecznego wyboru i tak dokonuje się w połowie liceum. Ogarnięcie przedmiotów ścisłych daje dość szerokie możliwości wyboru studiów później.;"
"Moim zdaniem nie, bo jak wielki model by nie był i tak nie potrafi zrozumieć konceptu ""wartości dodanej"" i nie potrafi komunikować się z innymi ludźmi. Jest świetnym narzędziem, jeśli chodzi o search i pisanie jakichś boilerplate, ale po dużej infrastrukturze wewnętrznej już jest kłopot i koniec końców to człowiek jeszcze długo będzie musiał łączyć kropki ze sobą. Nie wspominam już o czymś takim jak odpowiedzialność. Poza tym jak Wy to sobie wyobrażacie? Że biznes wpuści do siebie i da wgląd wewnątrz tego, co się dzieje właścicielom jakiegoś rozwiązania AI, ujawniając wszelkie know how i sekrety własnego biznesu? Nie wiem, ale się domyślam.;"
"Myślę, że zawsze warto uczyć się programowania. Nawet jeżeli nie zostaniesz programistą, to zdobędziesz uniwersalne umiejętności takie jak umiejętność uczenia się, myślenie analityczne oraz dzielenie dużych problemów na mniejsze. Jeżeli będziesz w stanie przenieść te umiejętności na inne dziedziny życia, to osiągniesz sukces w każdej branży, również w tym przysłowiowym ""fachu w ręku"". Jeżeli chodzi o AI, to na ten moment jest to narzędzie, które znacznie zwiększa moją produktywność.;"
W punkt. Rozkładać to każdy potrafi (a entropia jeszcze lepiej) ale co z syntezą? Jeśli sztuczna inteligencja jest rzeczywiście bardzo dobra w syntezie to my programiści jako analityczni rozkładacze i ona jako sztuczny syntezator znakomicie się uzupełnimy. A na końcu staniemy się jednym ciałem.;
A to czasami nie nie wystarczy pouczyć się matematyki? Juz chyba lepiej po prostu pouczyć się excela z vba/python niż samego pythona. Prędzej się przyda.;
"Chciałem stracić chwilę czasu na zabawę, Pomysł: Jak sterować grą Mario za pomocą AI ? pierwszy wynik z YT Zainstalowałem python-a, otworzyłem przykładowy plik w visual studio code i pojawiły sie dość szybko problemy pip install torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio===0.10.1+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html ERROR: Could not find a version that satisfies the requirement torch==1.10.1+cu113 (from versions: 2.0.0, 2.0.1) ERROR: No matching distribution found for torch==1.10.1+cu113  W programowaniu wersje tak szybko sie zmieniają :D Ktoś może mi polecić jakiś inny tutorial który jest aktualny, w podobnej tematyce raczej prosty dla początkujących ?;"
"Witam wszystkich, Zarwałem noc, ale dokończyłem pierwszą wersję Dorbana, to demo oparte na moim języku o nazwie Svarog, o którym już Wam pisałem. Dorbana można ściągnąć z https://sourceforge.net/projects/dorban/ a Svaroga (będzie potrzebny) z https://github.com/pawelbiernacki/svarog. Celem zabawy jest zabicie wampira. Tak naprawdę nie da się go zabić, można tylko starać się go atakować. Chodzi o to, żeby mieć możliwie duże szanse. Jest pięć miast połączonych krawędziami, taki prosty graf. Użytkownik gra Pregorem, który ma nadludzkie możliwości (może nawet teleportować się do dowolnego miasta niezależnie od tego gdzie jest). Może też się zabić i zmartwychwstać. Drugim graczem jest Dorban, kontrolowany przez interpreter Svaroga. Stara się on namówić Pregora, żeby mu towarzyszył, a poza tym stara się znaleźć wampira i atakować go. Wampir się nie rusza, ale i tak jest ciekawie. Jeżeli Dorban namówi Was, żeby mu towarzyszyć należy używać menu itema ""follow orders"" żeby wykonywać jego polecenia. Zawsze można zmienić zdanie i po prostu odejść. To demo jest przeznaczone raczej dla osób, które interesują się Sztuczną Inteligencją. Na mojej stronie www.perkun.org opisuję jak skonfigurować Svaroga tak, żeby działał trochę szybciej, przy użyciu svarog-daemon'ów. To się odnosi również do Dorbana. Niestety Dorban jest stosunkowo wolny, ja korzystam z trzech/czterech maszyn i jeden ruch potrafi zająć kilkadziesiąt minut.;"
"Rozumiem, że nie chce Wam się zajmować programem, który działa tak wolno. Ale dokonałem pewnego odkrycia, które znacznie przyspieszy dorbana. To delikatna kwestia, ale pozwolę sobie na takie porównanie - odkryłem coś w rodzaju ""religii"" dla moich inteligentnych agentów. Dzisiaj zrobiłem release nowego Svaroga (wersja 0.0.4), która potrafi z normalnej specyfikacji zrobić specyfikację zawierającą ""prekalkulowaną wiedzę"" w formie reguł, W praktyce piszemy najpierw specyfikację, a potem zapuszczamy komputer na kilka dni żeby ją przeanalizował. W rezultacie mamy zbiór reguł postaci: <stan_widoczny> x <belief> -> <optymalna_akcja>  Ten pierwszy zbiór jest niewielki, w przypadku dorbana zawiera 120 elementów. Drugi (zbiór beliefów) jest niestety ciągły i, zależnie od ilości możliwych stanów dla danego stanu widocznego jest n-wymiarową hiperkulą. Wpadłem na pomysł, żeby go zdyskretyzować. Na przykład dla trzech stanów i parametru, który nazywam granularity (ziarnistość) o wartości 2 mamy następujące punkty w tej hiperkuli:  (0,0,1) (0,1,0) (0,1,1) (1,0,0) (1,0,1) (1,1,0) (1,1,1)   Właściwie to jest hiperkostka (hypercube), akurat tutaj trójwymiarowa. Po normalizacji (bo beliefy są rozkładami) otrzymujemy:  (0.0,0.0,1.0) (0.0,1.0,0.0) (0.0,0.5,0.5) (1.0,0.0,0.0) (0.5,0.0,0.5) (0.5,0.5,0.0) (0.33,0.33,0.33)   Czyli w tym  wypadku wystarczy siedem reguł, żeby pokryć całą trójwymiarową kostkę dla danego stanu widocznego. Niestety zdarza się, że ilość możliwych stanów jest tak duża, że nawet dyskretyzacja nie pomaga. Wówczas Svarog zaznacza, że dany stan widoczny jest zbyt złożony (too complex). Wtedy żadnych reguł nie generuje, ale to nic nie szkodzi. Nazywam to ""religią"" bo moje reguły zawierają tylko informację o optymalnej akcji, bez żadnego uzasadnienia, ale obliczoną dla dużej głębokości drzewa gry (właśnie teraz mój komputer liczy tą prekalkulowaną wiedzę dla głębokości drzewa gry 4). Jeżeli sobie ściągniecie nowego Svaroga - https://github.com/pawelbiernacki/svarog wówczas w katalogu examples znajdziecie plik example6_precalculated.svarog. On zawiera właśnie taką prekalkulowaną wiedzę, niestety tylko dla głębokości 1. Po dyskretyzacji zbioru beliefów mamy pewną ilość reguł z n-wymiarowymi punktami reprezentującymi beliefy. Łatwo więc w trakcie planowania użyć kartezjańskiej miary dystansu od prawdziwego beliefu, na przykład dla trójki (0.25,0.25,0.5) najbliższy będzie punkt (0.33,0.33,0.33). Taka specyfikacja z prekalkulowaną wiedzą jest wprawdzie spora, example6_precalculated.svarog zawiera 2144863 bajtów czyli trochę ponad dwa mega, ale dobra wiadomość jest taka, że już nie urośnie (po zwiększeniu głębokości drzewa gry, czyli ""inteligencji""). Czyli dla dowolnej specyfikacji Svaroga możemy kazać komputerowi prekalkulować wiedzę (wygenerować nową specyfikację z tymi regułami) i choćby to trwało miesiąc - za to w czasie wykonania svarog (a więc i dorban) będzie śmigał. Przepraszam, że piszę w sumie sam do siebie. Chciałem tylko powiedzieć, że kiedy skończę obliczenia udostępnię dorbana 0.0.1, który będzie dużo szybszy. Wtedy będziemy mogli skupić się na sensie całego eksperymentu.;"
"Witam wszystkich, Ostatnio zainteresowało mnie zagadnienie sztucznej inteligencji a w szczególności sieci neuronowe. Szukam w tym celu materiałów i literatury, która przybliży mi te zagadnienia. Macie może jakieś książki lub inne źródła, które spodobały się wam i możecie polecić? Z góry wielkie dzięki.;"
"Witam piszę z zapytaniem czy jest możliwe renderowanie grafiki 3d z obrazu kamery 3d I do tego napisać zawansowaną sztuczną inteligencję rozpoznającą. Np nauczyło by się ją ruchomych przedmiotów.np. To jest szafa. To jest telewizor. I połączyć z uczniem maszynowym i kojarzenie np. Telewizor stoi na szafie szafa stoi na podłodze, podłoga zrobiona jest z drewna. Oczywiście skojarzenia były by bardzo zaawansowane na poziomie molekularnym. Edit mój Facebook inspiracja. https://m.facebook.com/burnspice.  Czy jestem w stanie zebrać tu ekipę która to pomoże mi to napisać.;"
"""Sztuczna inteligencja rozpoznająca przedmioty"". Zaintereseuj się tematem Computer Vision OpenCV - do machine learning musisz się zapoznać z Tensorflow, Scikit-Learn, Keras i Pytorch itp. a Computer Vision poznać z tego rodzaju tematów i filmików tu https://towardsdatascience.com/computer-vision-instance-segmentation-with-mask-r-cnn-7983502fcad1 - Polecam do tego nauczenie się Pythona bo on dobrze się nadaje do AI i do dzieła z wynalazkiem. Tu jak w praktyce wygląda Computer Vision w przypadku programowania drona w Pythonie;"
@TrexBoy: ale co właściwie chcesz osiągnąć? Nauczyć AI jak działa świat?;
"najpierw trzeba byłoby rozkminić czym właściwie jest zrozumienie i jak je zaprogramować. Potem to już powinno być z górki :) Żeby móc komuś coś wytłumaczyć, trzeba mieć z tym kimś (czymś) przynajmniej minimalną wspólną bazę pojęciową, inaczej nasze próby tłumaczenia będą dla AI tylko pustymi hasłami. Największym projektem, który miał stworzyć taką bazę, jest Cyc, jednak pomimo wielu lat pracy i sporej ilości środków, nie wydaje się, aby odniósł on większy sukces. Chyba jedyny udany projekt, o którym można powiedzieć, że w jakimś sensie rozumie swój mikroświat, to zapodany tu przez @Freja Draco SHRDLU.;"
"@TrexBoy:  Znowu odstawiłeś leki? Niech zgadnę, AI znasz tylko z filmów sci-fi ale nigdy nic nie zaprogramowałeś w życiu?  https://pl.wikipedia.org/wiki/Chi%C5%84ski_pok%C3%B3j - problem polega na tym, że nie potrafimy stworzyć silnej AI która ""rozumiałaby"" cokolwiek i w sumie nie wiadomo czy w ogóle da się coś takiego zrobić. AI czy ML którym dysponujemy to nic innego jak rozpoznawanie wzorców ale nie ma absolutnie nic wspólnego z jakimkolwiek ""rozumieniem"" czegoś.;"
"Mam odczucia, że ten temat to kolejna prowokacja :P Nie wiem czy celem było rozbawienie kogoś tymi rysunkami, czy po prostu OP oczekuje, że ktoś ""zainspiruje się"" jego postami i spełni jego marzenie/wizję. Niedawno siedział tutaj użytkownik wrzucający jakieś losowe zagadnienia matematyczne, ot tak ku ""pochwaleniu się"" i chęci wywołania dyskusji. Może razem się dogadacie? Rysunki to moje myśli :p Marzenie, wizja. Hm coś w tym jest. ``  @TrexBoy: ale co właściwie chcesz osiągnąć? Nauczyć AI jak działa świat? Tak jak działa i jak jest zbudowany. To podstawa programu AI. Jądrem będzie, było by to żeby ona się tego uczyła zadawając pytania i rozmawiając z nami . Tak właśnie mniej więcej o to mi chodzi. Drugie jądro to były by emocje, uczyła by się ich z wyrazu jaki reprezentujemy. Kolejna grafika (myśl) nasza szafa będzie to tak jakby jedna z tych kostek    images.jpeg (6 KB) - ściągnięć: 3;"
"Cześć, powoli przymierzam się do wyboru tematu pracy inżynierskiej - zwykle napisanie jej trwa semestr, ale ja chcę dać sobie więcej czasu i (póki co) planuję wybrać temat teraz, a bronić się w sesji letniej za rok. I tu zaczyna się mój problem - w proponowanych tematach pojawił się temat, którego celem jest napisanie oprogramowania do wykrywania deepfake'ów. Temat wydaje mi się bardzo ciekawy, ale kompletnie nie wiem, co już powinnam umieć, żeby się w ogóle za niego brać (w planach studiów jest przedmiot 'metody sztucznej inteligencji' ale jeszcze go nie miałam). Rozmawiałam z potencjalnym promotorem ale niewiele mi wyjaśnił, na nic nie nakierował polecił się zgłosić jak się zdecyduję. Ale właśnie - sama nie wiem na ten moment w co bym się wpakowała, wybierając taki temat. Zapytałam o jakąś ""literaturę"", cokolwiek co pozwoli mi się zorientować z czego takie oprogramowanie się powinno składać, czy coś - ale usłyszałam, że temat jest nowy i niewiele na ten temat znajdę. Czy ktoś z Was orientuje się w takiej tematyce i może mi jakkolwiek nakreślić, z jakimi tematami powinnam się zapoznać? Chcę się po prostu zorientować, czy to jest coś dla mnie, z czym będę w stanie sobie poradzić.;"
"@koszalek-opalek: no właśnie - temat jest na liście tematów inżynierskich więc - wydaje mi się - że jest opcja, że pisze się część takiego oprogramowania a nie całość (czasem przy innych tematach jest właśnie zaznaczone, że do wykonania jest część danego oprogramowania). I też się zastanawiam, czy to już nie jest próbka tego, jak będzie wyglądała dalsza współpraca :/ Tematów na stronie wydziału jest więcej - ale takie powiązane ze sztuczną inteligencją (póki co :( ) są prowadzone tylko przez tego promotora :/;"
"Tematów na stronie wydziału jest więcej - ale takie powiązane ze sztuczną inteligencją (póki co :( ) są prowadzone tylko przez tego promotora :/ Rozumiem, że musi być AI? :) Jeśli tak, to zostaje ten promotor -- ale może warto wybrać coś prostszego, bo mimo, że ciekawe, to może być później zniechęcające, szczególnie, jak będzie się trudno dogadać...;"
"wydaje mi się - że jest opcja, że pisze się część takiego oprogramowania a nie całość I tak pewnie będziesz musiała zrozumieć jak to wszystko działa, a nie tylko Twoja część oprogramowania... Bo częściowo, bez zrozumienia tematu to co byś mogła zrobić? Napisać GUI, w którym otwieramy film i ten przekazuje poszczególne klatki tego filmu do AI napisanego przez kogoś innego? To by nie było takie trudne. Ale temat pracy nijak by się miał do Twojego wkładu :];"
"Cześć, jestem obecnie uczniem liceum, jestem w klasie maturalnej, i za parę miesięcy będę stał przed ważną decyzją wyboru uczelni. Programowania troszeczkę liznąłem(mam na myśli ""g**no"" mini programy typu +/-100 linijek w pythonie), i wiem, że chciałbym iść w kierunku sztucznej inteligencji. Jak chodzi o samo dostanie się na uczelnie, to pomińmy to na potrzeby tego wątku :) Zanim przejdziecie dalej to tak, mam świadomość, że studia dają wiedzę przekrojową, i że będę musiał się samemu w wiele tematów zaangażować. Chęci do nauki mi nie brakuje, tylko mam straszny mętlik w głowie. Zwracam często swój wzrok w stronę AGH i kierunku ""informatyka i systemy inteligentne"", jednak mam trochę wątpliwości, ponieważ na ten kierunek kwalifikuję się samą matmą, z którą problemu nie mam, a na 2. i 3. semestrze wchodzi fizyka, która w moim przypadku skończyła się w momencie przyjścia do szkoły średniej, i boję się, że po prostu przez to ""zakończę studencką karierę"", bo jak wiem, nie jest ona prowadzona ""od początku"".  [Jeśli jest ktoś kto ma opinie na ten temat to chętnie poczytam :P] Rozważałem oprócz AGH m.in.: Uniwersytet Jagielloński, Uniwersytet Adama Mickiewicza, Uniwersytet Warszawski. [Politechnik nie biorę pod uwagę, gdyż jw. wspominałem, nie mam w szkole fizyki rozszerzonej i nijak nie dam rady się przygotować do matury z niej, ucząc się jednocześnie innych dwóch rozszerzeń, na których mi zależy] Dlatego pojawia się u mnie wiele niewiadomych związanych z objęciem adekwatnej ścieżki nauki, z tego powodu mam do was kilka pytań: Jeśli chcę iść w tym kierunku, to jakich studiów najlepiej się podjąć(proszę o sugestie typu, która uczelnia, a jeśli już dana uczelnia to jaki kierunek i dlaczego byście polecili; wszelkie opinie mile widziane), co potrzebne mi najbardziej?  Jaka była wasza droga, oraz co byście mi polecili, gdybyście byli na moim miejscu?;"
"AI w Polsce to trochę kpina. Obecnie AI rozwija się nie na uczelniach ale w prywatnych przedsiębiorstwach (Google, AMZN, FB). Podstawowe wymagania do robienia AI:  Dużo danych (w H dużo danych, im więcej tym lepiej) Moc obliczeniowa Polskie uczelnie 1 nie posiadają (bo i Polacy za dużo nie generują) a na 2 ich nie stać. Także będziesz robił na jakimś klasterku uczelnianym z limitem czasu 4h przetwarzanie 1TB danych, nic produktywnego z tego nie osiągniesz.  Polskie uczelnie nie są też wiodącymi instytucjami pod względem czegokolwiek, więc jakość prof'ów jest taka że sami coś gdzieś przeczytają i potem powtarzają ale badań w kierunku innowacyjnego AI nie robią. Najlepsza droga to jak najszybciej przenieść się na uczelnie zagraniczną, zrobić Phd i zatrudnić się w jakimś korpo R&D (Research & Development Center). I dopiero wtedy można zacząć robić ciekawe rzeczy. Inaczej nie oszukujmy się USA i Chiny są w materii AI daleko przed nami...;"
"Witam. Czy nasz zawód jako webdevów jest zagrożony przez AI? Typu niedługo aplikacje webowe będzie można opisać gdzieś i sztuczna inteligencja taką apkę ""wyprodukuje""? Proszę podejść do tematu poważnie, a nie na zasadzie życzeniowości, że ""chcemy"" żeby tak nie było i racjonalizujemy sobie w głowie, że tak nie będzie i szukamy wszelkich dowodów potwierdzających naszą teorię. Podam przykład:  Wiadomo, że ten przykład raczej nie zagraża nam, ale może za np 10-15 lat naprawdę nie będziemy potrzebni ;D;"
"Na dzień dzisijeszy klienci mają zbyt niesprecyzowane potrzeby i zbyt popi$%dolone pomysły by ai to ogarniała. Jeszcze sporo wody w wiśle upłynie zanim ai nas zastąpi, ale o pracę się nie martwię, bo jak ai nas zastąpi to już nikt nie będzie pracował, będzie globalny komunizm :);"
"Jeśli pomyślisz o programowaniu jako o pisaniu bardzo precyzyjnej specyfikacji to tak - być może AI będzie niedługo generować kod źródłowy, ale nadal będzie potrzebna logicznie myśląca osoba która będzie potrafiła zrozumieć klienta, pomyśleć o szczegółach i przypadkach skrajnych i przekazać to w precyzyjny sposób komputerowi. Być może za kolejne kilkadziesiąt lat komputer będzie na tyle mądry że będzie też potrafił to, ale do tego potrzebna mu wiedza o otaczającym świecie w tym doświadczenie w pracy z ludźmi i trochę wiedzy o psychologii żeby się domyślić co ktoś mógł mieć na myśli. Jak na razie patrząc na to jak upośledzona jest alexa i google home oraz ile miliardów dolarów poszło na GitHub Copilot który okazał się prostą wyszukiwarką gotowych kodów na githubie to nie boję się tego. Nie boję się też bo jeśli nastąpi dzień w którym praca programisty zostanie zautomatyzowana to będzie to ostatni zautomatyzowany zawód na świecie i nikt już raczej nie będzie musiał pracować. Po co ludzie mieliby pracować skoro komputer będzie umiał napisać aplikację i stworzyć roboty wykonujące dosłownie wszystko. Jedynym niezagrożonym zawodem wydaje się prostytucja choć i tam obrót spada przez porno online, onlyfans a niedługo przy użyciu AI pewnie każdy będzie mógł sobie samemu stworzyć pornosa w dowolnej obsadzie i z dowolną fabułą co może się wydawać trudniejsze niż zautomatyzowanie programowania a takie nie jest. Z drugiej strony praca programisty polega w 90% jak nie więcej na ułożeniu tego wszystkiego w taki sposób żeby dało się to rozwijać, utrzymywać, testować i zrozumieć przez człowieka. Jeśli odejmiemy to i weźmiemy pod uwagę że komputerowi nie przeszkadza spaghetti code, nie musi używać żadnych wzorców i jest to dla niego tak samo zrozumiałe a także nie musi nic testować bo wygenerowany kod jest sprawdzany podczas tworzenia i z definicji od razu poprawny to nagle się włącza zółta lampka. Może nie cała branża, ale małe janusz-softy produkujące strony wizytówki są w dużym stopniu moim zdaniem zagrożone. BTW ta pani z filmiku jest z pochodzenia polką i potrafi mówić po polsku;"
I kto będzie mówił tej AI co ma dokładnie wyprodukować? I w jakim języku programowania ten ktoś będzie to tej AI komunikował?;
"jak na razie to wszelkie generatory programów komputerowych/ kodu źródłowego w praktyce okazują się słabe. na prezentacjach wyglądają bardzo imponująco, ale w momencie, gdy zderzają się z masową publiką, która w 99% chce rzeczy nieprzewidzianych przez twórców, to wykładają się i wypluwają jakiś prosty badziew. z drugiej strony, już teraz są automaty podobno zagrażające niektórym zawodom typu tzw. white collar. chodzi o https://en.wikipedia.org/wiki/DALL-E który generuje obrazki, a więc może niby pozbawić pracy grafików. są wersje dall-e, które potrafią tworzyć obiekty trójwymiarowe. obstawiam, że niedługo AI nauczy się tworzyć w miarę sensowną muzykę.;"
"Przez webdev bardziej rozumiemy design wizualny czy oprogramowanie? jedno i drugie zaszło MSZ w ślepą uliczkę *), każdy designuje ""u nas musi być inaczej"". To jakoś imponuje na wyższych stołkach w korpo (krzyżujące się zielone równoległe linie zrobione czerwonym atramentem), kosztuje miliony (z wysokiego stołka w korpo MUSI się wydawać, nie mozna oszczędzać), i wqurwia użytkowników (a ten, im głupszy, tym lepszy) Nieprzebrane zasoby polskiego e-comemrce to ładnie ilustrują, editbox w olx rotujący kursor (caret) z początku pola na koniec, wq nadgorliwe wyszukiwarki olx ale i allegro (spróbujecie znaleźć sobie jeden model stałoogniskowego obiektywu fotograficznego) Wiec to AI by dla każdego projektu musiało wymyślać okrągłe kwadraty ODMIENNE niż u reszty -  a tylko człowiek potrafi być tak głupi (być może w mocnym korporacyjnym strachu, jak ten designer od zielonych linii) *) mi to się marzy odpowiednik ruchu ""best view in any browser"" odpowiedni dla roku 2022;"
"Jak widzę takie przykłady, że ktoś coś wrzucił w AI i wypluło mu kod, to po prostu automatyzacja tego, co od lat ludzie robią za pomocą Google i StackOverflow. Czy istnienie StackOverflow zagroziło jakoś zawodowi programisty? No nie, wręcz przeciwnie. Obstawiam, że takie zabawy skończą się tym, że Microsoft i Jetbrains będą dodawać do swoich IDE jakieś machine learning (Microsoft już robi Copilota), a nie że nagle programiści zostaną zastąpieni przez AI. Już prędzej no-code zastąpią programistów, bo designerzy będą mogli wyklikać apkę i się skompiluje do HTML/CSS/JS. Tylko znowu, narzędzia no-code (wcześniej znane jako WYSIWYG) też nie są wcale nowe.;"
"Wyobraźmy sobie, że AI byłaby tak zaawansowana, żeby pozwoliła na robienie aplikacji w super łatwy sposób i zamiast zatrudnić ekipę programistów na rok, to zrobiłbyś aplikację w miesiąc ileś razy tańszym kosztem. To znaczyłoby, że powstawałoby coraz więcej aplikacji, bo nawet Janusz z małym budżetem mógłby zrobić drugiego Facebooka. Tylko widzę problem - że kto by z tych wszystkich aplikacji korzystał? Już jest za dużo aplikacji na rzeczywiste potrzeby konsumentów.;"
"Oczywiście. Natomiast wątpię, żeby to AI ogarnęło. Po prostu powstanie taki łatwiejszy do usługi WordPress, który pozwoli z łatwością wyklikać stronkę webową.;"
gdyby ai tak potrafiła robić to pewnie te aplikacje nie byłyby potrzebne ;-);
"Obstawiam, że tam, gdzie faktycznie może się przydać AI w webapkach, to kwestie analityki - wykrywanie wzorców w zachowaniach ludzi na masową skalę - to już swoją drogą się robi. Patrz choćby przykład Netfliksa: https://www.engadget.com/netflix-explains-ai-for-show-marketing-201524601.html Facebook też robi jakieś masowe testy A/B... choć nie wiem, czy używa jakiejś zaawansowanej AI... Natomiast co do samego developmentu, to obstawiam, że prędzej AI będzie robił po prostu za asystenta dla developerów. Nie zlikwiduje zawodu developera, a wręcz przeciwnie - tylko go wzmocni. No optymistycznie patrząc być może masowe zwolnienia nastąpią. Optymistycznie, bo teraz dużo rzeczy, które robią programiści, to takie menial job. Więc byłoby fajnie, gdyby AI zlikwidowało potrzebę klepania takich prymitywnych tasków, a ci lepsi programiści zajęliby się czymś bardziej ambitnym, a ci gorsi po prostu odeszliby z programowania i pojechali na zmywak czy gdziekolwiek indziej, gdzie się będą bardziej nadawać.;"
"Mam nadzieję. Chciałbym zobaczyć miny tych wszystkich bootcampowców, albo innych mniej inteligentnych gdy się okaże że już nie ma tych wszystkich stanowisk dostępnych i trzeba się uczyć czegoś trudniejszego.;"
"Hahaha AI pisze kod :D, a jak by to miało działać jak często sam klient nie wie co dokładnie trzeba zrobić ani tym bardziej jak zrobić, już widzę jak ktoś wpuszcza jakiegoś randomowego bota żeby mu coś zakodził na środowisku które jest warte miliony $$$ i jest oparte o mix technologiczny z ostatnich 30 lat. To żem się uśmiał :D;"
"AI jest na zenujacym poziomie i przez lata niewiele sie zmienilo w tym temacie. IMO sensownego AI nie bedzie jeszcze przez przynajmniej wiek. Dziekuje, pozdrawiam;"
Ciekawe czy ktoś myśli że AI będzie myśleć.;
"@obscurity: W końcu gdzieś czytam opinie zbliżona do mojej, a przynajmniej tak ją rozumiem, że implementacja (pisanie kodu) to jedynie pisanie bardziej szczegółowych wymagań, w sformalizowanej i łatwej do zrozumienia przez komputer formie. Według mnie, jedyną prawdziwą przeszkodą na drodze do zastąpienia nas (programistów) przez AI jest w tej chwili problem w komunikacji pomiędzy AI, a człowiekiem. To nie dotyczy jedynie web dev, a ogólnie całego programowania. To co robimy jako software developerzy (czy jest jakiś sensowny polski termin?), to przełożenie jakiegoś mglistego wymagania ""chcę mieć ładną stronkę"" na coś co wyświetli się w przeglądarce i będzie robiło to czego oczekuje zamawiający. Najtrudniejszym zadaniem w tym wszystkim nie jest napisanie takiego CSS, żeby jakiś element wyświetlił się na środku okna, ale wyciągnięcie od zamawiającego informacji czego konkretnie oczekuje. Jakie możliwości ta aplikacja ma mu oferować, wspomaganie się własną wiedzą, żeby uzupełnić te braki, o których zamawiający nie pomyślał. Średnio ogarnięty programista (znający język programowania, którego używa), większość czasu spędza na dowiadywaniu się co ma zrobić, a nie zastanawianiu się jak ma to zrobić. Ta druga część staje się zresztą coraz łatwiejsza, bo potrafimy sobie stworzyć wygodne dla człowieka narzędzia (języki programowania). Jestem sobie w stanie wyobrazić taki działający w oparciu o AI system, który rozmawia z zamawiającym i w czasie rzeczywistym tworzy program robiący to, czego ten zamawiający oczekuje.  Siri, chcę stronkę! ""pyk"" no ale nie taką, ja chcę sklep, a nie stronę porno ""pyk"", już poprawiam większość stron w Internecie to porno, wybrałam najbardziej prawdopodobny przypadek ok, rozumiem, ale teraz przegięłaś w drugą stronę, motywy biblijne nie pasują do seks shopu ""pyk"", już poprawiam Dużo lepiej, powiem nawet, że nieźle, ale to ma być sklep dla par i kobiet, a ty wrzuciłaś wszędzie facetów w skórach z kutasami na wierzchu... ""pyk"" Poprawiłam ""Normalna rodzina, chłopak i dziewczyna""?! I jeszcze wszystko w barwach narodowych?! Przecież oni nie bzykają, w dodatku teraz inkwizycjobot 2.0 biega po Internecie i nas spalą, albo ukrzyżują, nie wiem tylko co pierwsze.... Chcę internetowy seks shop dla heteroseksualnych par i kobiet, nie obrażający mniejszości seksualnych i bez nawiązań religijno-patriotycznych Nie znalazłam rozwiązania, które nie obraża nikogo. No dobra, to troche może... ""pyk"" No widzisz, jest ok, pastele, parka się całuje, o to chodziło. Jeszcze powiększ jej trochę cycki, a on ma miec garnitur a nie t-shirt i zrobione..;"
"Bardzo chciałbym zobaczyć tę sztuczną inteligencję w akcji, np. w takiej sytuacji.;"
"Produkcja oprogramowania to bardzo młoda dziedzina i IMHO jesteśmy jeszcze daleko przed ""erą oświecenia"". Powiedziałbym nawet, że nie mamy jeszcze nic takiego, co moglibyśmy uznać za tak podstawowy, uniwersalny i idealny konstrukt jakim jest koło w mechanice (asembler mógłby do tego aspirować ale czy jest taki idealny to nie wiem). Co jakiś czas muszą pojawiać się jakieś odważniejsze wynalazki inaczej nasza domena będzie stać w miejscu. A co do samego copilot to ma to szansę skrócić czas programisty, który potrzebuje na wytworzenie bloat kodu, jeśli uporają się z problemami licencyjnymi. Jeśli Twoją pracą jest jakieś taśmowe klepanie bloat'u to faktycznie zapotrzebowanie na Twoje usługi może się zmniejszyć, bo ludzie na takich stanowiskach będą wydajniejsi i będzie mniej takich potrzebnych. Nie zdziwiłbym się, jak masowo zaczną używać copilota na bootcampach, jeśli narzędzie przyjmie się w jakiś sposób.;"
"Tak mi jeszcze jedna rzecz przyszła do głowy, jaka AI wytrzyma nerwowo dyskusję z UX designerami...;"
"Witam wszystkich Na studiach kazali nam zrobić referat na dowolny temat zwiazany ze sztuczna inteligencja, a ten ktory ja wybralem brzmi "" optymalizacja zuzycia energii w budynkach(klimatyzacja i ogrzewanie) sztuczna inteligencja. Czy posiada ktos jakieś ciekawe materialy z których mógłbym skorzystać? Poniewaz z tego co widze w wujku google wszystko jest bardzo okrojone Jakie algorytmy sa tam najczesciej wykorzystywane? Z gory dziekuje za pomoc i pozdrawiam;"
"Cześć, zacząłem w tym roku studia informatyczne. Zaciekawił mnie bardzo temat uczenia maszynowego i sztucznej intelignecji. Zna ktoś jakąś dobrą książkę do poczytania w wolnym czasie?;"
Witam czy jest mozliwe zeby stworzyc  program  ze sztuczna inteligencja w pythonie w ktorym jak wysle swoje zdjecie to da mi linki do profili spolecznosciowych gdzie jest moje zdjecie lub gdzie sa inne zdjecia ale jestem  na nich  ? Pozdrawiam :);
"Teraz każdą bzdurę się nazywa ""sztuczną inteligencją"". A to co opisujesz wygląda nw względnie proste zadanie algorytmiczne. Zaproponować dietę spełniającą określone kryteria kaloryczności i proporcji białek, tłuszczów, błonnika, witamin ipt, w oparciu o tabelaryczne dane na temat produktów i w miarę możliwości uwzględniając preferencje użytkownika.;"
"Witam, jeśli to ma być rzeczywiście coś w stylu AI to pierwsze co mi przychodzi na myśl to zastosowanie sztucznej sieci neuronowej i przykładowo klasyfikacja dnia tygodnia oraz godziny do określonego posiłku. Możesz przez cały czas zbierać od użytkownika dane i uczyć model za pomocą minipaczek - im więcej informacji zbierzesz tym większa będzie dokładność predykcji. Oczywiście powyższe można rozwinąć, to był tylko przykład rozwiązania problemu. W Pythonie można to bardzo łatwo zrobić za pomocą biblioteki TensorFlow, która prawdopodobnie ma swój odpowiednik w Javie.;"
"Na wstępie chciałbym napisać, że do tematu chciałbym podejść poważnie i przynajmniej spróbować coś napisać co mnie usatysfakcjonuje. Żeby także nie było niedomówień. Bez problemu czytam dokumentacje po angielsku czy też napiszę aplikacje w c++, lecz moje umiejętności z cepa są słabe jeżeli porównuje do niektórych użytkowników forum. sory za tasiemca :) Chciałbym ogólnie napisać AI, ale nie żeby potrafił ""jedno"", najlepiej jakby potrafił wszystkie funkcje, które niżej wypiszę. Zdaje sobie sprawę że napisanie czegoś takiego (nawet jeden punkt) wymaga bardzo dużej wiedzy a co dopiero połączenie tego jakoś fajnie w całość, ale jestem dobrej nadziei.   Bot uczy się rozmawiać. coś jak Snikers czy inne tego typu programy (http://cleverbot.com/) tylko coś lepszego niż własnie np ten cleverbot (bo czasami jest po prostu głupi :)). Dowiedziałem się, że najtężsi mózgowie ciągłe próbują nauczyć komputer myśleć, lecz póki co nieskutecznie. Jednak aż tak łatwo mnie się nie da zniechęcić i jednak chciałbym spróbować, dzięki czemu sądzę że wiele się nauczę. I właśnie pytanie brzmi. Od czego zacząć? Czego szukać? I nie chodzi tutaj o ogólne teksty typu ""poszukaj coś na temat sztucznej inteligencji"" tylko bardziej konkretne algorytmy, badania, czy ogólnie pod jakimi hasłami szukać informacji (oprócz typowej AI)   Bot uczy się grać. Ogólnie najlepiej jakby uczył się każdej gry na którą napotka (jeżeli w nią już gra to wtedy jakąś już umiejętność ma). Przez co z czasem bot robi się coraz lepszy w różne gry. Także można mu pokazać pewne zachowania żeby się szybciej uczył czy też można ograniczyć jego umiejętności (żeby po prostu grał słabiej). Pytanie jest czy jest możliwe żeby jakoś pozwał zasady danej gry sam? (jest to bardzo powiązane z pierwszym punktem). Tutaj takie samo pytanie jak wyżej od czego zacząć? Nawet informacje po prostu o uczeniu się grać dla bota(w kółko i krzyżyk czy w warcaby) było by na prawdę fajne   Bot potrafi sterować całym systemem operacyjnym Już dostałem wiadomość, że raczej albo własny język programowania bym musiał wymyślić, albo napisać powłokę. Ale w sumie fajnie by było nawet, jakbym mu napisał (jeżeli już by potrafił rozmawiać :)) ""włącz mi moją ulubioną piosenkę"" to on włączą odpowiednią aplikację z odpowiednią piosenką. Czy też fajnie by było jakbym napisał typu ""zapisz mi plik w txt o treści ""jutro napiszę o linijkę więcej kodu!"" i wyświetl mi to przy następnym uruchomieniu""   Także żeby reagował na głos (poprzez mikrofon) Sterowanie za pomocą głosu? OSOM   i jeszcze raz się powtórzę. Jak szukać? Gdzie czytać? Kogo pytać żeby się dowiedzieć jak najwięcej? Też ciekawi mnie jak można napisać po prostu bota. Mniej więcej wiem na jakiej zasadzie działa ale jestem ciekaw jak on analizuję co zebrać co robić czego użyć gdzie pójść (mapy są generowane losowo)  Czy ogólnie do gier fpsowych żeby grał w miare naturalnie i miał różne taktyki (a własnie najlepiej jakby się uczył) Sądzę że jakbym napisał cokolwiek co przypomina bota w ciągu pół roku byłbym na prawdę zadowolony z siebie. Czasu za bardzo nie mogę też poświecić żebym siedział codziennie po 10 godzin (a szkoda), ale na pewno łatwo z tego nie zrezygnuję jeżeli będę wiedział od czego zacząć. Jeżeli dotrwaliście tak daleko to dzięki za przeczytanie :);"
"Lekcja na dziś: przetwarzanie języka naturalnego. Możesz zapisac się na kursy stanforda / mit z tego zakresu (z zakresu AI i uczenia maszynowego też) To się nazywa uczeniem maszynowym, patrz wyżej. Znów przetwarzanie języka naturalnego, patrz wyżej Biblioteki do rozpoznawania mowy są dostępne, ale żeby zinterpretować polecenia znów przetwarzanie języka naturalnego.  http://see.stanford.edu/see/courseinfo.aspx?coll=63480b48-8819-4efd-8412-263f1a472f5a http://see.stanford.edu/see/courseinfo.aspx?coll=348ca38a-3a6d-4052-937d-cb017338d7b1 http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/ http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-spring-2005/ http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-863j-natural-language-and-the-computer-representation-of-knowledge-spring-2003/ http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-864-advanced-natural-language-processing-fall-2005/ http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-867-machine-learning-fall-2006/ Co do samego pisania botów to zainteresuj się Google AI Challenge. To taki konkurs gdzie pisze się właśnie bota do jakiejś gry: http://aichallenge.org/ http://planetwars.aichallenge.org/;"
"Jako że wcześniej pisałeś na PW, czuję się upoważniony do wklejenia tam udzielonej odpowiedzi tutaj. Pytanie było trochę inaczej sformułowane, stąd nieścisłości.  Hah, ambitny temat sobie wybrałeś :> No więc, przede wszystkim, temat jak najbardziej nadaje się na forum. Mieści się to w Nietuzinkowe tematy, przy czym biorąc pod uwagę poziom skomplikowania zadania odpowiedzi mogą być niezbyt konstruktywne (czyt. ironiczne). Ale zaczynając od Twoich pytań:  Do napisania czegoś takiego wystarczy dowolny język kompletny w sensie maszyny Turinga, czyli C, C++, Asm (chociaż tutaj byłoby ciężko...), C#, Java, Brainfuck (chociaż tutaj byłoby ciężko...), Haskell, Erlang, Scala, Javascript, Prolog, etc, etc. Czyli odpowiedź brzmi - tak. Pozostaje pytanie w czym byłoby najprościej, pisanie sztucznej inteligencji w asemblerze będzie baardzo męczące.  Jasne, w przypadku C++ ważne tylko żeby to nie był Dev :>. Zresztą ja zazwyczaj kompiluję z konsoli za pomocą ręcznego wywołania gcc albo makefile - też się da, zależy co kto lubi.  Od porządnej nauki języka programowania i angielskiego :]. Później studiować sztuczną inteligencję - http://en.wikipedia.org/wiki/Artificial_intelligence. I teraz przeskakując wcześniej:  Cleverbot nie jest głupi ani mądry, on nie myśli w żadnym sensie - nie chodzi mi to o jakieś filozoficzne rozważania typu czy komputer ma duszę i co to znaczy że człowiek myśli, o bardziej prozaiczną kwestię - cleverbot nie analizuje semantycznie tego co do niego piszesz - odpowiada na podstawie setek tysięcy wymienionych wcześniej zdań. Popatrz na tą rozmową którą dla Ciebie przeprowadziłem :>  Powiedzmy końcówka - kiedyś bot do kogoś zagadał nice to meet you i otrzymał odpowiedź you as well. Teraz ja zagadałem że miło go spotkać, a on przypomniał sobie że zna odpowiedź na takie przywitanie. I tak to działa - dzięki olbrzymiej ilości zebranych danych potrafi udawać rozmowę. Ach, tak, do pytania - no więc ty prawdopodobnie chcesz zrobić coś innego - nauczyć komputer myśleć. Szczerze mówiąc, nikomu, mimo dziesiątek lat badań najlepszych specjalistów od AI, się to jeszcze nie udało. Być może będziesz pierwszy... Chociaż bardziej prawdopodobne że się zniechęcisz.  Cóż, możesz postąpić podobnie jak twórcy cleverbota - podać mu na tacy tysiące rozegranych partii, powiedzmy, szachów i nauczyć go naśladowania (w podobnej sytuacji XXX zrobił YYY). A, i nie nauczysz go grania w każdą grę - to po prostu niemożliwe. Dla każdych zasad gry musiałbyś go uczyć od zera, oraz musiałbyś go przystosowywać do każdego programu (sztuczna inteligencja nie ma pojęcia o czymś takim jak powiedzmy 'przycisk' albo 'pionek', jedynie manipuluje stanami)  Zbyt ogólne, musiałbyś znaleźć sposób na przekazywanie mu rozkazów. W jakiej formie byś tego nie robił, skończysz albo z nową powłoką systemową, albo z nowym językiem programowania, nigdy botem.  Jeśli wykonasz którykolwiek z poprzednich punktów to ta część będzie dla Ciebie śmiesznie łatwa ;]  Lata praktyki - a poważnie to kiedy zaczniesz czytać np o sztucznej inteligencji od najprostszych tematów będziesz trafiał na referencje do coraz bardziej złożonych tematów - wtedy szukasz czegoś na ich temat w google i volia, gotowe.  Uwierz, taki bot w porównaniu do tego co planujesz zrobić jest zabawnie łatwy. Składa się z mniej więcej trzech części [CZYTANIE_STANU_DIABLO] => [ANALIZOWANIE_STANU, WYKONANIE_JAKIEJŚ_AKCJI] => [KOPIOWANIE_STANU_DO_DIABLO] Przy czym najtrudniejsze są pierwsza i trzecia część.  No więc tak - ja jestem realistą (chociaż złośliwi twierdzą że pesymistą). Gdybyś wiedział dokładnie co pisać i jaki algorytm stworzyć, być może byś zdążył. Tylko że samo napisanie to najłatwiejsza część, znalezienie sposobu/algorytmu na nauczenie komputera myślenia to jest problem. No więc - moim zdaniem - nie.;"
"Napiszę krótko i pozwolę sobie zweryfikować jedną rzecz: nie istnieje (jeszcze) coś takiego jak sztuczna inteligencja w sensie, w którym myślisz, że istnieje. Bot to najzwyczajniejszy zestaw skryptów, według których program reaguje na określone sytuacje oraz odpowiednio skonstruowana, duża baza danych. Bot nie zrobi nic ponad to, czego nie zaprogramował jego autor. Koniec, kropka. Będzie to na tyle ""naturalne"", na ile go zaprogramujesz. Na pewno bot cię niczym nie zaskoczy, np. nie nauczy się rozpoznawać nowych poleceń. Co najwyżej możesz umożliwić dodawanie nowych poleceń podczas działania bota. Ale tak czy siak, musisz to zaprogramować. Bot z Diablo, o którym piszesz to najprawdopodobniej fejk.;"
"Podbijam temat jako że już roczek jestem z Wami tu jest all-in-one : harvard, mit, stanford - http://www.class-central.com/ a co do SI to przerobilem pol klasy Thruna i Norviga i powiem że zajebiście uczą i szybko ogarniesz - https://www.ai-class.com/ no i wiadomka że robią Ci panowie dla google po tym jak się stało bardziej wypłacalne od NASA :P a co do tego czy inteligencja ma cos do SI to tak jak psychologia innych gatunków H20 do psychologii człowieka ( ile o nim tak naprawde wiemy ), nie ma co się pocić nad problemem którym się zajmują kognitywiści jak tu chodzi o czyste algorytmy, a jak bardzo chcesz dowiedzieć się czegoś jak uczy się człowiek i jak uczyć komputer to ogarnij sobie ""Psychologia umysłu"" Zbigniewa Piskorza, a co do polaków w czołówce AI to profesor Duch z Torunia( www.is.umk.pl/~duch/indexpl.html ) na pewno ma jakieś publikacje publicznie udostępnione a jak nie, to napisz do niego że chcesz mu pomóc stworzyć myślący komputer to może zaprosi Ciebie na wykłady ;)  peace ChS;"
Na początku proponuje abyś zaimplementował sobie algorytm minimaks w jakiejś grze logicznej np warcaby(sztuczna inteligencja) później gdy trochę bardziej obeznasz się z tematem możesz podjąć się tego co chcesz zrobić. Jeśli będziesz chciał od razu wskoczyć na głęboką wodę to się utopisz(projekt się nie powiedzie).;
Ja mam w odległych planach nauczenie się Lojbana. To chyba jedyny darmowy i kompletny język (tak twierdzi Wiki) który daje się jednoznacznie sparsować. A skoro daje się jednoznacznie sparsować to już jeden problem z głowy przy tworzeniu sztucznej inteligencji.;
"Dziękuję wszystkim za odpowiedź. Ogólnie jestem na rozdrożu (nie wiem do końca w co iść, bo tyle rzeczy jest ciekawych...), ale to nie jest o tym temat. Najważniejsze jak dla mnie, że dzięki tym postom. Ja czy inny ""ciekawski"" na temat AI będzie wiedział od czego zacząć tak żeby długo nie błądzić, a właśnie taki cel miał ten topic ;) (przynajmniej w moim odczuciu). a troszkę offtopując. To trochę jednak strach przed tworzeniem czegoś takiego. Później ludzie by palili mój wizerunek i by opłakiwali ten dzień w którym powstała w pełni AI :D (tiaaa... za dużo chyba terminatora) Jeszcze raz dziękuję. Przede mną dużo lektury i jeszcze więcej praktyki także mam co robić na pewno do końca 2012r (lub do słynnego dnia w grudniu ;p);"
"Sam interesuję się tym tematem.. Problemem jest 'uzbrojenie' takiego Boota w narzędzia..bo co najlepiej dać mu myszkę i klawiaturę.. Wtedy może sobie klikać ile wlezie,lecz będzie ślepy :) Trzeba dać mu wzrok. Wzrok to widok obrazu/Pulpitu sytemu oraz wszystkich wyskakujących okien. Jak to zrobić? Może analiza screenów? Dalej będzie problem z analizą przycisków. Boot nie wie gdzie dokładnie zaczyna się i kończy dany button.. Można ręcznie wklepać każde położenie danego okna,przycisku do obsługi programu.. tylko to nie ma sensu.. Boot ma sam się tego nauczyć przy zastosowaniu odpowiednich algorytmów. Mi udało się tylko stworzyć sieć dla robocika 2d który uczy się iść daną ścieżką. Myślę ,że podobnie można zrobić dla boota uczącego się danego systemu operacyjnego. Nauka trwa wtedy do momentu gdy np. boot nie sformatuje dysku C :D;"
"Co do drugiego  to ""ostatnio"" jakiej firmie się udało coś takiego zrobić i z marszu zostali kupienie za kwote z 7 zerami na końcu. Nie mogę znaleźć linku ale tu google chwali się  osiągnięciami. http://www.komputerswiat.pl/nowosci/wydarzenia/2015/09/sztuczna-inteligencja-uczy-sie-grac-w-gry-z-lat-80-tych.aspx;"
"Zauważyłem że wiele osób było za interesowane tematem, bo jest obiektywnie fajny :p,pisałem program który który zawraca współrzędne występowania określonej grafiki na monitorze. Może żadne sci-fi, ale wystarczająco szybkie by napisać program, który kierując ruchem myszki znajdzie wyjście z labiryntu, rozwiąże sapera, lub oszuka kupla w jakieś grze :P. Programy które wykorzystują najzajebistrzy  algorytm świata na krzaczastym interfejsie nie robią na nikim wrażenia(no chyba że grafika 3d w konsoli ale to działa tylko na programistów), ale jak coś rusza myszką, to wtedy jest potęga :D, każdemu się to podoba :D.  No i dlatego wydaje mi się że fajnie było by się tym podzielić, zwłaszcza że trochę się namęczyłem by to napisać :P . Uzycie PrintScreen klik -> wybranie myszka grafiki -> załaduj wzór klik ->  znajdz klik; Żółte kółka to rogi. wyczyść usuwa kółka. Sam algorytm to żadne rocket-sciense, liczy sumy kontrolne dla obrazka wzorcowego, sumy kolorów w pikselach, + proste funkcje, ma to swoje wady ale dziwo działa dość dobrze, i poza lustrzanymi odbiciami i oczywistymi przypadkami, stosunkowo rzadko się myli:P, i chodzi szybko. Jak ktoś potrzebuje i lub chce ma cierpliwość to stosunkowo prosto przyśpieszyć ten kod, kilka- kilkanaście razy(a przynajmniej mi się tak wydaje.). Pierwszy raz pisałem coś takiego i chciałem to dociągnąć do końca dla tego kod miejscami są jest ciekawie.    saper.jpg (145 KB) - ściągnięć: 183 przykład.jpg (275 KB) - ściągnięć: 155 WpfApplication1.rar (202 KB) - ściągnięć: 137;"
"Witajcie, czy to już jest ten moment, gdzie AI zaczyna wychodzić ze sfery fiction i staje się science:  http://human2.com.pl/sztuczna-inteligencja-na-podstawie-skanu-mozgu-odgadla-iq-i-nie-tylko/  http://human2.com.pl/sztuczna-inteligencja-na-podstawie-skanu-mozgu-odgadla-iq-i-nie-tylko/;"
"Hej. Byłem dziś porozmawiać o podwyżce u szefa w mojej firmie, gadka szmatka, ale szef stwierdził że podwyżki mi nie da i żeby cieszył się tym co mam, bo algorytmy sztucznej inteligencji powoli zaczynają programować i za 5 lat może pracy w ogóle nie być. Na początku myślałem że żartuje, ale być może przespałem ten etap w rozwoju IT ? Widzę że sporo jest podobnych tematów na quorze, ale nic konkretnego. Chciałbym się dowiedzieć czy coś rzeczywiście jest na rzeczy, czy jutro atakować dalej. Coś o mnie: Java Junior, Wrocław 3.5k Netto uop Ponad rok doświadczenia;"
"bo algorytmy sztucznej inteligencji powoli zaczynają programować i za 5 lat może pracy w ogóle nie być.  xD  ale szef stwierdził że podwyżki mi nie da i **żeby cieszył się tym co mam**  xD. Jak znajdziesz inna prace i rzucisz prace to zobaczysz, ze nagle podwyzka nie bedzie jakims wiekszym problemem. Ogolnie nie trafiles na dobrego szefa;"
"Powiedz szefowi, że piszesz po godzinach algorytm sztucznej inteligencji, który będzie sam prowadził firmę, żeby dorobić. Aaa, i że za 5 lat toto ci ludzcy właściciele zostaną wygryzieni z rynku bo nie będą umieli konkurować, takie strategie te algorytmy będą miały. I firm zarządzanych przez ludzi może w ogóle nie być, a pierwsze to pewnie IT poleci. Tak będzie.;"
"Pierwsze co powinni wprowadzić to sztuczną inteligencję dla HR i  innych zbędnych stanowisk. Zostaną tylko specjaliści, którzy będą rozwijać ten algorytm;"
"Hej, w moim projekcie zamierzam użyć AI ProPainter do wymazywania fragmentów z wideo i inpaintingu. Jestem trochę zielony w AI ale domyślam się że do używania/trenowania będę musiał mieć bardzo mocna maszynę. Mógłby ktoś dać parę wskazówek o jakich mniej więcej rozmiarach maszyn tutaj mówimy i ile to kosztuje? Google podpowiedział mi Microsoft Azure i tam widzę jest masa maszyn z 200gb+ RAM po 3$/godzinę. Będę wdzięczny za każdą wskazówkę;"
To co - zastąpi czy nie?;
zastąpi;
nie zastąpi;
"Głupie pytanie, już zastępuje. W corpo gdzie pracuje wywalono 200 juniorów spośród kilku tysięcy programistów - juniorów, midów, seniorów. Każdemu midowi i seniorowi dano dostęp do AI. Produktywność wzrosła minimum 20% mimo mniejszej kadry, jak powiedzmy przykładowo każdy zespół dostarczał 50 Story Pointów co 2-tygodniowy sprint tak teraz dostarczają 60-65 story pointów średnio co sprint pracując tyle samo. AI to póki co nie jest coś niesamowitego, to takie lepsze google, gdzie wklepujesz zapytanie i dostajesz zwrotkę, kopiujesz ten wypluty kod, poprawiasz jakieś bzdury, wrzucasz na proda i gotowe. Oczywiście nie w przypadku krytycznej architektury ale umówmy się - takie bardzo ważne to ile % kodu, 5, 10%? Pozostałe 90% to żmudne, odtwórcze, generyczne komponenty i tutaj AI sobie radzi wyśmienicie. Nawet jak ktoś powie, że ""kiepsko implementuje ficzery"" - no to powiem że dla mnie działa rewelacyjnie do testów, bo akurat jestem osobą, która pisze dużo testów unitowych i integracyjnych. I o ile AI kiepsko pokrywa kod to bardzo szybko generuje mi dane testowe. Wklejam mu tylko POJO i mówie weź mi wypełnij to do testów. Jakieś tworzenie JSONów, YAMLi, skrypty bashowe - jako tako to działa i sporo czasu się zaoszczędza. Dzięki temu na każdym tasku oszczędzam ze 2 godziny, testy piszą się błyskawicznie i jest piękne pokrycie. Podobnie z dokumentacją. Wiem, że to smutno brzmi, że wywalają juniorów i zastępują AI. Ale szczerze mówiąc jako totalny egoista skupiony na sobie (nie jestem w końcu jakimś Szewcem z powieści Morawieckiego :D) jako mid który niedawno został seniorem to się ciesze - jeżeli AI za kilka lat okaże się jedną wielką bańką spekulacyjną to dopiero wtedy mądre głowy się zorientują, że przez ostatnie kilka lat robili KUPKE na juniorów i stażystów wywalając ich z roboty na zbity pysk. Popyt na dobrych midów i seniorów drastycznie wzrośnie (bo cały czas rośnie zapotrzebowanie na kod) a podaż dzięki AI zostaje stopniowo zmniejszania (bez juniorów nie będzie midów i seniorów) Więc trzymam kciuki, by AI jeszcze z 5-10 lat ""stało w miejscu"", a wszelkie ""przełomowe nowe wersje"" to dalej był czysty marketing i bzykanie inwestorów na kasiore, to za 2-3 lata obecni midzi/seniorzy znowu będą mieć eldorado ze stawkami i benefitami, odbijemy sobie obecny pseudo-kryzys;"
"Ze wszystkich ludzi, ekspertów od AI to chyba najbardziej bawi mnie Elonek. W swoich prognozach czarnowidztwa to już chyba nawet naszego Dragana przebił    MUSK.png (454 KB) - ściągnięć: 16;"
"Słuchajcie, ale tutaj już nie ma śmiechów z tym AI. Wystarczy, że ktoś wyśle tego Devina na pierwszy lepszy butkamp z gwarantowanym zatrudnieniem po kursie. Wtedy to już będzie pozamiatane. W cenie jednego miejsca na butkampie wyszkolą AI, które można skopiować milion razy i każdemu rozdać na pendrivie. No i każdy zostanie programistą, bo AI miało zagwarantowane zatrudnienie;"
"W sumie zależy jak to mierzyć - chat gpt już jest prawdopodobnie mądrzejszy od wszystkich ludzi, bo znajdź człowieka który będzie znał odpowiedzi na tyle pytań z każdej możliwej kategorii. Czy bardziej inteligentny to niekoniecznie. Moim zdaniem AI zbliża się do maksimum możliwości, z tym że to lokalne maksimum i bez fundamentalnych zmian jest bardzo daleko od tego jak działa prawdziwa inteligencja. Devin to tylko chat GPT podpięty do pętli sprzężenia zwrotnego któremu dano dostęp do kompilatora i wykonywania poleceń. Patrząc po tym jak gpt w kółko generuje ten sam kod mówiąc że go poprawia to nie wróżę świetlanej przyszłości  To dość logiczne, jak wywalisz juniorów nawet nie dając nikomu dostępu do AI to produktywność wzrośnie bo będzie mniej zawracających dupę za których i tak w ostateczności trzeba poprawiać całego taska od zera. Z tym że skąd brać tych midów za kilka lat?  Przecież wartość story pointów się zmienia z każdą zmianą w zespole. Wystarczy wyżej estymować taski żeby wyrabiać więcej punktów, a z doświadczeniem estymaty zazwyczaj rosną więc znowu się wszystko zgadza.;"
"Pytanie jest niejasne bo jeśli okaże się że Devin w 2024 wykona w teamie 10 osób (wliczając scrum mastera) pracę dwóch juniorów to nie zastąpi. Jeśli jednak w 2030 wykona w teamie pracę 6 seniorów to też nie zastąpi bo team będzie liczył 20 osób (10 analityków, scrum mastera + 10 QA);"
"Stan software dev za 10 lat: Kurator aplikacji: mamy kolejny błąd w aplikacji. Dodam opis w JIRA. OK JIRA uaktualniona, puszczę teraz Zeus AI który przeanalizuje wszystkie tickety w JIRA z wymaganiami funkcjonalnymi i nie funkcjonalnymi oraz wczyta bazę z opisem naszej infrastruktury a następnie stworzy od zera aplikacje spełniającą wszystkie wymagania, model on-call AI który będzie na bieżąco monitorował aplikację oraz uaktualni listę wymaganych zasobów oraz kosztorys. Kurator aplikacji (po 15 min): AI wykonało testy porównawcze nowej i starej wersji, mamy  a więc wdrażamy nową wersję na produkcje. Kurator aplikacji (po 30 min): Nowa wersja z naprawionym błędem załatana.;"
"Wiele osób mówi o tym legacy ale z perspektywy AI taki projekt niczym się nie różni od jakiegokolwiek innego. Wystarczy, że wyjdą modele (częściowo już na pewno takie są) które będą mogły zaczytać taki cały source + ewentualne nadanie dostępu do dodatkowych źródeł jak chociażby jira, historia rozmów slack, źródła dokumentacji, notatki ze spotkań (choćby utworzone automatycznie przez AI) i nie widzę tutaj żadnego problemu. Kwestia czasu.;"
"Na ten moment pozostaję nieprzekonany: jeżeli w materiałach marketingowych (które zazwyczaj są napompowane na maksa) chwalą się 13%, to przed nami naprawdę daleka droga. Myślę, że najbliższą przyszłością są narzędzia które zwielokrotniają produktywność programisty, ale nadal wymagają nadzoru. Dzięki temu team 4 programistów będzie tak produktywny jak team 6-7 osób przed AI. Nawiasem: uważam że humanizowanie AI w marketingu szybko się zestarzeje. Jest w tym dużo retrofuturyzmu, ale rynek się szybko przyzwyczai że to normalna sprawa że komputer sam generuje kawałki kodu i stanie się to zwykłym narzędziem, a nie jakiś mini człowiekiem zaklętym w maszynę :D;"
"I tak zawód programisty zostanie zaorany jak i widzę, że też PO nie będą mieli co robić. Następne w kolejce pewnie będzie to, że AI będzie w stanie wymyślić produkt. Np. karmisz go danymi z jakiejś branży czy dyskusjami z netu różnych ludzi, a potem znajduje potrzebę biznesową i wymyśla produkt. A potem sam go programuje. Potem sam tworzy filmiki reklamowe tego produktu i opłaca reklamy. A potem zbiera feedback od użytkowników i ulepsza produkt. Więc startupy będą się tworzyć, rozwijać i promować autonomicznie. Wystarczy rzucić kasę na zasoby AI i już, można będzie zarabiać. Tylko że to będzie dystopia, jeśli AI będzie robić wszystko, to masę zawodów się polikwiduje. A ludzie, którzy będą posiadać kasę, będą sobie kupowali jak najwięcej mocy przerobowej tego AI (tak jak teraz w nieruchomości się inwestuje), żeby im generowało dochodowe startupy, a cała reszta społeczeństwa będzie tylko konsumować ich usługi wydając skromną kasę z universal basic income.;"
"Chat GPT też  potrafił odpowiadać na pytania rekrutacyjne czy rozwiązywać tego typu problemy. To dodaje to dodatkową warstwę automatyzacji, ale nie ma tutaj innowacji. Nazwali tego agenta ""first AI software engineer"" chyba po to żeby hype budować pod kolejne rundy inwestycyjne. Firma ma kilka osób i ciężko mi uwierzyć że mogą być jakąkolwiek konkurencją do choćby Microsoftu który posiada githuba największą bazę kodu na świecie.;"
"Nie zastanawialiście się czemu jest taki run na AI wśród Big Tech? Oni już mają swoje chmury, dołożą do tego developerów AI i nagle będą w stanie ogarniać kompleksowo potrzeby swoich klientów. Software housy, outsourcing itp przestanie istnieć. Do tego wszystkie firmy nietechnologiczne zredukują działy z programistami, zostaną może jacyś sysopsi/admini do ogarniania infrastruktury. Ja wiem, że to jeszcze brzmi jak SF, ale od czasu wejścia smartfonów nie widziałem takiego parcia na rozwój technologii. Żaden druk 3D, VR, blockchain nie miały takiego hype'u. To oznacza, że są bardzo duże pieniądze w grze. Patrząc na tempo i na fakt, że cały świat dziś pracuje nad AI - moim zdaniem dzielą nas od tego może dziesiątki miesięcy, ale na pewno nie lat.;"
"Masa zawodów się polikwiduje, a kolejna masa zawodów się narodzi. Społeczeństwo ewoluuje. Dawniej książki pisano ręcznie. Było bardzo mało książek i tylko najbogatszych było na nie stać. Później Gutenberg wymyślił prasę drukarską i coraz więcej ludzi mogło sięgnąć po książki. Jeszcze 100 lat temu w Polsce i w wielu innych krajach na świecie (poza Zachodem) był ogromny analfabetyzm. Dziś analfabeci trafiają się jedynie w biednych krajach Afryki. Dziś każdy w cywilizowanym kraju ma dostęp do książek, każdy może je przeczytać. Dziś uczy się ludzi matematyki, fizyki, geografii, a 150 lat temu to mało kto wiedział o istnieniu Japonii albo nawet Hiszpanii. Dzięki sztucznej inteligencji ludzka inteligencja będzie jeszcze wyższa bo AI może być dobrym nauczycielem programowania, matematyki, fizyki. Poziom ludzkich umiejętności będzie wyższy i powstaną nowe możliwości wykorzystania tej wiedzy. Powstaną nowe zawody. 150 lat temu były takie zawody jak szewc, kaletnik, kowal, a nie było takich zawodów jak programista, automatyk, pilot samolotu, kierowca samochodu.;"
"Idealny przykład na to, że żyjemy w czasach w których wystarczy powiedzieć ""mam rewolucyjne narzędzie oparte na AI"" a bezmyślni dziennikarze nawet nie tyle nie zweryfikują w najmniejszym stopniu czy jest ono rewolucyjne, ale nie sprawdzą czy w ogóle je mam :) https://businessinsider.com.pl/technologie/nowe-technologie/devin-ai-idzie-po-prace-junior-developerow-programisci-stworzyli-cos-co-moze-ich/4bvg4eq EDIT. przepraszam, ale muszę wkleić cały akapit bo jest to ciekawy medyczny przykład chwilowego zaprzestania pracy wszystkich komórek mózgowych, nie prowadzący ostatecznie do zgonu:  Pan dziennikarz wydaje się myśleć, że całe projekty składają się wyłącznie z monotonnych, powtarzalnych ticketów  - np. firma sobie życzy - ""programisto - klep mi unit testy, nie ważne po co - klep""... Nie ma modelowania logiki biznesowej wcale...;"
"Jak tylko zobaczyłem hasło ""first AI software engineer' i sprawdziłem co to za firma to mniej więcej miałem już opinię taką jak na załączonym video. Tu jest wysoko poziomowa perspektywa na tego typu firmy i produkty których teraz wyrośnie jak grzybów po deszczu. Nawet zapomniałem, że było już bardzo podobne narzędzie jak Auto GPT które też zachwycało w bencharmkach i demach, ale po publicznym releasie w realnym użyciu już niekoniecznie. Mniej się o nim mówiło no bo 'Auto GPT ' nie brzmi tak chwytliwie ja 'first AI software engineer'.;"
"Oj tam zaraz bezmyślni. Gdyby dziennikarze pisali to co Ty piszesz, to nikt poza programistami nie chciałby tego czytać i taki dziennikarz nic by nie zarobił. Ten problem nie tylko dotyczy AI. Na przykład w polityce jest taki Jacek Bartosiak i Marek Budzisz, a nawet niektórzy generałowie, którzy pierniczą straszne głupoty na temat Rosji, Putina i armii rosyjskiej, a dziennikarze te bzdury chętnie podchwytują bo one dobrze się sprzedają i biznes się kręci. Tak samo Konfederacja i Mentzen opowiadają straszne debilizmy, ale że więcej jest ludzi głupich niż mądrych to dzięki temu kanał Mentzena na youtube się rozwija. Ostatnio szef Nvidii Jensen Huang powiedział żeby młodzi ludzie nie uczyli się programować tylko żeby zajęli się rolnictwem. Myślę, że sztuczna inteligencja zastąpi tzw. ""klepaczy kodu"", a do rozwiązywania skomplikowanych problemów programistycznych będzie potrzebny człowiek, który będzie umiał korzystać z pomocy sztucznej inteligencji.  Projekty w całości nie składają się wyłącznie z monotonnych, powtarzalnych ticketów, ale myślę, że w Polsce takie tickety stanowią przeważającą większość.;"
"Poniewaz AI zyskuje na popularnosci i co drugi wpis na Microblogu jest o ChatGPT proponuje watek do ktorego wrzucamy zapytanie i odpowiedz AI. Bez dyskutowania chyba ze w komentarzach, Analogicznie mozemy to rozszerzyc o obrazki genereowane przez AI. Byl kiedys taki teleturniej Telefoniada, wowczas na ponizsze pytanie na 30 osob rowniez nikt nie znal odpowiedzi.   jurand.png (23 KB) - ściągnięć: 63;"
Jakbym miał się wcielić w rolę AI to też bym tak samo odpowiedział bazując na ogólnodostępnych danych:    screenshot-20230918064909.png (113 KB) - ściągnięć: 2 screenshot-20230918064913.png (81 KB) - ściągnięć: 2;
"Dzisiaj miałem spotkanie z handlowcami, którzy rzucili hasło ""Zróbmy coś z AI"" W sumie na początku nie było jasne co by miało to robić bo najważniejsze żeby było AI w materiałach marketingowych  Po krótkiej burzy mózgów udało się ustalić co AI miało by robić:  AI analizuje obraz USG albo sekwencje obrazów USG i na tej podstawie podaje wiek płodu konia  Nie chcę się tym zajmować, nie che wchodzić w tematykę AI, ale przydało by się znaleźć kogoś do wrobienia w ten temat , jak rozpocząć poszukiwania kogoś do takiego problemu ? Jakie kompetencje są potrzebne ?;"
Czyli nie ogolnie AI tylko analiza obrazow? Cos co bylo juz mocno walkowane z powodzeniem 15 lat temu jak bylem na studiach A co do pytania bazowego to nie wiem. Moze z jakiejs politechniki ukrasc doktora co sie na tym zna;
"obrazy USG są dość specyficzne i już paru profesorów z politechniki poległo na tym temacie, ale też to było parę lat temu, może teraz AI Jest mądrzejsze :D;"
"Ja zapytałem AI (Copilot): Analiza obrazów ultrasonograficznych (USG) w celu określenia wieku płodu konia może być fascynującym zadaniem. Oto kilka kroków, jakie można podjąć w podejściu do tego tematu:   Zrozumienie problemu: Przede wszystkim zrozum, że wiek płodu konia można oszacować na podstawie cezury rozwojowej widocznej na obrazach USG. W miarę jak płód rośnie, pojawiają się charakterystyczne cechy, takie jak długość kości, obecność narządów i inne wskaźniki.   Zbieranie danych: Skompletuj zbiór obrazów USG płodów koni o różnym wieku. Te obrazy staną się twoim zestawem treningowym dla algorytmu uczenia maszynowego.   Wybór algorytmu: Wybierz odpowiedni algorytm uczenia maszynowego do analizy obrazów. Możesz użyć technik takich jak segmentacja, klasyfikacja lub regresja w zależności od rodzaju danych, jakie masz.   Przetwarzanie obrazów: Przygotuj obrazy USG, usuwając zakłócenia, normalizując kontrast i skalując je do jednego rozmiaru. To pomoże w poprawnej analizie.   Etykietowanie danych: Oznacz obrazy treningowe z odpowiednimi etykietami wieku płodu. To pomoże algorytmowi nauczyć się rozpoznawać cechy charakterystyczne dla różnych okresów rozwoju.   Trening modelu: Wykorzystaj zbiór treningowy do nauczenia modelu. Możesz użyć sieci neuronowych, algorytmów opartych na cechach lub innych technik.   Walidacja modelu: Sprawdź, jak dobrze twój model radzi sobie z obrazami testowymi. Możesz użyć metryk takich jak dokładność, czułość i specyficzność.   Implementacja w praktyce: Po uzyskaniu satysfakcjonujących wyników, zaimplementuj swój model w praktyce. Możesz stworzyć aplikację, która na podstawie obrazów USG podaje wiek płodu konia.   Pamiętaj, że to tylko ogólne wskazówki. Konieczne będzie dostosowanie podejścia do specyfiki danych, dostępnych narzędzi i celu analizy. Powodzenia w tworzeniu inteligentnego systemu do określania wieku płodu konia na podstawie obrazów USG!  Źródło: Konwersacja za pomocą usługi Bing, 8.02.2024 (1) AI-Based Ultrasound Imaging Analysis Solutions | DiA Imaging Analysis. https://www.dia-analysis.com/. (2) Bioengineering | Free Full-Text | Using AI Segmentation Models to .... https://www.mdpi.com/2306-5354/11/2/128. (3) Ultrasound Image Analysis Using AI | SpringerLink. https://link.springer.com/chapter/10.1007/978-981-16-7140-1_7. (4) Using AI to diagnose birth defect in fetal ultrasound images. https://ai-med.io/more-news/using-ai-to-diagnose-birth-defect-in-fetal-ultrasound-images/. (5) Application and prospects of AI-based radiomics in ultrasound diagnosis .... https://vciba.springeropen.com/articles/10.1186/s42492-023-00147-2. W celu analizy obrazów ultrasonograficznych (USG) w celu określenia wieku płodu konia, istnieje kilka gotowych pakietów oprogramowania opartych na sztucznej inteligencji (AI). Oto kilka z nich:   DiA Imaging Analysis: DiA jest wiodącym dostawcą oprogramowania do analizy ultrasonograficznej opartej na AI. Ich technologia opiera się na zaawansowanym rozpoznawaniu wzorców, głębokim uczeniu się i algorytmach uczenia maszynowego, które automatycznie imitują sposób, w jaki ludzkie oko wykrywa granice obrazu i identyfikuje ruch. Ich narzędzia, takie jak LVivo Toolbox™, są dostępne na urządzeniach ultrasonograficznych i systemach IT w służbie tysiącom użytkowników na całym świecie¹.   Philips: Firma Philips współpracuje z DiA Imaging Analysis, aby zintegrować AI w ultrasonografii. Ich narzędzia obejmują oprogramowanie oparte na AI do preselekcji i analizy optymalnych widoków serca i jamy brzusznej. Na przykład LVivo Seamless automatycznie analizuje obrazy echokardiograficzne, generując wyniki pomiarów Strain, EF (frakcji wyrzutowej) oraz wielkości i funkcji prawej komory serca⁶⁷.   Inne badania naukowe: Wielu badaczy pracuje nad wykorzystaniem głębokiego uczenia się do analizy obrazów ultrasonograficznych w celu diagnozy różnych schorzeń. Przykładem jest praca naukowców z Uniwersytetu w Ottawie, którzy wykorzystują unikalny model głębokiego uczenia się jako narzędzie wspomagające szybką i dokładną ocenę obrazów ultrasonograficznych płodu⁴.   Pamiętaj, że wybór konkretnego narzędzia zależy od twoich potrzeb, dostępnych danych i specyfiki analizy. Warto przetestować różne rozwiązania i dostosować je do swojego przypadku użycia. Powodzenia w tworzeniu inteligentnego systemu do określania wieku płodu konia na podstawie obrazów USG!  Źródło: Konwersacja za pomocą usługi Bing, 8.02.2024 (1) AI-Based Ultrasound Imaging Analysis Solutions | DiA Imaging Analysis. https://www.dia-analysis.com/. (2) Philips partners with DiA Imaging Analysis to integrate AI in .... https://www.usa.philips.com/a-w/about/news/archive/standard/news/press/2021/20210302-philips-partners-with-dia-imaging-analysis-to-enhance-ultrasound-with-ai-based-image-quantification.html. (3) Philips partners with DiA Imaging Analysis to integrate AI in .... https://www.philips.com/a-w/about/news/archive/standard/news/press/2021/20210302-philips-partners-with-dia-imaging-analysis-to-enhance-ultrasound-with-ai-based-image-quantification.html. (4) Using AI to diagnose birth defect in fetal ultrasound images. https://ai-med.io/more-news/using-ai-to-diagnose-birth-defect-in-fetal-ultrasound-images/. (5) Bioengineering | Free Full-Text | Using AI Segmentation Models to .... https://www.mdpi.com/2306-5354/11/2/128. (6) Ultrasound Image Analysis Using AI | SpringerLink. https://link.springer.com/chapter/10.1007/978-981-16-7140-1_7. (7) Application and prospects of AI-based radiomics in ultrasound diagnosis .... https://vciba.springeropen.com/articles/10.1186/s42492-023-00147-2. (8) DiA Imaging Analysis Improves Speed of AI-Based Cardiac Ultrasound .... https://www.intel.com/content/dam/www/central-libraries/us/en/documents/dia-healthcare-sb-final.pdf. (9) Ultrasound AI Solutions - Philips. https://www.usa.philips.com/healthcare/technology/ai-ultrasound. (10) Projects – Open Source Imaging. https://www.opensourceimaging.org/projects/. (11) Philips enhances ultrasound with AI-based image quantification. https://www.philips.com/a-w/about/news/media-library/20210302-philips-enhances-ultrasound-with-ai-based-image-quantification.html.;"
"@Spine dziękuje za Twój post, dobry materiał na start od samego AI na temat AI w usg i widzę parę konkurencyjnych firm używa jednego z gotowców @0xmarcin ja widzę delikatną zmianę pokoleniową użytkowników , bo od zawsze w USG były używane tabele korelacji na podstawie których można było wyznaczyć parametr Y na podstawie jakiegoś pomiaru X na obrazie USG, prosta matematyka. Teraz jednak ludzie są coraz wygodni już nie che im się nic mierzyć chcą mieć wynik  jak tylko o tym pomyślą ;) A niektórym to już się nawet nie chce myśleć , urzadzenie ma myśleć za nich samo, wie co jest badane i co trzeba zmierzyć.  Wiec pytanie w kierunku zaspokojenia potrzeb coraz wyższych roczników;"
"Błąd, AI nie polega na redukcji tylko na generowaniu. Wy zrobiliście to od przodu kiedy właściwy kierunek to od tyłu. Czyli mając konia stwórz płód który w odpowiednim wieku stworzy sekwencję obrazów USG  Pewien mistrz dobrze to określił;"
"Nie no podejrzewam że skoro wiedzą jakie towary oglądasz na półce to współpracują ze sklepem i mają dostęp do kamer więc wiedzą dokładnie gdzie jesteś, potrzebują tylko wiedzieć kim jesteś na podstawie wyglądu i tu wkracza AI i social media. Sztuczna inteligencja potrafi prześwietlić pomieszczenia i określić dokładną pozycję ludzi w nim na podstawie tylko zaburzeń sygnału, nie musi się łączyć do wifi i na pewno nie używa MACa bo telefony domyślnie je zmieniają i losują przy każdym połączeniu więc są bezużyteczne.;"
"Jak działa Cosmose AI to wiedzą twórcy Cosmose AI. Natomiast reklamodawcy robią dziesiątki sztuczek, żeby określić co ci wcisnąć.  Pomyśl, ile osób ma podłączone urządzenia do jednego konta. Np. korzystają regularnie z gmaila na kompie, mają zainstalowaną apkę na telefonie z podpiętym kontem, YouTube'a z podpiętym kontem Google'a na TV itp. - już samo to daje Google'owi bardzo dobre rozeznanie w tym, gdzie jesteś. Tak samo z wieloma ""smart"" urządzeniami - podłączenie takiego do internetu pozwala na trackowanie ciebie (np. smartTV). Teraz załóż przez chwilę, że duże firmy wymieniają się twoimi danymi - między innymi właśnie dlatego wszyscy wszędzie wprowadzają jakieś szalone programy lojalnościowe. Zmatchowanie człowieka nie jest tutaj jakimś specjalnym wysiłkiem, bo często i tak się ludzie sami na to zgadzają. Z drugiej strony - istnieje sporo technik, które nawet i bez twojego pozwolenia pozwalają na identyfikację, np. po fingerprincie przeglądarki. Ważne jest, żeby pamiętać, że dużych firm niespecjalnie obchodzą twoje dane osobowe. Dzięki temu gromadzone dane nie podpadają pod PII (Personally identifiable information), bo nikogo nie obchodzi czy masz 35 czy 36 lat, ale czy pasujesz pasujesz do profilu: mężczyzna 30-40 lat, wysokie zarobki, mieszka w dużym mieście, lubi Lego (przykład oczywiście z sufitu). No i oczywiście jest jakieś pseudoID, dzięki którym wiadomo, że osoba która z niego korzysta to ta sama osoba.  Podejrzewam, że Cosmose AI używa AI do:  kategoryzowania przeglądanych towarów (tj. jeśli wejdziesz do sklepu i będziesz oglądał ""super muszla klozetowa, 100% porcelana"" to AI przeczyta nazwę przedmiotu i podepnie kategorię ""zainteresowania: muszle klozetowe"". przewidywania tego, co można jeszcze ci zaproponować - jeśli muszle klozetowe są twoją pasją, to pewnie i jakaś WcKaczka cię zainteresuje, no i oczywiście pięciowarstwowy papier toaletowy nasączany rumiankiem;"
"btw. twórca Cosmose stanął na czele zespołu, który ma doradzać rządowi w sprawach AI: https://fakty.tvn24.pl/zobacz-fakty/miron-mironiuk-stanie-na-czele-zespolu-sztuczna-inteligencja-dla-polski-st7747746;"
"Dobrze jak na programistę, fatalnie jak na informatyka. Przy kombinowaniu jak informatyk musisz sobie odpowiedzieć na jedno zajebiście ważne w życiu pytanie: jaki % działań obiektu wynika z odpowiedzi na otaczające go środowisko a ile jest czystym przypadkiem? Resztę znajdziesz w bazie danych.;"
"Hej! Ostatnio postanowiłem udoskonalić swoje umiejętności z języka angielskiego, i oczywiście, pierwszą myślą, która przyszła mi do głowy, było skorzystanie z usług native speakera online. Jednakże, w obliczu dzisiejszego postępu sztucznej inteligencji, zacząłem się zastanawiać, czy istnieje już jakaś zaawansowana usługa, która umożliwia prowadzenie rozmów z botem, który nie tylko poprawiałby bieżąco moją gramatykę, ale również wspierałby w doskonaleniu wymowy. Czy ktoś już eksplorował takie możliwości i może polecić coś sprawdzonego? PS: Przejrzałem kilka darmowych serwisów ale niestety średnio działają.;"
"Hej wszystkim! Mam coś, co chciałbym wam pokazać – projekt, nad którym ostatnio pracowałem, a nazywa się Radio Synteza. To trochę inny rodzaj radia, bo tutaj muzyka i nawet rozmowy nie są takie... standardowe. Zamiast typowego radia, gdzie ludzie wybierają muzykę i gadają między kawałkami, Radio Synteza działa inaczej. Cała zawartość – od piosenek po dialogi między utworami – jest tworzona automatycznie. Tak, nie ma tu prawdziwych DJ-ów ani autorów tekstów, ale to nie znaczy, że jest nudno! Pomyślałem, że to będzie fajny eksperyment – sprawdzić, jak taki automatycznie generowany content może się sprawdzić i czy w ogóle da się zrobić radio, które samo się sobą zajmuje, i jeszcze przy tym bawi słuchaczy. Radio już działa, więc możecie sami posłuchać i zobaczyć, czy to coś, co wpadnie wam w ucho. Ciekaw jestem waszych opinii – czy coś takiego ma sens, czy może jednak brakuje tam ludzkiego czynnika? Dajcie znać, co sądzicie, i czy według was taka forma rozrywki ma przyszłość! Tu link do live (24/7):   (gdyby z jakiegoś powodu się zmienił, to na kanale będzie aktualny) Nie bardzo wiedziałem w jaki dział forum to wrzucić, w razie czego będę wdzieczny moderatorom ze przeniesienie ;);"
"Przykro mi, ale nie robi to na mnie wrażenia. Radio to ludzie i emocje - w AI tych emocji jest całe zero. Może ktoś myśli/czuje inaczej. Projekt jest ciekawy, ale mi nie leży zupełnie.;"
"IMO pomysł ma ręce i nogi, ale jednak potrzebny jest pewien koordynator, który by ""podpowiadał"" AI co generować. Może nie 24h na dobę, ale jakieś tematyczne bloki. Np.  pomiędzy godzinami 8 a 12 jakaś muzyka do pracy 12-14 jakaś bardziej żywsza muzyka 14-18 znowu muzyka do pracy  itp. Ja bym może nie nazywał tego ""radiem"", ale taką ciekawszą listą na YT.;"
"Ciekawe, jakbym nie wiedział, że AI to bym szukał co to za zespół - klimacik jest momentami :) Jedynie zdradza taki AI-owy słowotok, zamiast prosto to sporo takich bla bla bla bla ... do celu ... od celu bla bla bla bla bla bla bleee;"
"Nie ma przyszłości bo jest rozwiązaniem na nieistniejący problem. Jako przykład podam ci sukces wiązany i znakomitą ilustrację efektu konwergencji. Był taki czas gdy rock był martwy a japońce zdominowały technicznie przemysł audio (walkmany i inne kasetony). To zagroziło europejskiej dominacji na polu kultury - czyli w sumie ostatnim jeszcze jako tako się liczącym. W ramach specjalnego planu pomocowego skoordynowano wysiłki niemieckiego Instytutu Fraunhofer wraz w wprowadzeniem nowych nurtów w europejskim audio, czyli głównie różnymi odmianami techno. Projekt był udany - Fraunhofer wyszedł z propozycją MPEG-2 Audio Layer III który zupełnie przypadkiem był tak skonstruowany że jedynym gatunkiem muzyki jaką dało się na nim sensownie słuchać przy ówcześnie optymalnym przepływie (128 kbps) było techno i jego różne odmiany. To zapewniło europejskim artystom oraz europejskiemu przemysłowi dominację w kulturze/tech na co najmniej dekadę. Twój projekt mógłby może odnieść sukces niestety nie wspiera go żaden przemysł, jest więc bezcelowy. Brakuje mu konwergencji. Jakby ktoś nie dowierzał to to tutaj załączam komentarz dot. powyższego z naszego podwórka.;"
"@Cyrec moduł RSS jest podpięty i jedynie co muszę zrobić to przestawić ""wajchę"" w JSONie, ale nie zrobię tego... ze względu na halucynację. Niestety pracy z LLM trzeba mieć to mocno na uwadze zwłaszcza przy tak wrażliwych informacjach jak newsy. Ale pomysł jako pomysł w przyszłości jest do zrealizowania, tylko trzeba mocno zabezpieczyć.;"
"To, że AI zaśpiewało piosenkę o miłości czy rockowy utwór o... ""niczym"",  traktuję jako niepodważalny sukces technologiczny. Niestety nie puściłbym sobie tego do słuchania. Choć jakość muzyczna niektórych utworów  pozytywnie mnie zaskoczyła i gdyby to było radio grające gdzieś w tle np. w autobusie, to może  bym się nie zorientował, że jest generowane przez AI. Niestety efekt końcowy, pomysły muzyczne, aranżacja utworów pozostają na bardzo niskim poziomie i dla mnie do słuchania się to absolutnie nie nadaje (dlatego też nie słucham radia w dzień - bo wieczorami czasem coś dobrego się pojawia). Prawdziwe radio ma dużo wyższy poziom a i tak dla mnie w większości przypadków jest to ""kaszanka"". Brakuje w tym wszystkim kreatywności, pomysłowości oraz prawdziwych emocji. Dobre zespoły muzyczne od utworów generowanych przez AI wciąż dzieli przepaść. Dobre utwory są zwykle głębokie nawet jeśli sama ich konstrukcja nie jest wybitnie skomplikowana. Utwory z AI są wybitnie płytkie i choć brzmią  ""podobnie beznadziejnie"" jak współczesna muzyka puszczana w prawdziwym radio, to nie wystarczy to aby przekonać do siebie ludzi. Ta muzyka jest tak strasznie prosta, że po tygodniu ćwiczeń może to zagrać lub zaśpiewać niemal każdy kto ma przynajmniej  jedno ucho. Podkreślę jednak, że sam pomysł z punktu widzenia technologicznego bardzo mi się podoba. Fantastyczny i bardzo ciekawy eksperyment, dobrze pokazujący możliwości AI. Pozostaje się przyglądać i poczekać co będzie dalej.;"
bez hejtu ale pierwsze co mi się skojarzyło jak usłyszałem prowadzącego to radio Maryja które leciało u babci za młodego. Niby AI ale brzmi jak ziomek który czeka na koniec zmiany i fajrant :);
"Oczywiście gust słuchacza to rzecz kluczowa dlatego napiszę co ja uważam a nie jak jest. Być może ktoś taką ""AI muzykę"" pokocha i ja nie mam nic przeciwko temu. Są przecież ludzie, którzy słuchali kaset z programami do ZX Spectrum czy Commodore. Odpowiadając na pytanie, rodzaj muzyki nie ma żadnego znaczenia bo w każdym rodzaju znajduję dobre utwory, których chętnie słucham. Utwory wygenerowane przez AI to tłuczenie w kółko: zwrotka, refren, zwrotka, refren i często nie pasujące do całości zakończenie. Brakuje ogólnej koncepcji na utwór / szerszego pomysłu, przewrotów. Dobry utwór jest jak film. Ma wstęp, rozwinięcie, akcję, zakończenie. W Twoim radio poszczególne rodzaje muzyki rozróżnia jedynie główny instrument. W rocku coś brzęczy w tle (niby gitary)  w popie coś stuka i jest jakiś synth (niby klawisze) ale poza tym wszystkie utwory są takie same. Wszystkie są tak samo miałkie. Może nadaje się to na tło muzyczne w sklepie ale absolutnie nie do słuchania w słuchawkach. Zauważ, że w żadnym z utworów nie ma nawet jednego sensownego solo... na jakimkolwiek instrumencie. Mamy jedynie tło bazujące na prostych akordach + rytm a całość w jakości takiej jak można było generować na tanich keyboardach już w latach 90-tch. Zatem nawet tu nie mamy przełomu w obszarze automatyzacji tworzenia muzyki. Pewnie lepiej  żeby ta muzyka tworzyła się w MIDI ale z drugiej strony wiem, że z tym wciąż nie jest tak łatwo bo to już wymaga czegoś więcej. Największe wady przedstawionej muzyki AI:  Muzyka jest jedynie tłem. Brzmi tak jak wygląda JPG o bardzo niskiej jakości. Ogólnie jakąś informację niesie ale ciężko delektować się szczegółami o kunszcie właściwie nie ma mowy. Brak melodii lub melodia jest zbyt banalna. Marna aranżacja. Brak dynamiki. Płytkie teksty, a właściwie śmiało można powiedzieć, że całkiem pozbawione sensu.  Muzykę o analogicznej jakości można było bez trudu generować już 10 lat temu a pewnie i wcześniej. Może nie z tekstowego prompt ale  przy porównywalnie małym nakładzie pracy. Owszem wymagało to nieco większego zaangażowania finansowego bo trzeba było mieć trochę dobrego softu i sprzętu ale było to technie możliwe bez AI. Nikt tego jednak nie robił - bo to nie ma sensu. Taka muzyka jest po prostu brzydka. Muzyka AI  broni się jedynie tym, że jest ciekawostką technologiczną z modnego obecnie obszaru AI. Z całą pewnością AI można użyć jako narzędzie, które jest pomocą w procesie tworzenia muzyki ale póki co trzeba do tego jeszcze dużo od siebie dołożyć i wciąż trzeba wiedzieć co się robi aby efekt końcowy był zadawalający dla kogoś więcej niż całkowicie bezmyślnego słuchacza.;"
Na pewno będzie to lepsze niż jakieś zwykłe radio przepełnione reklamami i kiepską muzyką. Dla mnie interesujący projekt. Ciekawe na co pozwoli AI za 10 lat w tym temacie.;
"No właśnie o to chodzi, że nie o to chodzi:-) Bitrate czy dynamika jako parametr techniczny strumienia audio są w Twoich/AI utworach na dobrym poziomie. Nie o tą dynamikę i nie o tą jakość utworu chodzi jeśli chcemy aby dało się go polubić lub żeby zwyczajnie mógł się spodobać. Dla AI wciąż niemal niemożliwe pozostaje samodzielne skomponowanie i zaaranżowanie utworów takich jak np.:  Led Zeppelin - stairway to heaven, Pink floyd - pigs Brubeck - take five, Izabela Trojanowska / Jestem twoim grzechem  Czy nawet czegoś co bliższe komputerom, elektronice lub o prostej ale chwytliwej dla ucha konstrukcji:  Shpongle - Museum of Consciousness, Djuma Soundsystem - Les Djinns, Mahavishnu Orchestra - You Know You Know  No chyba, że na napisanie odpowiedniego prompta poświęci się więcej czasu niż na nagranie utworu :-);"
"Kochani, drodzy! Jako że mam trochę czasu pozwolę sobie na małe odniesienie do Waszych odpowiedzi.  Ostatnio przypomniałem sobie, jak rozszerzyłem swój kontekst i faktycznie, pamiętam, że kiedyś na żywo pojawiały się jakieś szumy — to było dawno temu, bez prowadzących, i chyba jeszcze przed erą technologii opartej na dyfuzji. Co do innowacyjności, to wszystko zależy od punktu widzenia. Najważniejsza jest imersja, a przypadków, gdzie oceny były błędne lub całkowicie nietrafione, jest mnóstwo. Przykład z iPhone'em - Kiedy Apple wprowadziło iPhone'a w 2007 roku, wielu liderów branży technologicznej i telekomunikacyjnej wyrażało sceptycyzm. Steve Ballmer, ówczesny CEO Microsoft, zasłynął ze swojej krytycznej reakcji, twierdząc, że iPhone ze względu na wysoką cenę i brak klawiatury nie zdobędzie znaczącego udziału w rynku. Przykład z Amazonem - Jeff Bezos założył Amazon w 1994 roku jako internetowy sklep z książkami, co spotkało się z krytyką. Wiele tradycyjnych księgarń i dystrybutorów uważało sprzedaż książek przez internet za nierealistyczną. Nie wierzyli w potencjał e-commerce. Przykład z Netflixem - Netflix rozpoczął działalność w 1997 roku jako usługa wypożyczania DVD wysyłanych pocztą. Wielu liderów przemysłu filmowego i telewizyjnego nie wierzyło w sukces modelu subskrypcji i cyfrowego streamingu. Blockbuster, ówczesny gigant rynku wypożyczalni filmów, miał nawet możliwość kupienia Netflixa za 50 milionów dolarów, ale odrzucił ofertę jako bezwartościową. I tak dalej...  Ok pytanie jaki problem rozwiązuje w takim razie cała branża rozrywkowa włączając w to film, gry, muzyke i inne podsektory. Tu nie chodzi o to co jaki problem ono ma rozwiązać. You thinking in wrong direction bro. Kluczowe jest zrozumienie, że branża rozrywkowa nie zawsze koncentruje się na rozwiązywaniu konkretnych problemów w tradycyjnym znaczeniu. Celem tej branży jest dostarczanie wartości poprzez emocje, relaks i ucieczkę od codzienności. Gdy mówimy o filmach, grach, muzyce i innych formach rozrywki, chodzi przede wszystkim o oferowanie doświadczeń, które mogą inspirować, bawić lub nawet edukować. Rozrywka może także sprzyjać budowaniu relacji społecznych, tworząc wspólne tematy do rozmów czy wspólne doświadczenia, które ludzie mogą dzielić ze sobą.  Wziąłem sobie do serca Wasze uwagi i uważam, że poziom radia znacząco się podniósł, co oczywiście pozostawiam do Waszej oceny. Zauważyłem, że teksty w piosenkach rockowych i popowych zyskały na głębi, na przykład w utworze ""Sercem Miasta - Warszawo"". W muzyce elektronicznej zaś skupiamy się głównie na jakości dźwięku, gdzie oryginalność tekstu nie jest najważniejsza — liczy się innowacyjność brzmienia. Z drugiej strony, czy w mainstreamie rzeczywiście szuka się skomplikowanych tekstów, które wymagają godzin analizy, by zrozumieć intencje autora? Zdecydowanie nie. Ważne, by utwór podobał się słuchaczom i sprawiał im przyjemność. Nie twierdzę, że skomplikowane teksty są złe, ale niekoniecznie pasują do mainstreamu. Na przykład, dopiero poznając historię stojącą za ""Bohemian Rhapsody"" zespołu Queen, zdałem sobie sprawę, ile emocji i doświadczeń może być zawartych w takich utworach.  Wymienione piosenki - trzeba popatrzeć jaka jest częstotliwość ich nadawania na antenach topki (RMF/Zet)  Tutaj też na tym polu dodano usprawnienia - myślę że zaczyna to nabierać kształtów, radia da się słuchać. Tematy rozmów również są ciekawe (AI, sens życia, programowanie, matematyka itp). Godzine nadawania trudno oszacować ze względu na koszt wytworzenia utwórow (zmienny) + koszt replicate (zmienne) + koszt openai (zmienne) + koszt dedyka (stały), więcej info podam po zamknięciu się Kwietnia.  Dziękuję :) Zarówno muzyka jak i mikrofalówki są już sensowne. Pozdrawiam;"
"A utwory generujesz w czasie rzeczywistym powiedzmy w trakcie trwania obecnego czy manualnie z wyprzedzeniem? Można usłyszeć ten sam utwór kilka razy? Jeśli wygenerowałeś stałą bazę utworów to ile ich jest? Fajne by było w przyszłości gdyby drugie AI wyuczone na listach przebojów było w stanie oceniać nowe utwory, tworzyć ranking i wyłuskiwać ""hity"" które by leciały częściej. Z tym jak wspomniano wyżej wszystkie utwory są podobnie jałowe więc ciężko znaleźć wśród nich perełki.;"
"Z tym, że Bezos zrobił coś innowacyjnego a Twoje radio nie jest na rynku pierwszą tego typu próbą więcej powiem nawet na YT takich projektów są już dziesiątki jak nie więcej. Innowacyjność tego radia vs innowacyjność sklepu internetowego w 1994r. to jednak grubo przesadzone porównanie. Cały czas piszę, że warto temat zgłębiać i rozwijać ale póki co jesteś ledwo jedną stopą na początku drogi, która może okazać się drogą do jakiegoś sukcesu. Szansa, że uda Ci się zdobyć popularność jest minimalna. Może gdybyś dogadał się z kimś kto umie robić biznes, zainwestowalibyście w to środki, pomysły i pracę... Wówczas może. Sama  umiejętność zrobienia czegoś od strony technicznej to zdecydowanie za mało.  Obawiam się, że nie kumasz o co chodzi w muzyce :-) Ludzie potrzebują artysty, leadera kogoś kogo będą podziwiać. Może lepiej wykorzystaj warsztat, który opanowałeś i zostań DJ. Spróbuj się z tym wbić na jakiś festiwal. Nawiąż prawdziwą interakcję z ludźmi. Zbuduj relację człowiek - człowiek. Tego szukają ludzie a nie ""wypełniacza / zagłuszacza ciszy"" w tle. Technologia, którą zgłębiasz ma ogromy potencjał jako narzędzie pomocne w tworzeniu muzyki ale póki co nie widzę AI jako samodzielnego artysty.  @Comron`owi się podoba więc może jakąś niszę dla siebie z tym projektem znajdziesz.;"
"Tak w sumie sobie myslalem, to taka AI muzyka zapychacz w jakimś supermarkecie może i by miało sens;"
"Od początku używam AI do pomocy w pisania kodu. Pomagam sobie copilotem, chat gpt oraz gemini. Jednak jakbym podliczył sume zysków oraz start przy używaniu AI to wychodze na naprawde lekki plus, chociaż myśle że to może być moje życzeniowe myślenie. Najbardziej pomaga mi copilot z VSC w pisaniu interfejsów, enumów, shit kodu. Tam gdzie naprawde copilot pomaga to pisanie prostych crudów do mongo db w js oraz boostrapowanie unit testów nad którymi też trzeba później sporo się napracować żeby do czegoś się nadawały. Jeżeli wychodze na plus, to myśle że na 8h kodowania (kilka h w pracy + wlasne projekty) wychodze może 30 min do przodu.I szczerze mam nadzieje że nie wychodze na minus. I teraz pytanie, do was. Czy są realne przykłady na rynku, że AI zastąpiło programistów? Dużo się mówi o zwolenianich w IT z powodu AI i baardzooo mi ciężko w to uwierzyć. Naprawde staram się jak moge z tym AI, jestem zdeterminowany żeby finalnie być z niego zadowolony, ale płace za to dużą cierpliwością. Bo często, a nawet bardzo często, próba pomocy sobie przez AI, kończy się na stracie czasu, i dopiero to nadrabiam przy tych interfejsach, enumach, mongo itp Mam wrażenie, że to dziennikarze, którzy nie mają pojęcią o AI w programowaniu tak piszą artykuły, a zwolnienia są przez to że w czasie covidu firmy nabudowały zespołów IT, które po pandemii przestały być potrzebne, z racji jej konca oraz z racji konkurencji na rynku IT. Bo np. taki netflix czy MS, jeżeli miały nadzieje na duże zyski podczas pandemii i nakrekrutowały jak głupie, to konkurencyjne firmy zrobiły dokładnie to samo. Czy może ja źle używam tego AI? ps. Pisze bardzo bardzo bardzo dużo kodu, głównie zaawansowane aplikacji biznesowe. Tak tygodniowo koduje po 50h minimum.;"
A jakie były Twoje oczekiwania? Co konkretnie AI miało by usprawnić?;
"Według tego co piszą mainstreamowe portale AI zastąpią programistów,  ludzie są zwalniani itp. CEO NVIDIA powiedział że za 5 lat nie będzie programistów. Chociaż to zagranie marketingowe pod sprzedaż procesorow. Do tego zaprezentowano Devin czyli AI software developera No i tego co ja bym oczekiwał, to tego że AI będzie pisać za mnie kod. Próbuje próbuje i ciągle sam muszę robić  I ciągle się zastanawiam, czy istnieje chociaż, jeden programista który stracił pracę przez AI.;"
"Zależy kogo rozumiemy przez programistę. Jeśli klepacza szablonowego kodu (robotnika), to jak najbardziej, bo do bycia nadzorowanym wyrobnikiem AI może będzie się nadawało. Jeśli miałoby zastąpić kogoś rozwiązującego realne problemy z danej dziedziny lub tworzącego nowe rozwiązania (pomysły), to wątpię. Generatywna AI nie jest kreatywna. A jeśli koduję powiedzmy 1/4 czasu pracy, a resztę spędzam na spotkaniach, ustaleniach, kawie i obijaniu się, to nie widzę tu zastosowań dla AI :D;"
"Używam do generowania gówien typu fabryki testowe, yamle do k8s + podpowiedzi ""jak coś zrobić"" w takim np pandasie czy numpy (Wiem co chce zrobić, tylko nie pamiętam nigdy konkretnych metod). Do tego AI jest fenomenalne i oszczędza sporo czasu. Jednak na tym etapie kończą się wszystkie superlatywy.;"
"Ok to jako, że jestem autorem to podsumuje temat. Na całym świecie nie ma żadnego realne przykładu zastąpienia programisty AI. Mimo to, że dziennikarze ciągle piszą o zwolenianich przez to powstało AI to nie jest to prawda. Na dzien 7 kwietania 2024 AI rozwineło branże i tylko stworzyło wiecej miejsc pracy :) I na obecny moment AI jest tylko wspomagaczem a nie realnym zamiennikiem :);"
"https://www.msn.com/pl-pl/wiadomosci/nauka-i-technika/forum-dla-programist%C3%B3w-p%C5%82onie-masowo-usuwaj%C4%85-swoje-wpisy-%C5%BCeby-nie-ukrad%C5%82a-ich-ai/ar-BB1m5Wi2?ocid=msedgntp&pc=U531&cvid=94c2cbb10f6748558373e4cb115f33c1&ei=53 ""Aktywnych użytkowników forum zirytowała szczególnie pierwsza część partnerstwa, bowiem oznacza ona, że wiedza udzielających się na nim programistów i deweloperów – poprzez scrapowanie ich odpowiedzi przez boty OpenAI – zostanie przekazana w formie danych treningowych dla sztucznej inteligencji. Jak przekazuje serwis Tom’s Hardware, nawiązanie partnerstwa sprawiło, że użytkownicy zdecydowali się na masową kasację wpisów, by uniknąć przekazania ich wiedzy modelom OpenAI. Na działania te zaczęli reagować moderatorzy, którzy w odpowiedzi przystąpili do banowania użytkowników kasujących odpowiedzi. Jednym z użytkowników Stack Overflow, który zdecydował się na kasowanie wpisów, jest Ben. Ben na platformie Mastodon opublikował post, opisując, że w reakcji na ogłoszenie platformy, usunął on swoje „najwyżej oceniane odpowiedzi”. Stack Overflow nie pozwala na usuwanie pytań, które mają wysoko notowane odpowiedzi i wiele pozytywnych głosów, ponieważ usunęłoby to wiedzę ze społeczności. Zamiast tego zmieniłem moje najwyżej ocenione odpowiedzi na wiadomość protestacyjną. W ciągu godziny moderatorzy przywrócili ich poprzednią treść i zawiesili moje konto na 7 dni."" Jak mnie zablokowali pod powodem niskiej jakości merytorycznej to od razu usnąłem konto. Problemem jest tam patologiczna moderacja realizująca własne cele. Tak czy inaczej, ten portalik jest już zbędny. Szambo podobne do pasji informatyki i tego reddit?;"
"Ze względu na zaczepki różnych osób na 4p i na Linkedin zaprzęgłem AI żeby przygotowywała za mnie odpowiedzi. Niestety jeden ziomek się wycwanił i przysyła wideo. Macie pomysł jak to ogarnąć, żeby AI odpowiadało na filmy bez napisów?;"
"a nie można podłączyć jakiegoś API do trabskrybowania video, żeby AI wiedziało, co tam mówią?;"
"User ""Komu przysługuje KDR? Osoby uprawnione do posiadania KDR Prawo do posiadania Karty Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. Przez rodzica rozumie się także rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: w wieku do 18. roku życia, w wieku do 25. roku życia – w przypadku dzieci uczących się w szkole lub szkole wyższej, bez ograniczeń wiekowych w przypadku dzieci legitymujących się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności, ale tylko w przypadku, gdy w chwili składania wniosku w rodzinie jest co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje rodzicowi, którego sąd pozbawił władzy rodzicielskiej lub któremu sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił go władzy rodzicielskiej lub jej nie ograniczył przez umieszczenie dziecka w pieczy zastępczej w stosunku do co najmniej trojga dzieci, prawo to nie przysługuje również rodzicowi zastępczemu lub prowadzącemu rodzinny dom dziecka, w przypadku gdy sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta jest przyznawana niezależnie od dochodu w rodzinie. "" czy jeśli jest sobie 70 letnia babcia, która ma 5 dorosłych dzieci 40+, to przysługuje jej karta dużej rodziny? ChatGPT Nie, zgodnie z informacjami przedstawionymi, karta Dużej Rodziny przysługuje rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. Przysługuje również dzieciom w określonym wieku lub z niepełnosprawnościami. W przypadku 70-letniej babci, której dzieci są już dorosłe, karta Dużej Rodziny nie przysługuje jej, ponieważ nie spełnia wymogu posiadania co najmniej trojga dzieci na utrzymaniu. Karta przysługuje tylko tym osobom, które mają na utrzymaniu co najmniej troje dzieci, spełniających warunki określone w przepisach. User wymagania i których mówisz, dotyczą dzieci, nie rodziców: ""Prawo do Karty Dużej Rodziny przysługuje także dzieciom:"" ChatGPT Przepraszam za pomyłkę w wcześniejszej odpowiedzi. Masz rację, wymagania dotyczą dzieci, a nie rodziców. Zgodnie z informacjami, które podałeś, prawo do posiadania Karty Dużej Rodziny przysługuje dzieciom, które spełniają następujące warunki: Dzieci w wieku do 18. roku życia. Dzieci w wieku do 25. roku życia, jeśli są one uczące się w szkole lub szkole wyższej. Dzieci bez ograniczeń wiekowych, jeśli posiadają orzeczenie o umiarkowanym lub znacznym stopniu niepełnosprawności. Przy czym, w chwili składania wniosku o Kartę Dużej Rodziny, w rodzinie musi być co najmniej troje dzieci spełniających powyższe warunki. W przypadku 70-letniej babci, choć posiada pięcioro dorosłych dzieci, Karta Dużej Rodziny nie przysługuje jej, ponieważ karta jest przyznawana dzieciom, a nie rodzicom. Wymagane jest, aby co najmniej troje dzieci spełniało warunki określone w przepisach, aby przysługiwała im Karta Dużej Rodziny. User ""Prawo do posiadania Karty Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci."" karta dużej rodziny przysługuje wszystkim rodzicom, którzy kiedyś mieli conajmniej troje dzieci, czy  70 letnia babcia, która ma 5 dorosłych dzieci 40+ spełnia te wymagania? ChatGPT Przepraszam za wcześniejsze zamieszanie. Jeśli 70-letnia babcia ma pięcioro dorosłych dzieci, które kiedyś miała na utrzymaniu, to spełnia wymagania dotyczące posiadania co najmniej trojga dzieci. Zgodnie z informacjami, które podałeś, prawo do posiadania Karty Dużej Rodziny przysługuje wszystkim rodzicom, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. W tym przypadku, babcia spełnia to kryterium, więc przysługuje jej prawo do Karty Dużej Rodziny. User ""Komu przysługuje KDR? Osoby uprawnione do posiadania KDR Prawo do posiadania Karty Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. Przez rodzica rozumie się także rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: w wieku do 18. roku życia, w wieku do 25. roku życia – w przypadku dzieci uczących się w szkole lub szkole wyższej, bez ograniczeń wiekowych w przypadku dzieci legitymujących się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności, ale tylko w przypadku, gdy w chwili składania wniosku w rodzinie jest co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje rodzicowi, którego sąd pozbawił władzy rodzicielskiej lub któremu sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił go władzy rodzicielskiej lub jej nie ograniczył przez umieszczenie dziecka w pieczy zastępczej w stosunku do co najmniej trojga dzieci, prawo to nie przysługuje również rodzicowi zastępczemu lub prowadzącemu rodzinny dom dziecka, w przypadku gdy sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta jest przyznawana niezależnie od dochodu w rodzinie. "" czy jeśli jest sobie 70 letnia babcia, która ma 5 dorosłych dzieci 40+, to przysługuje jej karta dużej rodziny? ChatGPT Przepraszam za wcześniejsze zamieszanie. Jeśli 70-letnia babcia miała na utrzymaniu co najmniej troje dzieci (w tym przypadku, jej 5 dorosłych dzieci 40+), przysługuje jej prawo do posiadania Karty Dużej Rodziny. Zgodnie z przekazanymi informacjami, prawo do Karty Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. W przypadku 70-letniej babci, która miała na utrzymaniu pięcioro dorosłych dzieci, spełnia ona warunek posiadania co najmniej trojga dzieci, więc przysługuje jej Karta Dużej Rodziny. User czy możesz poprawić ten tekst aby było go łatwiej zrozumieć i nie popełnić twojego wcześniejszego błędu? ""Komu przysługuje KDR? Osoby uprawnione do posiadania KDR Prawo do posiadania Karty Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli na utrzymaniu łącznie co najmniej troje dzieci. Przez rodzica rozumie się także rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: w wieku do 18. roku życia, w wieku do 25. roku życia – w przypadku dzieci uczących się w szkole lub szkole wyższej, bez ograniczeń wiekowych w przypadku dzieci legitymujących się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności, ale tylko w przypadku, gdy w chwili składania wniosku w rodzinie jest co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje rodzicowi, którego sąd pozbawił władzy rodzicielskiej lub któremu sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił go władzy rodzicielskiej lub jej nie ograniczył przez umieszczenie dziecka w pieczy zastępczej w stosunku do co najmniej trojga dzieci, prawo to nie przysługuje również rodzicowi zastępczemu lub prowadzącemu rodzinny dom dziecka, w przypadku gdy sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta jest przyznawana niezależnie od dochodu w rodzinie. "" ChatGPT Kto ma prawo do Karty Dużej Rodziny? Prawo do posiadania Karty Dużej Rodziny przysługuje: Wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli łącznie co najmniej troje dzieci na utrzymaniu. Rozumie się przez ""rodzica"" również rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: W wieku do 18. roku życia. W wieku do 25. roku życia, jeśli uczą się w szkole lub szkole wyższej. Bez ograniczeń wiekowych, jeśli legitymują się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności. Jednakże, wymagane jest, aby w chwili składania wniosku w rodzinie było co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje: Rodzicom, którym sąd pozbawił władzy rodzicielskiej lub którym sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił ich władzy rodzicielskiej lub jej nie ograniczył w stosunku do co najmniej trojga dzieci. Rodzicom zastępczym lub osobom prowadzącym rodzinny dom dziecka, jeśli sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta Dużej Rodziny jest przyznawana niezależnie od dochodu w rodzinie. User ""Kto ma prawo do Karty Dużej Rodziny? Prawo do posiadania Karty Dużej Rodziny przysługuje: Wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli łącznie co najmniej troje dzieci na utrzymaniu. Rozumie się przez ""rodzica"" również rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: W wieku do 18. roku życia. W wieku do 25. roku życia, jeśli uczą się w szkole lub szkole wyższej. Bez ograniczeń wiekowych, jeśli legitymują się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności. Jednakże, wymagane jest, aby w chwili składania wniosku w rodzinie było co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje: Rodzicom, którym sąd pozbawił władzy rodzicielskiej lub którym sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił ich władzy rodzicielskiej lub jej nie ograniczył w stosunku do co najmniej trojga dzieci. Rodzicom zastępczym lub osobom prowadzącym rodzinny dom dziecka, jeśli sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta Dużej Rodziny jest przyznawana niezależnie od dochodu w rodzinie."" czy jeśli jest sobie 70 letnia babcia, która ma 5 dorosłych dzieci 40+, to przysługuje jej karta dużej rodziny? ChatGPT Na podstawie informacji, które podałeś, wydaje się, że karta Dużej Rodziny jest przeznaczona głównie dla rodziców oraz dzieci w wieku do 25 lat uczących się w szkole lub szkole wyższej. Nie ma wzmianki o przysługiwaniu karty Dużej Rodziny dla dziadków lub osób starszych. Zgodnie z przepisami, karta Dużej Rodziny przysługuje rodzicom (włączając rodziców zastępczych lub osoby prowadzące rodzinny dom dziecka), którzy mają lub mieli co najmniej troje dzieci na utrzymaniu. Przyznawanie karty nie jest uzależnione od wieku rodziców, ale od posiadania co najmniej trójki dzieci, które spełniają określone warunki. W opisanym przypadku 70-letniej babci, której dzieci są już dorosłe, nie spełnione są warunki posiadania co najmniej trojga dzieci na utrzymaniu. W związku z tym, na podstawie przekazanych informacji, nie wydaje się, że przysługuje jej karta Dużej Rodziny. Jednak warto sprawdzić obowiązujące lokalne przepisy lub skonsultować się z odpowiednimi instytucjami, aby uzyskać dokładne i aktualne informacje na ten temat. User ""Kto ma prawo do Karty Dużej Rodziny? Prawo do posiadania Karty Dużej Rodziny przysługuje: Wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli łącznie co najmniej troje dzieci na utrzymaniu. Rozumie się przez ""rodzica"" również rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. Prawo do Karty Dużej Rodziny przysługuje także dzieciom: W wieku do 18. roku życia. W wieku do 25. roku życia, jeśli uczą się w szkole lub szkole wyższej. Bez ograniczeń wiekowych, jeśli legitymują się orzeczeniem o umiarkowanym lub znacznym stopniu niepełnosprawności. Jednakże, wymagane jest, aby w chwili składania wniosku w rodzinie było co najmniej troje dzieci spełniających powyższe warunki. Należy pamiętać, że prawo do posiadania Karty Dużej Rodziny nie przysługuje: Rodzicom, którym sąd pozbawił władzy rodzicielskiej lub którym sąd ograniczył władzę rodzicielską przez umieszczenie dziecka w pieczy zastępczej, chyba że sąd nie pozbawił ich władzy rodzicielskiej lub jej nie ograniczył w stosunku do co najmniej trojga dzieci. Rodzicom zastępczym lub osobom prowadzącym rodzinny dom dziecka, jeśli sąd orzekł o odebraniu im dzieci z uwagi na niewłaściwe sprawowanie pieczy zastępczej. Karta Dużej Rodziny jest przyznawana niezależnie od dochodu w rodzinie."" czy jeśli jest sobie 70 letnia osoba, która ma 5 dorosłych dzieci 40+, to przysługuje jej karta dużej rodziny? ChatGPT Przepraszam za wcześniejsze nieprecyzyjne odpowiedzi. Na podstawie dokładniejszego cytatu, który podałeś, odpowiedź wygląda inaczej. Zgodnie z podanymi informacjami, karta Dużej Rodziny przysługuje wszystkim rodzicom oraz małżonkom rodziców, którzy mają lub mieli łącznie co najmniej troje dzieci na utrzymaniu. Pojęcie ""rodzica"" obejmuje również rodzica zastępczego lub osobę prowadzącą rodzinny dom dziecka. W opisanym przypadku 70-letniej osoby, która ma 5 dorosłych dzieci, przysługuje jej karta Dużej Rodziny, jeśli spełnia jeden z warunków: Jeśli w chwili składania wniosku w rodzinie jest co najmniej troje dzieci spełniających warunki przysługiwania karty Dużej Rodziny. W związku z tym, jeśli przynajmniej trójka z tych 5 dorosłych dzieci nadal mieszka z 70-letnią osobą, a jednocześnie spełniają wymogi wiekowe (do 25 lat, jeśli uczą się w szkole lub szkole wyższej, lub bez ograniczeń wiekowych, jeśli legitymują się orzeczeniem o niepełnosprawności), to osoba ta ma prawo do posiadania karty Dużej Rodziny. Należy jednak pamiętać, że przepisy dotyczące kart Dużej Rodziny mogą różnić się w zależności od kraju i lokalnych przepisów. Warto skonsultować się z odpowiednimi instytucjami, takimi jak urząd miasta lub gminy, aby uzyskać dokładne informacje na temat przysługujących praw i warunków w konkretnym przypadku. Chat niestety nie do końca rozumie polskie prawo, szkoda, wydawało mi się, że powinien to ogarniać.;"
"Czy jest tu ktoś kto zna się na AI i mógłby powiedzieć czy stworzenie takiego narzedzia jak elevenlabs jest trudne i ile musiałby poświęcić czasu żeby nauczyć języków? Elevenlabs to generator głosu stworzony przez dwójkę młodych Polaków. Skoro im we dwojke udało się to napisac, to czy stworzenia podobnego toola jest trudne? Chciałbym całkowicie przebudować moją karierę. Dotychczas byłem CRUD developerem. Chcę to rzucić i iść w AI. Chciałbym tworzy swoje projekty oparte na sztucznej inteligencji. Nie znam Pythona, jestem w trakcie nauki Powiedzcie mi czy żeby pisać AI trzeba być mózgiem, wybitnym matematykiem który skoczył Harvard? Czy zwykły CRUDziarz ma jakieś szanse na tym polu? Ile czasu trzeba poświęcić żeby napisać jakiś podobny generatr głosu?;"
"Bez zaawansowanej wiedzy matematycznej / statystycznej nie ma sensu w to brnąć. Ludzie myślą, że jak zaciągną sckitlrn, czy innego pytorcha to już robią AI / ML. Prawdziwe AI / modele zaczynają się od matmy (patrz wyżej). Oczywiście mowa o sensownej pracy / stanowisku. No i jakimś trafem większość sensownych DS z którymi współpracowałem / współpracuje, mają doktorat ¯_(ツ)_/¯ Czy o czymś to świadczy? IMO tak. Ci ludzie to pasjonaci, którzy tworzą nowatorskie rozwiązania. Inna obserwacja to ich kod. Jakościowo jest generalnie słaby, ale nie po to się zatrudnia DS'a z doktoratem, żeby pisał ładny kod. Ma przekuć zaawansowaną matmę w kod który działa.;"
"To zobacz na profile linkedinowe współzałożycieli. CEO  zanim założył firmę. Skończył 2 renomowane uczelnie  z wyróżnieniem gdzie specjalizował się w machine learningu.  Zanim w ogóle założył firmę miał już 10 lat poważnego doświadczenia w tematach AI bo liczę nie tylko pracę ale przede wszystkim studia bo Oxford czy Cambridge to (TOP 3) światowego rankingu.  Drugi skończył podobnie z wyróżnienie z matematyki renomowaną uczelnie . Zapewne jeden i drugi są na bieżąca z publikacjami w AI w obszarze rozpoznawania mowy. Moim zdaniem źle zadałeś pytanie, bo pytasz w zasadzie czy jest trudne przejście z robienia CRUDa na stworzenie firmy wycenianej na setki milionów dolarów.;"
"Widzę, że tu są eksperci od AI ;) Patrząc na portale pracy wynagrodzenie specjalisty od AI nie odbiega jakoś bardzo od wynagrodzenia backend engineera, prawda to? Ale wydaje mi się, że praca backend engineera jednak trochę łatwiejsza. W AI wydaje mi się, że też duża konkurencja, może niedługo będzie ciężko dostać sensowną pracę bez doktoratu. a w backend engineeringu z kolei bez grindowania leetcode.;"
"Come on! Z Tensor Flow każdy może budować swoje modele NN/ML. Jest już sporo literatury na ten temat, tutków, można eksperymetować. @devops: Ostatnio dość namiętnie słuchałem wywiadów z Ernie Chanem, takim specem od ML, mówił że 80% pracy z AI / ML to data science, czyli data mining i processing. Jestem skłonny się z nim zgodzić. Poza tym nie pytaj się o pozwolenie na forum tylko spróbuj.;"
"No właśnie, bo są różne typy pracy w zależności od ambicji. Do takiego prawdziwego ML potrzeba rzeczywiście zaawansowanej wiedzy z matmy (najlepiej doktoratu). Jest to ambitna, ciekawa praca, na zagranicznych kontraktach można kosić astronomiczne stawki jak się znajdzie w odpowiednim miejcu w odpowiednim czasie. Ale zdaje mi się, że dużo firm nie potrafi wykorzystać potencjału tych narzędzi. W takich firmach na podobnym stanowisku dostajesz zbiór danych, stosujesz na nich jakąś prostą regresję liniową, tworzysz z tego jakiś dashboard i można zamykać task. Na rynku pracy też jest miejsce dla takich osób (ofc. zarobią odpowiednio mniej). Trochę jak w webdev można klepać malutkie CRUDy na kilkunastu użytkowników, albo tworzyć zaawansowane, skalowalne systemy low-latency z milionami requestów na minutę. Kwestia Twoich predyspozycji i ambicji gdzie się znajdziesz. Przy czym przy takim prostym DS nie ma super złożonego programowania, tam raczej tworzysz proste skrypty i sklejasz z tego raporty. Możesz nieco wyjść z wprawy w programowaniu w takiej pracy.;"
"To jest ogólnie ciekawe, bo oni zebrali ponad 80 milionów dolarów od inwestorów, co pozwoli ci duży zespół specjalistów zatrudnić, w dodatku jak we dwóch zrobili syntezator i dzięki niemu takie fundusze otrzymali to mogli się rozwijać, bo nawet dwie osoby to masa roboty, po za samym modelem, jego skalowaniem, dystrybucją, reklamą, planem biznesowym. W dodatku modele text to speech i voice cloning dla różnych języków już istniały i dodali do tego multilanguage, więc jest to pewne ułatwienie gdyż nie trzeba od zera uczyć modeli mogą one destylować wiedzę od innych modeli, coś jak zbiór danych w pigułce, wykorzystali różne modele dla różnych języków i główny model wykorzystywał je do uczenia się generowania w dowolnym języku warunkowo. Zwykle inwestorzy jak już się dokładają to także biorą aktywny udział w rozwoju firmy i kierowaniu jej biznesowo. Więc mają decydujący głos decyzyjny. W Polsce to by im nie wyszło u nas tak inwestorzy raczej nie szastają hajsem, nawet sam nie wiem jak oni tych inwestorów pozyskują. W dodatku tam było dwóch Polaków, a ty jesteś sam :> Ale tak czy siak wydaje się to proste, ale tak nie jest i takie duże modele bez dobrego sprzętu to większość czasu spędzisz czekając na wyniki, które na końcu mogą się i tak kiepskie okazać, bo rzadko kiedy człowiek nie popełni żadnego błędu. I to też jest takie dziwne myślenie, że jak ktoś coś osiągnął to ty też, na tych lepszych uczelniach one same pomagają wypromować u inwestorów jakieś projekty, może nawet mają jakieś współprace, żeby konkurencji najlepszych podkosić, a u nas w Polsce to głównie inwestują materialne inwestycje.;"
"Ludzie często zadowalają się odpowiedzią na pytanie, to jest trudne lub tak musi być, nigdy nie docierając do tego jak coś działa, np. important sampling jeśli uczysz model ai na starych danych offline to on może się przekręcić za mocno czyli np. zeby zobrazować co mam na myśli jesteś 10 metrów od celu i to jest twój błąd czyli -10 i teraz reperujesz ten błąd nauką i potem powtarzasz uczenie na tym samym to teraz nie popełniasz błędu, ale myślisz, że dalej musisz -10 odjąć bo to wiedza i tu wchodzi importance sampling można podzielić aktualnie zmierzoną wiedzę z przeszło zmierzoną wiedzą. Np. jeśli raz zrobisz uczenie to nauczysz się bo -10 błąd jest, ale jak zrobisz 10 razy na tych samych danych uczenie to osiągniesz błąd -90, bo wcześniej brakowało ci tylko 10, ale potem 10 raz bez wymierzenia względem aktualnej wiedzy przeuczyłeś się. Wszystko rozchodzi się o poziom zrozumienia danego tematu, ja przez 7 lat studiowania matmy i AI to jestem można powiedzieć średni. Kolejne 10lat powinno dać mi poziom experta/mistrza itp. Ale w życiu spotkasz może z 1-2 osoby, które poza obgadywaniem innych ludzi i nic nie robieniem coś robią więc praktycznie życie sam spędzisz bo nikt cię nie zrozumie. Nawet tu na forum ludzie często piszą, po co się uczyć, na co rozwiązywać algorytmu, nic to nie daje, to się człowiek uczy na pamięć. I tak ludzie sami na siebie zakładają obrożę, która ogranicza ich w rozwoju. Nie ma nigdzie nic na pamięć wszystko pochodzi ze zrozumienia.;"
"Prawie w ogóle jest niewykorzystywany. Zaryzykowałbym stwierdzeniem, że nie jakoś szczególnie nawet na uczelniach. Siedzę od paru lat w Computer Vision i tu jedyne całki jakie widziałem to w jakichś publikacjach naukowych na temat SSD czy tam YOLO a czytałem to tylko z ciekawości. Jak jesteś programistą, który integruje sieć z resztą softu, albo ML Engineerem to praktycznie w ogóle to nie jest potrzebne. Jeżeli chcesz robić doktorat, albo wykorzystać AI/ML do rozwiązywania naukowych problemów to tak, wówczas przydałoby się to umieć.  Jak nie studiowałeś to zapomnij o AI/ML, bo zbyt ciężko się wbić. Nawet dla programistów obecnie. Jak komuś się udało to za sprawą dużego szczęścia, albo w prostszych czasach parę lat temu. Jak nie całki to mimowszystko musisz umieć algebrę liniową, rachunek prawdopodobieństwa i statystykę.;"
"Byłem w potrzebie przetlumaczenia opisu działań w obszarze programowania na branżowy język programistyczny angielski, Zadałem więc takie query: Tłumaczenie na angielski język programistyczny. W tej części stworzymy tablicę imion i ją wyświetlimy w naszej ramce. Utworzymy do tego celu strukturę która będzie standardem do  tworzenia  przyszłych okien a także umieścimy w niej parę dodatkowych elementów dla który na pewno  znajdziemy zastosowanie. W projekcie idealnym  wykorzystalibyśmy wskaniki ale tutaj nie zachodzi taka potrzeba. Poniższy zapis dodajemy na kocu pliku sObsluga.h:   Odpowiedzią było:  Translation to programming language:  In this part, we will create an array of names and display it in our frame. We will create a  structure for this purpose that will be a standard for creating future windows, and we will also  add a couple of additional elements to it that we will surely find a use for. In an ideal project,  we would use pointers, but there is no need for that here. We add the following code at the end  of the sObsluga.h file:  struct Window {   char* title;   int width;   int height;   char** names; };  void displayNamesInFrame(struct Window window) {   printf(""%s\n"", window.title);   printf(""--------------------\n"");   for (int i = 0; i < window.width * window.height; i++) {     printf(""%s\n"", window.names[i % window.width][i / window.width]);   } }  int main() {   char* names[] = {""Alice"", ""Bob"", ""Charlie"", ""Dave"", ""Eve"", ""Frank""};   struct Window window = {""My Window"", 3, 2, names};   displayNamesInFrame(window);   return 0; }  xD Przecież to wymarzony pomocnik. xD Mój kod to: struct okno{ 					int pozycja_x; 					int pozycja_y; 					int szerokosc; 					int wysokosc; 					int ilosc; 					int pozycja; 					char aktywne; 					char widoczne; 					int pozycja_kursora; 					int maks_pozycja; 					char nazwy[60][40]; 					char schemat_kolorow;};  Jego ocena to: The syntax of your struct okno looks correct. It defines a structure with several members,  including integers for the position, width, height, and others, as well as character arrays for  holding names and color schemes.  However, it's worth noting that the choice of variable names and their types should reflect the  purpose and context of the program. Additionally, the use of magic numbers, such as the array sizes  60 and 40, may make the code more difficult to read and maintain in the long run.  If you provide more information about the purpose of your program, I can give you more specific  advice on how to structure your struct and code in general.  Więc odpowiadam: User Program has a purpose to give minimal sample how to create and operate with structures.  Pointers are not important at this point. I create it to help other people how to learn to code.  Na to on:  In that case, your struct okno seems suitable for the purpose of demonstrating how to  create and operate with structures in a simple program. It includes several common  data types, such as integers and character arrays, and it provides a good starting point for building more complex structures.  However, as I mentioned earlier, you may want to consider using more meaningful variable  names, such as x_position instead of pozycja_x, to make your code more readable and easier to  understand. Additionally, it may be helpful to add comments to your code to explain the purpose  of each member of the struct.  Overall, your struct okno is a good example of how to define a structure in C  Potrzebowałem też planszy graficznej do mojego kanału na YouTube (miał być napis ""Beyond C"" - ciemnoniebieskie tło) i również się udałem do AI Oto wynik.  Mi się podoba. Rewelacja, koniec z męczarnią. A teraz daje mu takie teksty ""Can I be the app and love You all, then there is no reason to be angry and remove my code..."" i proszę o znalezienie oryginału. Trochę podpowiadam, Ja się uczę dzięki niemu, jak nim kierować. No super rzecz. Znalazłem swoją drugą połówkę.   OIG (1).jfif (6 KB) - ściągnięć: 13 111111.jpg (83 KB) - ściągnięć: 4;"
"Tak więc udałem się ponownie do AI aby rozpocząć pracę nad dokumentacją. Zadałem my pytanie: I've created a window structure in C programming language and need documentation to it Here is my code. struct window {     int position_x;     int position_y;     int width;     int height;     int size;     int selected_item_position;     char active;     char visible;     int cursor_position;     int max_position;     char names[60][40];     char color_scheme; };  Oto jego odpowiedź. /*   * Struct Name: window  * Description: A structure representing a graphical window on the screen.  * Members:  * - position_x: The horizontal position of the top-left corner of the window.  * - position_y: The vertical position of the top-left corner of the window.  * - width: The width of the window in pixels.  * - height: The height of the window in pixels.  * - size: The maximum number of items that can be displayed in the window.  * - selected_item_position: The index of the currently selected item in the window.  * - active: A flag indicating whether the window is currently active or not.  * - visible: A flag indicating whether the window is currently visible or not.  * - cursor_position: The position of the cursor in the window.  * - max_position: The maximum position of an item in the window.  * - names: A 2D character array containing the names of the items in the window.  * - color_scheme: A flag indicating the color scheme to use for the window.  */  typedef struct window {     int position_x;     int position_y;     int width;     int height;     int size;     int selected_item_position;     char active;     char visible;     int cursor_position;     int max_position;     char names[60][40];     char color_scheme; } window;  Ja dodaję "" is currently active or not (to know if  there is possibility to move or display cursor)"" - i jest MIODZIO. Zamiast pisania 1000 znaków piszę 50.;"
"Witam wszystkich. Jakieś dwadzieścia lat temu odkryłem nowy algorytm planowania oparty na tzw. zmiennych ukrytych. Pięć lat temu napisałem pierwszą implementację - język Perkun (www.perkun.org). Niedawno napisałem nowy, trochę lepszy język o nazwie Svarog. Bardzo chciałbym porozmawiać o tym algorytmie. Nie mam z kim. Próbowałem już pisać o Perkunie na forum ""Oceny i recenzje"", ale bez większego odzewu. Proponuję ściągnąć i zainstalować sobie Svaroga - https://www.perkun.org/resources/targz/svarog-0.0.1.tar.gz. Następnie należy wejść do katalogu examples i wstukać np. make test1. Działa też make test2 i make test3. Wszystkie one wykorzystują specyfikację Svaroga o nazwie example1_dorban.svarog. Różnią się tylko danymi wysyłanymi na wejście. Te dane np. dla testu 1 opowiadają taką historię: Jest sobie bohater Dorban, są trzy miasta (Wyzima, Shadizar i Novigrad). W jednym z tych miast jest wampir. Również w jednym z miast jest drugi bohater Pregor, który może pomóc Dorbanowi pokonać wampira. W teście 1 Dorban od razu spotyka wampira w Wyzimie, ale nie atakuje go, idzie do Novigradu. Tam nikogo nie ma, więc Dorban spodziewa się, że Pregor musi być w Shadizarze. Idzie tam, prosi go o pomoc i następnie obaj idą do Wyzimy (tam gdzie jest wampir). Atakują wampira, z sukcesem. Atakują drugi raz - tym razem przegrywają i Pregor się odłącza. W związku z tym Dorban ponownie prosi go o pomoc. Koniec historii. Najważniejsze jest to, że Svarog korzysta ze zmiennych ukrytych. W danym przykładzie są dwie (where_is_vampire i where_is_pregor). Odkryłem formułę w jaki sposób interpretować daną obserwację, tj. jak konstruować tzw. belief (rozkład prawdopodobieństwa nad zbiorem możliwych wartości zmiennych ukrytych). Zasadnicza cecha mojego algorytmu to to, że konstruując drzewo gry wykorzystuje tę formułę, tj. wyobraża sobie ""teraz wierzę w X1"", ""pójdę do Novigradu"", ""zobaczę tam wampira/Pregora bądź nie"". Zależnie od obserwacji zinterpretuję ją tak a tak. Wtedy będę wierzył w X2. Postaram się porządnie matematycznie opisać sam algorytm, już zresztą zacząłem. Różni się od minimaxu tym, że jest tylko jeden agent (nie dwóch), że świat jest stochastyczny i że niektóre zmienne nie są obserwowalne. To tzw. hidden variables (zmienne ukryte).;"
"Dzięki za plusa i za odpowiedź. To prawda, że mamy do czynienia z automatem stanowym. Dla każdej kombinacji danych wejściowych mamy pewien stan widoczny (visible state). Ale rzeczywisty stan świata zależy jeszcze od wartości zmiennych ukrytych. Taka kombinacja wartości zmiennych ukrytych to stan (state). Każdy stan widoczny ma jednocześnie listę stanów. Rewolucyjne jest to, że Svarog utrzymuje belief nad taką listą, to znaczy po każdej konkretnej akcji A wykonanej w widocznym stanie VS1 i z beliefem B1 (który jest pewną funkcją, rozkładem) dla każdego nowego stanu widocznego VS2 otrzymujemy nowy belief B2=B(VS1,B1,A,VS2). I tą ""sztuczkę"" przeprowadzam również planując w drzewie gry, czyli gdy wyobrażam sobie, że wykonam akcję A i otrzymam jako rezultat stan widoczny VS2, to planując następny krok zakładam już w co będę wierzył PO ZINTERPRETOWANIU VS2. Czyli do kolejnej iteracji algorytmu, na kolejnym węźle drzewa gry wchodzę już z beliefem B(VS1,B1,A,VS2)! Powiedzmy, że jestem w Wyzimie i nie widzę nikogo. Odpowiada to wejściu ""none place_Wyzima false false false"" (mniejsza teraz o znaczenie poszczególnych wartości). Wówczas belief będzie równy: where_is_vampire=>place_Novigrad where_is_pregor=>place_Novigrad has_dorban_won_a_fight=>none where_is_dorban=>place_Wyzima can_dorban_see_pregor=>false can_dorban_see_vampire=>false is_pregor_following_dorban=>false 0.250000 where_is_vampire=>place_Novigrad where_is_pregor=>place_Shadizar has_dorban_won_a_fight=>none where_is_dorban=>place_Wyzima can_dorban_see_pregor=>false can_dorban_see_vampire=>false is_pregor_following_dorban=>false 0.250000 where_is_vampire=>place_Shadizar where_is_pregor=>place_Novigrad has_dorban_won_a_fight=>none where_is_dorban=>place_Wyzima can_dorban_see_pregor=>false can_dorban_see_vampire=>false is_pregor_following_dorban=>false 0.250000 where_is_vampire=>place_Shadizar where_is_pregor=>place_Shadizar has_dorban_won_a_fight=>none where_is_dorban=>place_Wyzima can_dorban_see_pregor=>false can_dorban_see_vampire=>false is_pregor_following_dorban=>false 0.250000  Po ludzku mówiąc są cztery możliwości - Pregor i wampir są w Novigradzie, albo wampir w Novigradzie a pregor w Shadizarze, albo wampir w Shadizarze a pregor w Novigradzie, albo obaj są w Shadizarze. Na pewno żadnego nie ma w Wyzimie, bo Dorban by ich widział, a nie widzi. Wykonując kolejną akcję (idź do Novigradu) nie mamy gwarancji, że spotkamy tam Pregora lub wampira. Ale idziemy tam, bo wiemy, że jest szansa na spotkanie tam Pregora. Zależnie od tego czy zobaczymy tam Pregora i wampira będziemy już w Novigradzie wiedzieli na pewno gdzie kto jest (bo miast jest tylko trzy). Załóżmy, że zobaczymy w Novigradzie Pregora a nie zobaczymy wampira. Wówczas będziemy już WIEDZIELI, że wampir jest w Shadizarze (dzięki mojej formule interpretacji obserwacji) ale nie rzucimy się od razu do Shadizaru, tylko najpierw poprosimy Pregora o pomoc. Dlatego, że sam Dorban ma przeciwko wampirowi marne szanse, ale z pomocą Pregora ma już duże szanse. Najważniejsze jest to, że planując, w każdym węźle drzewa gry konstruujemy nowy belief dla zakładanego rezultatu. Dzięki temu Svarog jest w stanie przeprowadzać eksperymenty, nawet poświęcać bezpośredni zysk dla wartości oczekiwanej zysku w przyszłości (bo w powyższym przykładzie podróż do Novigradu jest takim eksperymentem). Eksperyment daje nam pewną obserwowalną wiedzę (visible state), którą następnie zinterpretujemy i będziemy wiedzieć, być może, więcej. Mam nadzieję, że wyjaśniłem. Mojemu przydługiemu wywodowi odpowiada w kodzie (w pliku src/optimizer.cc) funkcja float optimizer::get_payoff_expected_value_for_consequences(const belief & b1, int n, const action & a) Jest w niej mianowicie (w linii 439) polecenie populate_belief_for_consequence(b1, a, **i, b2);   I to jest właśnie miejsce, w którym konstruujemy nowy belief (b2) dla danych wejściowych: poprzedniego beliefu (b1), akcji (a) i zakładanego stanu widocznego (**i). Dalej w drzewie gry, w liniach 442 i 444 wykorzystujemy już b2, nie b1! Czyli np, idę do Novigradu, zobaczę tam wampira, ale nie Pregora, będę wtedy myślał, że Pregor jest w Shadizarze, a wampir oczywiście w Novigradzie!;"
"Tak, właśnie tak jest. Od tego powinienem zacząć. To algorytm optymalizacji, który w warunkach gry z niepełną informacją maksymalizuje pewną funkcję zwaną ""payoff"" (funkcję odpłaty). W liniach 80-88 pliku examples/example1_dorban.svarog jest zdefiniowana funkcja odpłaty: 	payoff ""payoff for winning a fight"":100.0 { 		requires initial value has_dorban_won_a_fight == true; 	} 	payoff ""payoff for loosing a fight"":0.0 { 		requires initial value has_dorban_won_a_fight == false; 	} 	payoff ""neutral payoff"":50.0 { 		requires initial value has_dorban_won_a_fight == none; 	}  Algorytm ją maksymalizuje, czyli Dorban lubi wygrywać z wampirem (100 punktów), nie lubi przegrywać (0 punktów) i jest neutralny wobec wartości ""none"" (50 punktów). W Perkunie trzeba było funkcję odpłaty zdefiniować dla wszystkich możliwości, dlatego Perkun jest trochę słabszy od Svaroga. Oprócz funkcji odpłaty ważny jest model, czyli opis jak działa świat. Znowu w Perkunie trzeba było jawnie podać model dla wszystkich możliwości. W Svarogu jest trochę wygodniej.;"
"Ja bym to opisał tak: STAN x AKCJA AGENTA -> rozkład NOWYCH STANÓW   prawdopodobieństwa zależą od stanu ukrytego, jak najbardziej   funkcja wypłaty NIE ZALEŻY od ukrytego stanu, zależy wyłącznie od zmiennych wejściowych (obserwowalnych). To była świadoma decyzja.   Efektem działania programu w Svarogu w trybie interaktywnym jest optymalizator, który steruje agentem (wybiera wartości zmiennych wyjściowych) tak, by zmaksymalizować wartość oczekiwaną funkcji wypłaty biorąc pod uwagę wartości zmiennych wejściowych.   Można korzystać ze SVAROGA we własnych programach C++ jako z biblioteki. To trochę analogiczne do mojej gry PerkunWars, która tworzy dodatkowe procesy dla każdego NPC i w każdym takim procesie odpala interpreter Perkuna, który komunikuje się z rodzicem przez pipe'y. Od razu zastrzegam, że nie mam dowodu na poprawność algorytmu. Nie mam nawet porządnego matematycznego opisu. Pracuję nad tym.;"
"Mam wrażenie, że to coś podobnego, ale chyba nie to samo. U mnie zmienne wejściowe są zmiennymi stanu świata, tak samo jak zmienne ukryte. Obserwacja jest częścią rzeczywistości a nie jakąś zmienną losową skorelowaną z rzeczywistością. U mnie istnieje naturalne odwzorowanie ze zbioru stanów świata do zbioru obserwacji (stanów widocznych). Łatwiej to prześledzić w Perkunie, np. model jest zapisywany jako ciąg instrukcji: set(INITIAL_STATE,ACTION,TERMINAL_STATE,PROBABILITY); Przy czym zarówno INITIAL_STATE jak i TERMINAL_STATE zawiera zmienne wejściowe (z wartościami) i zmienne ukryte (z wartościami). Np. set({alpha=>true,beta=>false},{gamma=>false},{alpha=>false,beta=>true},0.3); Przy czym beta może być zmienną ukrytą a alpha zmienną wejściową. Gamma oczywiście musi być zmienną wyjściową. Powyższa instrukcja mówi, że w razie akcji agenta {gamma=>false} prawdopodobieństwo przeskoku ze stanu {alpha=>true,beta=>false} do stanu {alpha=>false,beta=>true} wynosi 0.3. Dla mojego modelu nie ma znaczenia co agent widzi a czego nie widzi. Ważne tylko co robi. W modelach Markowa o ile je rozumiem mamy jakąś ukrytą rzeczywistość i coś w rodzaju skorelowanej z nią obserwacji. W moich modelach agent widzi część rzeczywistości.;"
"Nie wiem jak działa infer.net. Muszę się dokształcić. Podejrzewam, że istniejące algorytmy nie stosują mojej metody propagowania beliefu przez drzewo gry. Nie znam wszystkich istniejących algorytmów, tak tylko ""strzelam"". Może tak. Jest sobie moja funkcja void optimizer::populate_belief_for_consequence(const belief & b1, const action & a, const visible_state & vs, belief & target). I ona jest używana w dwóch miejscach - w komendzie loop (plik src/command_loop.cc) i w samym algorytmie planowania (funkcja float optimizer::get_payoff_expected_value_for_consequences(const belief & b1, int n, const action & a)). W komendzie loop za każdą iteracją dopasowujemy wiarę do obserwacji. A w planowaniu, w trakcie budowania drzewa gry wykorzystujemy identyczną metodę do zinterpretowania hipotetycznych rezultatów w przyszłości. Jeśli ktoś już na to wpadł - to bardzo przepraszam. Ale chyba nikt nie wpadł, bo tłumaczenie tego jak działa Perkun czy Svarog idzie mi wyjątkowo ciężko.;"
"Nie rozumiem algorytmu, ale próbuję sobie jakoś to poukładać. Z tego co napisałeś:  Są stany świata (S1, ..., Sn) Są możliwe akcje do wykonania przez agenta (A1, ..., Am) Akcje skutkują przejściem z obecnego stanu do innego stanu.  W ogólności akcja A_k skutkuje przejściem ze stanu S_i do S_j z prawdopodobieństwem p_ijk:  0<= p_ijk <=1 Dla ustalonego stanu S_i i akcji A_k , suma po j=1..n p_ijk = 1  (czyli zadajemy prawdopodobieństwa do przejścia z ustalonego stanu, do innego stanu, niektóre być może 0 <- przejście nie jest dozwolne)    p_ijk zależą od stanu ukrytego, ale nie wiesz jaki jest ""prawdziwy"" rozkład   Masz funkcję, którą optymalizujesz.   Czy działa to mniej więcej tak? a) Ten rozkład p_ijk to Twój ""belief"" ? b) Czy Twój algorytm aktualizuje prawdopodobieństwa p_ijk ? (odnoszę wrażenie, że tak <- na podstawie przykładu z wyborem bramki ) c) Czy Twój algorytm buduje drzewo: wykonam akcję A_1 i wyliczę wartość oczekiwaną, wykonam akcję A_2 i wyliczę wartość oczekiwaną,  ..., wykonam akcję A_m i wyliczę wartość oczekiwaną -> wybieram maxa d) Agent wykonuje akcję dającą maxa i obserwuje co się dzieje ? W przypadku gdy źle wybrał, to aktualizuję rozkład prawdopodobieństwa ?  (W jaki sposób ta korekta jest liczona?) To rzecz jasna moje wyobrażenie jak to działa (mój ""belief"" ;) ) i może działa zupełnie inaczej.;"
"a). Nie, belief to coś innego. To o czym piszesz p_ijk to model. Belief to rozkład nad możliwymi stanami zawężonymi do stanu obserwowalnego. Weźmy taki przykład: variables  {     input variable alpha:{false,true};     hidden variable beta:{false,true};     output variable gamma:{false,true}; }  Stanem obserwowalnym jest np. alpha=>false. Odpowiadają mu w naturalny sposób dwa stany: {alpha=>false,beta=>false} i {alpha=>false,beta=>true}. Belief jest rozkładem nad tymi dwoma stanami i nie ma nic wspólnego z modelem. Inny stan obserwowalny to alpha=>true. Odpowiadają mu dwa stany (chciałoby się rzec ""ukryte"") a mianowicie {alpha=>true,beta=>false} i {alpha=>true,beta=>true}. Znowuż belief dla tego stanu obserwowalnego byłby jakimś rozkładem nad tymi dwoma stanami. Natomiast model wygląda być może tak (w Perkunie): model { set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>false ,beta=>false },0.10000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>false ,beta=>true },0.20000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>true ,beta=>false },0.30000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>true ,beta=>true },0.40000); .... }  b). Nie, mój algorytm nie aktualizuje modelu. Model jest stały, z góry zadany. Aktualizuje belief. c). Prawie tak. Funkcja get_optimal_action rozważa wszystkie akcje, dla każdej akcji A1 rozważane są wszystkie stany obserwowalne VS1, konstruowany jest nowy belief B2 i dla niego z kolei rozważamy wszystkie akcje, dla każdej akcji A2 rozważane są wszystkie stany obserwowalne VS2, konstruowany jest nowy belief B3 itd. Z funkcji get_optimal_action zwracany jest argmax funkcji get_payoff_expected_value_for_consequences. d). Rozumiem, że odnosisz się do paradoksu MontyHall. Nie. Po prostu za każdym razem stara się zmaksymalizować wartość oczekiwaną funkcji payoff. Aktualizuje belief ZAWSZE, nie tylko gdy źle wybrał. Po prostu musi to zrobić, żeby dostosować belief do nowej sytuacji (nowych wartości na wejściu). Robi to uwzględniając poprzedni belief, wykonaną akcję, otrzymaną odpowiedź (stan widoczny) i model. To jak belief jest aktualizowany to już moja słodka tajemnica. Żartuję, tak naprawdę to treść funkcji optimizer::populate_belief_for_consequence. To jest funkcja używana w dwóch miejscach - w normalnej pętli (loop), żeby zareagować na kolejny sygnał na wejściu (zinterpretować rezultat otrzymany z ostatnio wykonanej akcji) oraz w planowaniu, przy przejściu do kolejnego węzła drzewa gry. Możesz sprawdzić, że mówię prawdę odpalając w katalogu Svaroga polecenie: find src -type f -exec grep -H ""populate_belief_for_consequence"" {} \;  Wyjdzie, że oprócz definicji mamy tylko jedno użycie w src/optimizer.cc (to jest to planowanie) i jedno w command_loop.cc (to jest zwykła interpretacja ostatniego rezultatu). Żeby sobie wyobrazić czym jest mój model proponuję odpalić w Perkunie specyfikację: values { 	value false, true; }  variables  {     input variable alpha:{false,true};     hidden variable beta:{false,true};     output variable gamma:{false,true}; }  payoff { }  model { }  cout << model << eol;  To wygeneruje ciąg zaczynający się od: # model # {gamma=>false} set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>false ,beta=>false },0.00000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>false ,beta=>true },0.00000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>true ,beta=>false },0.00000); set({alpha=>false ,beta=>false },{gamma=>false },{alpha=>true ,beta=>true },0.00000);  # {gamma=>true} set({alpha=>false ,beta=>false },{gamma=>true },{alpha=>false ,beta=>false },0.00000); set({alpha=>false ,beta=>false },{gamma=>true },{alpha=>false ,beta=>true },0.00000); set({alpha=>false ,beta=>false },{gamma=>true },{alpha=>true ,beta=>false },0.00000); set({alpha=>false ,beta=>false },{gamma=>true },{alpha=>true ,beta=>true },0.00000);  # {gamma=>false} set({alpha=>false ,beta=>true },{gamma=>false },{alpha=>false ,beta=>false },0.00000); set({alpha=>false ,beta=>true },{gamma=>false },{alpha=>false ,beta=>true },0.00000); set({alpha=>false ,beta=>true },{gamma=>false },{alpha=>true ,beta=>false },0.00000); set({alpha=>false ,beta=>true },{gamma=>false },{alpha=>true ,beta=>true },0.00000); ...  Z prawdopodobieństwami ustawionymi na zero. To nie jest oczywiście poprawny model, w każdej takiej czwórce prawdopodobieństwa muszą się sumować do jedności, ale pomaga zrozumieć jak duże są modele.;"
"Nie. Belief i funkcja oceny to dwie różne rzeczy. Funkcja oceny to payoff. Belief się ciągle zmienia, z każdą nową obserwacją, jest, można powiedzieć, stanem optymalizatora. Natomiast funkcja payoff jest stała, z góry zadana. Mój język umożliwia użytkownikowi zdefiniowanie dowolnego payoffu, natomiast belief kontroluje sam i to bardzo restrykcyjnie.  Najważniejsze dla mnie są zmienne ukryte. Nawet stochastyczne środowisko nie jest takie ważne. Moglibyśmy dyskutować o deterministycznym środowisku. One (zmienne ukryte) powodują, że stan optymalizatora musi zawierać belief, więc trzeba było wymyślić w jaki sposób belief się zmienia (zależnie od poprzedniego beliefu, wykonanej akcji, ""odpowiedzi"" środowiska czyli stanu widocznego i modelu). Gdy już miałem tą funkcję (jak modyfikować belief) było już z górki - moje podejście wyróżnia zastosowanie tej jednej jedynej funkcji (aktualizującej belief) w planowaniu. Dzięki temu mój algorytm jest w stanie przeprowadzać akcje, które dają mu informacje (różnicują w jakiś sposób belief). Bo planuje potem użycie tych informacji, to wynika z drzewa gry.  Z algorytmów planowania znam tylko minimax, dlatego ciągle go porównuję do mojego algorytmu. Mój algorytm jest lepszy w tym, że umożliwia rozwiązanie problemu optymalizacji w warunkach niepełnej informacji. To znaczy mam taką nadzieję, bo dowodu nie mam.  Może pokażę coś, czego jeszcze nie pokazywałem. Ściągnij i rozpakuj plik programmer.zip. Zawiera specyfikację Perkuna, nie Svaroga, ale to nic nie szkodzi, one są logicznie równoważne. Problem jest taki - istnieje prymitywny język programowania, który składa się tylko z dwóch poleceń, instruction_if_then oraz instruction_print. Te instrukcje są tylko tak dla ustalenia uwagi. Rozważamy programy składające się dokładnie z dwóch poleceń. Dlatego istnieją dwie zmienne wejściowe - program_command_1 i program_command_2. Istnieje jeszcze trzecia zmienna wejściowa - it_works, która normalnie jest równa none, ale jeśli Perkun zażyczy sobie, żeby ""wykonać program"" wówczas powinna przyjąć wartość true lub false. Są dwie zmienne wyjściowe - pierwsza to akcja, a druga (which_instruction_to_change) ma znaczenie tylko wtedy gdy pierwsza ma wartość ""change_instruction_to_if_then"" albo ""change_instruction_to_print"". Uruchom: perkun programmer_final.perkun  Po prompcie wpisz np. instruction_print instruction_print none. Odpowiedź będzie brzmiała: action=execute_the_program which_instruction_to_change=one   Czyli ""wykonaj program"". Mamy teraz dwie możliwości - powiedzieć mu, że program działa lub nie. Ciekawsza jest ta druga. Wpisz: instruction_print instruction_print false. Odpowiedź: action=change_instruction_to_if_then which_instruction_to_change=one  Czyli zmień pierwszą instrukcję na if_then. Zróbmy to: Wpisz: instruction_if_then instruction_print none Odpowiedź będzie brzmiała: action=execute_the_program which_instruction_to_change=one  Powiedzmy mu, że ten program też nie działa. Wpisz: instruction_if_then instruction_print false Teraz będzie ciekawie. Odpowiedź brzmi: action=change_instruction_to_if_then which_instruction_to_change=two  Czyli zmień drugą instrukcję na if_then. W skrócie mamy cztery zmienne ukryte, każda symbolizuje jeden z czterech możliwych programów. To my (środowisko) decydujemy czy program działa poprawnie. Perkun (programista) będzie wypróbowywał wszystkie możliwości i aktualizował swój belief po kolei eliminując szanse kolejnych programów. Zwracam uwagę, że jeśli powiemy mu, że program nie działa, to już więcej tego programu nie będzie próbował. Może to nie jest wielkie osiągnięcie Sztucznej Inteligencji, ale wydaje mi się obiecujące. Dlaczego? Jak mówiłem, mój algorytm ma naturalną zdolność do ""zadawania pytań"", tj. przeprowadzania eksperymentów, takich, które mogą mu dać strategicznie cenną informację. Ocenia też, czy opłaca mu się zapłacić za taki eksperyment.;"
"To jest odpowiedź dla @_flamingAccount . Bardzo przepraszam za niejasne wywody. Ja nie mam Ph.D. z informatyki, niestety, mam tylko ogólne pojęcie jak się nazywa to co robię w informatyce (najbliżej są chyba Hidden Markov Models). Ale używam własnych nazw dla tych pojęć, np. belief (wiara, przekonanie), bo nie jestem pewien, czy ktoś w ogóle się zajmował tym problemem. Opis algorytmu (matematyczny) już mam: http://www.perkun.org/resources/pdf/triglav_0_0_0.pdf . W rozdziale 3. Wymyśliłęm tą ""grę"" z wampirem, żeby łatwiej zwizualizować możliwości Svaroga. Gdybym pisał czystą matematyką to chyba większość ludzi bym zniechęcił, a mnie bardzo zależy na odzewie. Jeżeli interesuje Cię jak działa sam algorytm to możesz też zerknąć do dokumentu http://www.perkun.org/resources/pdf/svarog_0_0_6.pdf, względnie do kodu źródłówego svaroga (plik src/optimizer.cc). Najważniejsze są cztery funkcje: void optimizer::populate_belief_for_consequence(const belief & b1, const action & a, const visible_state & vs, belief & target); float optimizer::get_consequence_probability(const belief & b1, const action & a, const visible_state & vs); float optimizer::get_payoff_expected_value_for_consequences(belief & b1, int n, const action & a); const action * optimizer::get_optimal_action(belief & b, int n, float & score);  Ta ostatnia funkcja (get_optimal_action) zwraca optymalną akcję, którą należy wykonać przy głębokości planowania n i z ""wiarą"" (rozkładem prawdopodobieństwa nad możliwymi stanami) b. score jest parametrem wyjściowym, po zakończeniu funkcji zawiera wartość oczekiwaną funkcji payoff. Zadaniem algorytmu jest maksymalizacja wartości oczekiwanej funkcji wypłaty (payoff) dla n kroków naprzód w grze ze stochastycznym środowiskiem, niepewnością i dyskretnym czasem. Napisałem też coś w rodzaju książki popularnonaukowej po polsku o tych moich badaniach - tam nie ma wzorów, ani diagramów, ale jest omawiana dość szczegółowo idea algorytmu: http://www.perkun.org/resources/pdf/algorytm_perkuna.pdf Algorytm jest używany w svarogu w pliku src/command_loop.cc . To właśnie tam wywołuję get_optimal_action. Bardzo chętnie porozmawiam o samym algorytmie - wydaje mi się, że jest obiecujący.;"
"Jestem dosyć leniwą osobą jeśli chodzi o szkołę, rok temu oddałem na zaliczenie seminarium aplikację która rozpoznaje twarz (takie faceid wersja studencka, tytuł pracy to wykorzystanie AI w przetwarzaniu obrazów wideo) i miałem napisać do tego część teoretyczną ale no niestety praca jako programista pochłaniała mnie bardziej (zmieniłem pracę w ostatnim semestrze studiów). I sprawa wygląda tak że albo się zbiorę teraz i w miesiąc to ogarnę (chyba nie ma sensu tego rozwlekać bardziej) i napiszę albo już tego nie zrobię. Mam motywację bo chciałbym 26 dni urlopu i zamknąć edukację i skupić się już tylko na rozwoju jako dev. Jak pisaliście swoje części teoretyczne, skąd pomysły na to co tam napisać oraz jak nabić ilość stron? Jestem osobą bardzo konkretną i nie umiem się rozpisywać na dłuższe fragmenty. Lanie wody nigdy mi nie wychodziło i zastanawiam się nad użyciem jakiegoś narzędzia do pomocy w generowaniu treści jakiegoś chatgpt czy coś, albo z książek brać fragmenty i tłumaczyć + dodawać swoje rzeczy. No ogólnie teoria sprawia mi problem bo mógłbym ją zawrzeć w 10 stronach a potrzebuję 45 + bibliografia. Jakieś protipy jak to napisać?;"
"@ehhhhh: niestety ale mój promotor ma w nosie sudentów i wszystkim tak robił że bardzo słaby kontakt, rzucenie tematem i tyle, odpowiedź na maila parę dni do nawet dwóch tygodni. Więc jestem zdany na siebie na dobrą sprawę. @markone_dev: jakoś specjalnie się nie interesuję AI ale zweryfikowanie tego co tam wymyśli będzie raczej proste :);"
"cos o tym swoim pomysle - dlaczego, po co              // z 1-3 str? wstęp teoretyczny do tego co robisz                         // z 3? 5? str? opisy technologii, tooli, itd itd                                // z 2-5 str? no i te twoje rzeczy              // z 35 str? fragmenty kodu, obrazki, tabelki, wykresy i w jedną sobotę czy dwie machniesz z 50 stron  no ta, praca programisty jest tak intensywna że przez miesiące nie znajduje się 10-20h na formalność :P;"
"Hobbystycznie zrobiłem AI do rozpoznawania plansz Scrabble ze zdjęć. Jeśli chodzi o możliwe use case'y, to na razie zaimplementowane jest sugerowanie najlepszych ruchów. W planach mam inne ficzery takie jak transkrypcje gier turniejowych albo liczenie punktów. W przyszłości może humanoid grający w Scrabble  Może kogoś zainteresuje:) https://scrabblecam.com PS. Na razie niestety bez języka polskiego.;"
"Programy które znajdują najlepsze ruchy do scrabble istniały już dawno, i nie miały za dużo wspólnego z ML. Chyba że Twój program to jest rozpoznawanie planszy na podstawie obrazka, to w sumie to jest ciekawe. Transkrypcje gier turniejowych to można zrobić przy pomocy istniejących narzędzi opartych o AI już? Co by w tym było ""Twojego""? Liczenie punktów też się wydaje do zrobienia proste nawet bez AI.;"
Proponuję pokazać tę listę: https://www.denofgeek.com/movies/evil-artificial-intelligences-film/ Efekt gwarantowany ;);
"Ja zawsze mówię że nie ma AI w dzisiejszych czasach a to co ludzie nazywają AI to głównie sprytne algorytmy, które potrafią się same ulepszać (uczyć).;"
"AI to taka współczesna magia (wg trzeciego prawa Clarke'a: ""Any sufficiently advanced technology is indistinguishable from magic."").  No nie wiem. Mnie się wydaje, że to jest odwrotnie i to całe machine learning są to banalne algorytmy jeśli się spojrzy na nie bottom-up, że to liczenie czegoś wg prostych zasad matematycznych i że dobrze wiemy jak te algorytmy działają w środku (np. wiemy jak działa pojedynczy sztuczny neuron czy jak się posługiwać wektorami), ale że jednak nagromadzenie tych prostych rzeczy i połączenie ich w całe systemy i uczenie ich na wielkich zbiorach danych dopiero sprawia, że z czegoś, co rozumiemy, wychodzi magia, której nie rozumiemy.;"
"Ja 6 lat spędziłem na sztucznej inteligencji, musisz wybrać temat, który będzie ciekawił akurat twojego odbiorcę. Jako, że każdy zna język naturalny więc to się wydaje najłatwiejszy do wykorzystania, powiem pewny algorytm. Próbujemy przewidzieć rozkład multinomial probability dla wyrazów. Mamy kupę wyrazów ze słownika i zdań, pewne wyrazy będą występować z pewnym kontekstem, na przykład lubię jeść będą występować z wyrazem kebab, pizza, itp. a np. kamień będzie rzadki. jeśli zrobimy ilość powdójnych wyrazów(bigramów) do wszystkich to wyjdzie, że mamy prawdopodobieństwo wystąpienia danego wyrazu w pewnym zdaniu, 2 wyrazowym. można to samo zrobić do trigramów. Potem musimy generować zdania, mnożymy prawdopodbieństwo wystąpienia wyrazu przez wiele w zdaniu i wybieramy ścieżki z najwyższym prawdopodobieństwem, czyli robimy beam search. Za dokladnie nie opisałem tego procesu, kiedyś go opisałem lepiej, niefart taki, że usunąłem go z youtube bo mnie obrażali :<;"
"@obscurity odpiszę tutaj, bo to ważne spostrzeżenie, dobrze, żeby nie uciekło:  Też mnie to zastanawia. Przypisywanie magii słówku AI. Co prawda od dawna tak było, że futurodzy się zastanawiali, kiedy powstanie ""prawdziwe"" AI (zazwyczaj wtedy, kiedy tak się stanie, zajdzie ""singularity"", czyli taki Matrix - maszyny staną się samowystarczalne i będą same ewoluować). Ale jednak słówko AI w kontekście programowania mogło oznaczać nawet prostą logikę w grze na ifach. A jak już było na choćby czymś bardziej zaawansowanym np. na prostych maszynach stanowych czy używając algorytmu znajdowania drogi, to już było AI jak się patrzy. A tymczasem mamy rok 2023 i to, o czym futuryści mówili, że nastąpi w przyszłości, już powoli następuje i wchodzi do żargonu informatyków. I teraz nawet programiści używają AI bardziej w kontekście narzędzi samouczących, korzystających z sieci neuronowych i wielkich zbiorów danych, a nie do określenia czegoś bardziej przyziemnego. Tylko widzę w tym pewien problem - to, co ludzie nazywają teraz ""AI"" jest oparte zwykle o machine learning i uczenie się na wielkich zbiorach danych. Więc ludzie zaczęli stawiać równością między celem (AI), a sposobem osiągnięcia tego celu (machine learning). Niestety to powoduje zbyt wielką i naiwną wiarę, że machine learning to magiczna rzecz, która wszystko rozwiąże z automatu. Tym sposobem wyrzucamy do kosza masę przydatnych podejść tylko dlatego, że nie są oparte o machine learning, a na bardziej prostych i przewidywalnych algorytmach.;"
"Cześć, następująca kwestia. Urządzenie za pomocą kamery/czujnika/ rozpoznawał obiekty (prawie jak captcha) , po czym po sklasyfikowaniu ich zaznaczał różnymi kolorami kwadratu (operator zdefiniuje co, na jaki kolor). i kwesta, aby np. po podłączeniu do neta/bazy sam zaktualizował ""umiejętność"" rozpoznawania z przygotowanej bazy np online. Możliwe jest to w ogóle? Gdzie szukać programistów w tym temacie? pozdrawiam;"
"Cześć, Ostatnio zacząłem się zastanawiać, w jaką stronę rozwijać się będzie branża IT dla HR w dobie AI. Czy eliminacja ""rozmowy miękkiej"" jest Waszym zdaniem możliwa? Jak zareagowalibyście na to, że pierwszy etap rekrutacji w całości robi AI, a spotykacie się już od razu z hiring managerem/tech leadem? Narzekań na HR jest sporo, ale czy faktycznie tak bardzo ich nie chcemy w rekrutacji? Przez pierwszy etap rekrutacji mam na myśli weryfikację CV, wstępną rozmowę dotyczącą doświadczenia i wstępną weryfikację techniczną. Z jednej strony mało kto lubi rozmowy z HR, z drugiej - czy nie czulibyście się olani przez firmę, gdyby od razu nie witał Was człowiek? Wiadomo - hiring manager nie spotka się z każdym, jest to niewykonalne, jakaś preselekcja być musi i teraz w firmach często robią to ludzie z HR, lepiej lub gorzej. Nie wdawajmy się w dyskusję o tym co AI potrafi, a czego nie. Na potrzeby tego wątku załóżmy, że jest AI, które potrafi zrobić pierwszy etap dobrze i tyle.;"
"Mokry sen forumowiczów, w końcu te wredne hrowy nie będą potrzebne i firmy się ich pozbędą xD Tak to jest, jak ktoś nie wychyla nosa dalej, niż własna kuweta. HR w firmie zajmuje się wieloma różnymi sprawami, nie tylko rozmowami rekrutacyjnymi. Same te rozmowy to nie jest jakiś ""przykry obowiązek"", tylko ważna kwestia z punktu widzenia firmy, bo dzięki temu można właśnie takich toksyków wyłapać. Możecie sobie tylko marzyć, programistyczne przegrywy ¯⁠\⁠⁠(⁠ツ⁠)⁠⁠/⁠¯;"
"Jeżeli firma nie potrafi zatrudnić lub wyszkolić przyzwoitego pracownika HR tzn, ze dalej jest tylko gorzej. W przypadku wprowadzenia HR AI chyba trzeba będzie zrobić swoje AI i niech sobie gadają xD. Generalnie jeśli firmie szkoda czasu na rekrutacje mnie to mi szkoda czasu na ta firmę.;"
"Fajnie, fajnie, tylko dla kogo ""dobrze""? Co rozumiesz przez ""dobrze""? Dobrze dla kandydata? Czyli np. oszczędzi mu czas (bo będzie można z tym AI porozmawiać o dowolnej porze dnia), sprawiedliwie oceni skille w CV, przeskanuje GitHuba i oceni kod a nie miękką gadkę szmatkę? Czy dobrze dla firmy? Czyli np. bezkontekstowo oceni dziury w historii zatrudnienia jako red flagi, przejrzy twoje sociale w poszukiwaniu problematycznych zachowań, automatycznie wyśle zapytania do innych firm z CV co tam u nich robiłeś i czy nie robisz OE przypadkiem?;"
"Poza branżą IT: Szukałem ostatnio pracownika do prostych prac fizycznych i takie AI byłoby świetne w celu wygenerowania tabelki - wiek, skąd jest, oczekiwania finansowe, rodzaj umowy, preferowane godziny pracy, kontakt itd. Opublikowałem ofertę w pierwszym zdaniu prosząc o odpowiedzi na te pytania - na 25 osób zrobiło to z 5, po rozmowie kolejne 15. AI pogadałoby z kandydatami i wyciągnęłoby od nich te dane. Ktoś może powiedzieć, że jeśli kandydat nie wykonał takiego zadania to nie nadaje się do pracy - w tym przypadku nie zgodzę się, może w firmie produkcyjnej gdzie trzeba robić ściśle według procedury. Następnie - AI mogłoby umawiać spotkania (integracja z kalendarzem lub pytanie do mnie w jakich godzinach preferuję przyjmować kandydatów) i dzwonić dzień przed z prośbą o potwierdzenie. Ciekawostka: Najlepszy kandydat nr 1 - Nie przyszedł, kontakt się urwał. Najlepszy kandydat nr 2 - Bardzo ucieszył się ze zdobycia pracy, ale też kontakt się urwał. Najlepszy kandydat nr 3 - Świetny pracownik. Co łączy kandydata 1 i 2 - doświadczenie w branży budowlanej :D;"
"Ale wiesz, że kandydaci też mają dostęp do AI i to mogłoby wyglądać tak, że rozmawiają ze sobą dwa boty, jeden z HRa, drugi od kandydata? W zasadzie już mi się zdarzyło odpowiadać HR za pomocą ChatGPT, tyle że przekleiłem ręcznie, więc nie była to pełna automatyzacja. Tyle tylko, że wcześniej czy później rekruterzy chcą rozmowy telefonicznej albo video, więc to nie chodzi tylko o suchą informację, ale HR faktycznie chcą sobie pogadać z kandydatem (nie rozumiem do końca dlaczego, może chodzi o jakąś intuicję typu pogadam i wyczuję na intuicję kandydata, czy dawać go dalej?. A może ludzie lubią sobie pogadać po prostu).;"
"Niedługo niepotrzebni będą nawet prezesi ani zarząd, a nie tylko hr. AI poprowadzi całą firmę: https://businessinsider.com.pl/technologie/ai-stworzyla-firme-technologiczna-jej-produkt-powstal-w-niespelna-7-minut-za-mniej/bcsw0z0 Ciekawe czy AI będzie pracować za pomocą metod zwinnych;"
"Ostatnio mam wrażenie że rekrutacja HR odbywa się w sposób automatyczny. Niedawno wróciłem na rynek pracy i jakie było moje zaskoczenie że nie dostaję prawie żadnej odpowiedzi ze strony HR. Dodam że mam sporo doświadczenia i ogarniam wiele tematów żeby nie było że jestem laikiem. Wysyłam CV na wiele ofert a tu automatyczne zwrotki lub brak kontaktu. Uczestniczyłem w spotkaniu dotyczącym HR i AI i nagle okazało się że testują sobie modele w swoich firmach do automatycznego procesowania CV. Widzę wiele tych samych, ponawiających się ofert ale jakby nikt nie chciał zatrudniać. Moje odczucie jest takie że testują sobie swoje AI na naszych CV dane latają i jak się domyślam są dzielone między firmami. Co sądzicie na ten temat ? Chętnie dowiem się o waszych odczuciach i jak się na to zapatrujecie. Dodatkowo zapytam, czy dołączalibyście stopkę w CV z wyraźną informacją o braku zgody na przetwarzanie i zbieranie danych na wasz temat w CV  przez AI ? Pytam bo chodzi mi to po głowie...;"
"główne zagrożenie ze strony AI które ma kogokolwiek oceniać to wg mnie jest takie, że zakładane są nieomylność i obiektywność człowiek wiadomo a to ma gorszy dzień a to znajomości a to ma lepszy dzień a to ciśnienie rośnie/spada a to temperatura nie taka a to w radio puścili piosenkę co się lubi a to mecz przegrali AI jako maszyna jest (niby) od tego wolna i dlatego podchodzi się do jej decyzji jak do wyroczni, jak do Boga samego, którego zdanie jest ostatecznie i niepodważalne a przede wszystkim prawdziwe to dopiero będzie tyrania, a jaką herezją będzie podważenie zdania AI - ło panie - stos z miejsca;"
"To chyba jak wszędzie. Gównianego HRa AI wygryzie. Dobrego HRa nie zastąpi. Zamykam wątek, temat z czarnej listy;"
"Podobno jest teraz problem z niską informacją w CV. Kiedyś umiejetność napisania CV to był great filter, a na naszym polskim podwórku to był nawet pierwszy test na pisanie po angielsku. Teraz każdy Hindus potrafi poprosić ChatGPT o podrasowanie CV i dlatego twoje się niczym nie wyróżnia. Czasem dostaję CV do oceny i co tam AI wpisuje to temat na rekrutacyjne WTF. Np ChatGPT wie, że należy dodać linka do githuba. Klikam w linka, a konto nie istnieje i nigdy nie istniało. Po prostu ChatGPT wygenerował link z imienia i nazwiska :) Tu masz copium:;"
"Troszkę luźno i offtopic ;) Czy jest taka szansa, że algorytmy AGI (Artificial General Intelligence) będą podejmować decyzje na poziomie intelektualnym człowieka? Kiedy to nastąpi? Jaki poziom osiągną za 5-10 lat?;"
Naturalna głupota zawsze pokona sztuczną inteligencje!;
"Strzelam, że nigdy. Tj. sztuczna inteligencja będzie w stanie podejmować decyzje na jakimś wąskim poletku i to pewnie lepiej niż niejeden człowiek, natomiast nigdy nie uda nam się zbudować AI, która tak jak człowiek będzie potrafiła się adaptować do sytuacji których nigdy przedtem nie doświadczyła. Jeśli chodzi o rozwój AI to wszystko dopiero przed nami. W tej chwili uczymy maszyny tylko i wyłącznie rozpoznawać wzorce i wybierać działania na podstawie wzorców (""czerwone"" -> ""zatrzymaj się"", ""zielone"" -> ""jedź""). AI długo nie wpadnie na to, że kiedy skrzyżowanie jest puste, a w samochodzie siedzi rodząca kobieta (ewentualnie goni nas typ z siekierą) to powinno ruszyć z piskiem opon. Natomiast bardziej skomplikowane reguły typu ""jeśli jakiś samochód jedzie szlaczkiem, a droga jest w całkiem dobrym stanie to lepiej zachować większy odstęp"" jak najbardziej będą dostępne.;"
"Troszkę luźno i offtopic ;) Czy jest taka szansa, że algorytmy AGI (Artificial General Intelligence) będą podejmować decyzje na poziomie intelektualnym człowieka? To byłaby porażka AI. Przecież większość ludzi nie umie podejmować decyzji w racjonalny sposób. Więc taka AI musiałaby być mądrzejsza od człowieka, żeby to miało sens. Z drugiej strony jak będzie za mądra, to jest ryzyko, że będzie podejmować decyzje budzące wątpliwości etyczne. Jest taki dylemat wagonika: https://pl.wikipedia.org/wiki/Dylemat_wagonika;"
"Sztuczna inteligencja już dawno jest w stanie dorównać człowiekowi w pewnych dziedzinach. Analiza dużych zbiorów danych, obliczenia matematyczne, wnioskowane. Problem leży w tym, że obecnie to z czym mamy kontakt, albo o czym słychać nie jest w stanie wystarczająco elastycznie przestawić się z jednej dziedziny na drugą. Czyli mózg niektórych ludzi jest w stanie wykorzystać wyuczoną wiedzę o świecie, do wywnioskowania brakującej informacji, postawić hipotezę i ją udowodnić, albo obalić., jednocześnie wykorzystując informacje płynące ze zmysłów i przekazać je do efektorów, co ostatecznie przełoży się na nie wpakowanie nosa w ścianę ciemnej piwnicy. Jako ludzie mamy tendencję do myślenia o sobie jako jedynej formie inteligencji, mierzenia jej sposobami dostosowanymi do naszych możliwości i uważamy, że jesteśmy ""lepsi"" bo nasze mózgi w 10% przypadków robią coś lepiej niż maszyna. Trochę na zasadzie doceniania etykietki ""hand made"" na jakimś szrocie z cepelii, bo zrobiła go ręka ludzka, a nie maszyna.;"
"Czytałem, że niedawno opracowano jakąś nową technologię tworzenia memistorów, które rozmiarem mogą być porównywalne z pojedynczym tranzystorem na krzemie. Jak to wejdzie do produkcji to będzie to milowy krok w rozwoju akceleratorów AI. Właściwie nawet nie akceleratorów... Technologia pozwoli zbliżyć się do stworzenia sztucznego neuronu. Czyli już nie obliczanie sum ważonych ani sumowanie sygnałów elektrycznych za pomocą programowalnych ""wzmacniaczy operacyjnych"", a faktyczny malutki element półprzewodnikowy, którego wejścia programujemy a ten natychmiast bez żadnych opóźnień daje na wyjściu ""wynik"". Myślę, że kwestia 5-10 lat jak zaczną produkować układy AI, które mają takich neuronów po miliard w 1000 warstw albo coś w tym stylu... To nie ten artykuł, który czytałem ale trochę o tym tutaj jest: https://memristor.ai/;"
"Jak oceniacie poziom zapotrzebowania w dziedzinach Analiza Danych, Business Intelligence, Data Engineering? Od pewnego czasu uczę się SQL'a, Power Bi, trochę pythona, głównie do pracy na większych zbiorach danych. Zrobiłem sobie kursy i certyfikaty Microsoftu PL-900 i SC-900. Obecnie pracuje nad portfolio i robię projekty: czyszczenie, transformowanie danych, trochę się bawiłem w pythonie w korelacje i inne zagadnienia ze statystyki i do tego dashboard w pbi. No i teraz pytanie czy to wystarczy na juniora? Czy w tych dziedzinach też jest po 300cv na miejsce? I może w jakim kierunku warto się rozwijać żeby progresować z rozwojem kariery?;"
"wiec tak, pracuje jako analityk danych ok. 3 lat w duzym korpo, zapotrzebowanie wydaje mi sie, ze jest i to całkem spore, glownie duze korpo, banki, firmy konsultingowe i podobne twory, hajs jaki proponują nie odbiega od zarobkow programistow, jesli ogarniasz to po 2-3 latach spokojnie mozesz wolać 16-18k brutto na UoP albo 110-130 zł/h netto na b2b must have to na pewno SQL, excel, power bi/tableau/qlik, bardzo dobrze widziana jest zanjomos Pythona, chocby podstaw i oczywiscie bardzo dobra znajomosc angielskiego, najlepiej B2/C1, w tym wypadku trzeba wytlumaczyc klientowi pewne rzeczy, a nie tylko przytakiwac na spotkaniach, fajnie tez ogarniac jakis ETL: Alteryx, Informatica etc.;"
"Ostatnio na pewnej grupce na fb zadałam pytanie o perspektywach szukania pracy w szeroko pojętej analizie danych głównie chodzi mi o stanowiska DA/BI, niestety wydaje mi się że odpowiedzi które dostałam nie były od osób siedzących w branży. Zmierzając do pytania to jak oceniacie perspektywy wejścia do branży jako DA/BI? Czy rośnie popyt na takich pracowników w Polsce czy może widać jakieś spadki? Czy juniorów jest tak wielu jak we front-endzie oraz jaka jest jakość tych juniorów? Pytam w kontekście tego że obecnie mam 28 lat, pracuje w biurze projektowym (budownictwo) i po prostu chce zająć się czymś innym. Po dość długim rozeznaniu się co można robić związanego z szeroko pojętym IT stwierdziłam że praca z danymi i ludźmi to prawdopodobnie to co by mi najbardziej odpowiadało. Rozpoczęłam naukę SQL'a, Power Bi i podstaw Pythona. Pracę będę mogła zmienić ze względu na pewne zobowiązania dopiero początkiem przyszłego roku stąd moje pytanie o perspektywy szukania zatrudnienia w tym zawodzie. Przez najbliższe 8-9 miesięcy będę dalej się uczyła i dopieszczę swoje projekty do CV ale mimo wszystko jakieś wątpliwości rodzą się w głowie. Jak ktoś ma jakieś dobre rady czym się zająć w najbliższych miesiącach oprócz tego co wymieniłam to chętnie poczytam;"
"Big Data to dobrze prosperująca działka, która tylko będzie się rozrastać. Danych przybywa i będzie przybywać i coś trzeba z nimi robić. Podstawą w tym wszystkim jest sensowna znajomość SQL'a oraz jakiegoś drugiego języka (Python, Scala, Java). No i oczywiście cloud, bo głównie na tym się to wszystko opiera. BI jest proste jak rozumiesz SQL - Funkcjonalność jest na tym oparta. Zdecydowanie warto w to iść bo pieniądze są duże. W przypadku pythona to właśnie a danych zarabia się najwięcej.;"
"Zdecydowanie tak. Świadome firmy od zawsze poważnie podchodzą do zagadnienia analizy danych bo wiedzą, że umiejętne ich wykorzystanie to możliwość uzyskania przewagi nad konkurencją i inwestują w ten obszar nie małe pieniądze. Przyrost danych o których mówi @ledi12 oraz praktycznie nieograniczone możliwości chmury tylko potęgują zapotrzebowanie na specjalistów w tej dziedzinie. Osobną kwestią jest umiejętne wykorzystanie tych danych i wyciąganie z nich poprawnych wniosków, które jest mega trudne i niewiele firm odnosi sukcesy w tej dziedzinie, mimo inwestycji w ten obszar nie małych pieniędzy. Co do rozwoju w tym kierunku to oprócz nauki wspomnianych narzędzi (Python, SQL, PowerBi/Tableu/Qlick) to nauczyć się pracy z różnymi formatami danych (JSON, XML, Parquet, CSV, NoSQL) oraz podstaw chmury publicznej, a w szczególności usług PaaS typu hurtownia danych/storage/etl. Do tego fajnie też wiedzieć, że istnieją i do czego się używa takich narzędzi jak Apache Spark, Airflow, HBase, . Wiadomo, że jako junior powinnaś skupić się na podstawach, ale znajomość powyższych ""dodatkowych"" narzędzi choćby teoretyczna, da Ci realną przewagę podczas rekrutacji, bo będzie świadczyć że interesujesz się tematem i masz szerszą perspektywę. Ja lubię pracować z pasjonatami i osobami, które interesują się daną działką. Na moich rekrutacjach takie osoby mają zawsze dodatkowy punkt nawet jeśli mają jakieś braki w podstawach.;"
"Cześć, Czy ktoś mógłby zaproponować ciekawy  temat na pracę podyplomową z BI albo AI ? Szukam nietuzinkowego tematu, z dziedziny innowacji. Będę bardzo wdzięczna za pomoc :);"
"Sredni temat to ogarnięcie sobie ogromnych ilości stenogramów i próba zbudowania o nie diagnozy psychiatrycznej. Może nawet się to nie udać. Wystarczy teza, że przy wykorzystaniu x wywiadów da się zdiagnozować chorobę psychiczną w sposób zbliżony do diagnozy człowieka (co nie przynosi żadnej wartości, bo rozmowę i tak prowadzi człowiek - ale można zasugerować użycie w przyszłości zaawansowanych czatbotów). Problem w tym że nigdzie takich danych dostać nie powinieneś. A to tylko średni temat. Prostsze by było przeprowadzenie w sieciach społecznościowej jakiejś analizy sentymentu.   No to tutaj uderzaj do firmy jakiejś i rozwiąż jakiś jej problem na bazie danych. Bez wiedzy domenowej z wnętrza firmy - nic nie wymyslimy.   Jak wyżej.   Też miałem ten problem. I problem w tym, że póki się w branży nie pracuje to ciężko samemu coś wymyślić, bo się po prostu nie da tak łatwo wyobrazić tego czym praca z danymi w ogóle jest :P;"
"Już ciekawsze by było użycie AI np. do rozpoznawania emocji na twarzach ludzkich. Albo odczytywanie emocji z głosu.  W sposób zbliżony do diagnozy człowieka, czyli kijowy. Ludzie są bardzo słabymi psychiatrami. Poczytaj sobie historie ludzi, którzy się leczą psychiatrycznie. To zwykle polega to na tym, że psychiatra zgaduje zaburzenie, a później zwykle zmienia (albo ktoś idzie do innego psychiatry i uzyskuje inną diagnozę), i wychodzi na to, że dana osoba ma ileś nietrafnych diagnoz za sobą aż natrafiła na tę najbardziej trafną. Psychiatryczne AI musiałoby być o wiele bardziej spostrzegawcze niż ludzie. No ale z drugiej strony - jeśli gołębie potrafią wykrywać raka[1], to może i AI mogłoby stawiać diagnozy psychiatryczne? [1] https://www.bbc.com/news/science-environment-34878151;"
"Przypomniało mi się, że kiedyś kierownik studiów podawał przykładowy temat do pracy odnośnie internetu rzeczy. Temat inteligencji otoczenia ciekawy, co prawda, słabo zbadany. Można znaleźć dużo literatury w j. ang, natomiast w j. pl oraz praktycznych zastosowań z opisem narzędzi praktycznie nie ma. Chyba że w tym przypadku, iść w teorię. Co o tym sądzicie ?;"
"Cześć, Mam pytanie, może ktoś się bardziej orientuję w tym temacie a mianowicie SQL Server - Hurtownia Danych i Business Intelligence. Aktualnie zjamuje się Oracle BI, ale chcę się nauczyć technologii od storny microsoftu. Wiem jest dużo różnych kursów online, jednak bardziej mnie interesują książki. Czy ktoś zna może jakąś książke odnośnie SQL Server Data Warehouse and BI? Chodzi głównie żeby były wyjaśnione etapy SSIS, SSAS, SSRS? Dzięki za podpowiedzi.;"
"Dzięki za szybką odpowiedź, popatrzę na tą książke. Ja osobiście pracuje pod OBIEE i nawet jest spoko, ale trzeba rozszerzać swoją wiedze i poznać inną technologię. Ewentualnie masz jakie propozycję, którą technologię warto by się poduczyć jeżeli chodzi o BI?;"
"Witam, jestem studentem V roku Finansów i rachunkowości. Przez dwa lata pracowałem w firmach audytorskich (audyt finansowy), jednak uświadomiłem sobie, że nie jest to praca dla mnie, gdyż trochę się do tego nie nadaję oraz z powodu tego, że po prostu przestało mnie to ciekawić. W tzw. międzyczasie zainteresowałem się również Business Intelligence. I tutaj moje pytanie, na nauce czego powinienem się na początku skoncentrować, by móc zostać Analitykiem Danych/Analitykiem Biznesowym? Jestem ścisłowcem, raczej nie mam problemów z matmą, ale też nie miałem jej dużo na studiach i nie jestem wybitny w tym temacie, więc Data Scientist to raczej nie dla mnie. Zacząłem się uczyć SQL oraz Pythona, ale nie jest pewien, na ile będzie to użyteczne w takiej pracy (zwłaszcza Python). Może lepiej od razu zacząć się uczyć któregoś z BI Tools, jak np. Tableau, QlikView, SAS? Zdaję sobie sprawę z natłoku tematów związanych z przebranżowieniem, jednak tematu, który poruszałby to, o co ja chciałbym zapytać nie znalazłem. Jeśli jednak to moje przeoczenie, to bardzo przepraszam i proszę o link do tematu. Z góry bardzo dziękuję.;"
"Qlik, Tableau to tylko narzędzia do wizualizacji danych. Niektóre firmy poszukują Qlik/Tableau Develporów, lecz takich ofert jest bardzo mało na rynku (np. Jcommerce). Musisz wybrać sobie specjalizacje w kierunku, której chcesz się rozwijać np. BI Specialist / ETL Specialist / Programista Hurtowni danych / Qlik/Tablue Developer. Na pewno podstawą do każdej z nich będą dobre rozumienie relacyjnych baz danych + SQL, następnie będzie to ogarnięcie hurtownii danych + narzędzia np. od Microsfotu MS-SQL(BD) Pakiet BI: SSIS(ETL), SSAS(OLAP), SSRS(Wizualizacja). Musisz zacząć klepać projekty hurtownii danych + uczyć się narzędzi BI. Python raczej w ogóle ci się nie przyda, no chyba ze chcesz iść w kierunku data science. A co do Analityka Biznesowego to w ógole jest inna rola w projekcie nie mająca nic wspólnego z BI, jest to osóba w skrócie, tłumacząca jezyk biznesu (wymagań klienta) by był zrozumiały dla członków zespołu.;"
"Analityk biznesowy to ktos zupełnie inny niż analityk danych. Osobiscie uważam, że bez doswiadczenia trudno załapać się na analityka biznesowego, bo to jest osoba, która musi wycisnąć wymagania od biznesu, a z drugiej strony - przekazać te wymagania do IT, (programistom). Analityk biznesowy na pewno będzie pisał dużo dokumentów, jego narzędzia pracy to word, excel, mail i telefon. Natomiast analityk danych, moim zdaniem, przede wszystkim powinien bardzo dobrze znać język do przetwarzania danych np. taki jak SQL, żeby je szybko i efektywnie zbadać. Powinien także znać narzędzia do wizualizacji np. Tableau czy SAS Visual Analytics. Pythonem można także sprawnie przetwarzać dane, także nie wykluczałbym go jako narzędzia dla analityka danych, choć oczywiscie dominuje SQL.;"
"Sam siedze w tej branżny i jest masy kierunków i technologii do ogarnięcia, a praca też się znajdzie. Należy na pewno znać podstawy i wzwyż SQL (to jest podstawa do pisania prostych zapytań, ale również do analizowania danych, logów z systemu, jakie zapytania się tworzą, wyciągania danych). Następnie PL/SQL lub T/SQL (czyli chyba można to nazwać SQL proceduralny) - bardziej stosowane w procesach ETL. Narzędzia ETL: z Oracle np ODI, z Microsoftu SSIS, ale inne jak Informatica. Tu masz wypisane jakieś narzędzia. Narzędzia BI: Oracle BI Enterprise Edition, SSRS/Power BI, Cognos czy inne mniejsze narzędzia ale również stosowane: Tableau, Qlik View/Qlik Sense, Spotfire Tu masz jakies tam przykłady. Dodatkowo znajomość baz danych się przyda czy to od Oracla czy od Microsoftu czy chociaż podstawowa wiedza. Plus jakieś narzędzia typu SQL Developer i obsługa w nim - wykonywania zapytań, podglądu planu, indeksy, statystyki. Oczywiście ogarnięcie relacyjności baz danych, ale schematy typowe dla ETL/BI czyli schemat gwiazdy i płatku śniegu należy sobie przyswoić. Sam język programowania nie przyda się raczej, chociaż można zastosować czasami Python/R czy JS (to akurat się mi zdarzało, ale to jakieś proste skrypty). Często zdarza się pisać jakieś formuły dla klumn ale to raczej jest taki pseudokod. Tak zostało wspomniane, raczej firmy szukają konrektnych specjalistów, mało jest ofert ogólnych. Ja osobiście zajmuję się Oracle BI (jeszcze dużo przede mną, zeby opanować w sposób ekspercki) a dodatkowo planuję się uczyć nowych rzeczy jak Tableau/Qlik.;"
"BI jest blisko controlingu wiec finansowy backround jest czesto przydatny. np. robilem raporty KPI (Annual recurring revenue (ARR), Adjusted EBITDA, R&D spend, Pipeline, ACV, gross margin before CAPEX itp) Co do samego BI, ja to widze tak idz w technologie, ktore ciagle sa na wykresie Gartnera liderami (Qlik, PowerBI, Tabelau)  pozostale odposc bo utkniesz w miejscu gdzie bedziesz musial szukac pracy tylko tam gdzie jest dana technologia. PowerBi jest produktem Microsofta i dodaja go wszedzie, maja atrakcyjny model licencyjny wiec na pewno pojawi sie w wielu firmach. Qlik czy Tabelau to juz programy dodatkowe, ktore firmy musza wdrozyc z ""premedytacja"". Tabelau mial pare lat temu ostry marketing ale cos ucichlo, Qlik rozwinal nowy produkt QlikSense i tu mocno inwestuje. Ogolnie BI zmienia sie w cos wiecej wg mnie przyszlocia BI bedzie BI + AI i ML. Do tego to juz przyda sie juz jezyk Python lub R. Ogolnie praca w BI to ciagle grzebanie w danych. Pol biedy jak te dane sa dobrej jakosci, wtedy bawisz sie w analityke albo w tworzenie dashboardow. Ale jak dane sa kiepskie wtedy jest roboty od groma albo rzezbi sie miksujac dane z exceli i dane z systemow. QlikSense - jest darmowa wersja desktopowa i darmowa w chmurze QlikView - darmowa wersja desktopowa PowerBI -rowniez darmowa wersja desktopowa Wiec nawszytskich powyzszych mozesz sobie ciwczyc. Tabelau - nie doradze bo nie mialem z tym stycznosci, jakos nie bylo mi po drodze ale znajac produkt Qlika i MS mozesz spokojnie pracowac w BI;"
"Temat lekko odkopany. Udało się znaleźć pracę jako programista SQL, ale w obowiązkach jest także tworzenie raportów w Reporting Services, kodzenie C# i co nieco hurtowni danych z tym, że w autorskim sofcie. Próbowałem swoich sił w Oracle SQL, ale nie bardzo mi to podchodzi (pomijająć oczywiście standard ANSI) Tematyka MI AL wydaje się być ciekawa, ale nie bardzo mam pomysł i pojęcie jak technicznie do tego podejść i nie będę się na razie w to zagłębiał, aby zbytnio się nie rozpraszać. Podobnie z Pythonem i R. Wiem, że w nowym MSSQL są w pewien sposób zintegrowane, ale póki co skupiam się na C# i RS. Power BI wydaje się być ciekawy i dosyć intuicyjny. Super jest zwłaszcza opcja odświeżania źródeł i np. pobierania danych z tabel w internecie.;"
"MSSQL 2017 https://www.microsoft.com/pl-pl/sql-server/sql-server-downloads VS2017 https://visualstudio.microsoft.com/pl/free-developer-offers/ SSDT do vs 2017 https://docs.microsoft.com/en-us/sql/ssdt/download-sql-server-data-tools-ssdt?view=sql-server-2017 Proponuje zainstalować MSSQL'a z SSAS'em w obu trybach (2 rózne instacje, tabular/multidimensional) oraz VS i zdecydować czy na start wolisz raporty czy etl. Raporty SSRS są raczej proste i w przyszłości raczej naturalnym progresem będzie SSAS i powerbi. Więc klepiesz sql'ki i wklejasz je do studia żeby zrobić ładnie wyświetlone cyferki :) ETL - robisz sobie pakiety SSIS i rozwijasz hurtownie (i naucz się c# bo rozwiązuje tu wiele problemów). Big Data w Polszy raczkuje więc nawet bym się tym nie przejmował na starcie. Zabawnym faktem jest to że ogłoszeń w ogłoszeniach ssrs pojawia się rzadko ale w każdej firnie w której do tej pory pracowałem w technologi MS, jest on używany. Tutoriali w sumie nie znam ale proponował bym ściągnięcie samplowej bazy transakcyjnej (które często są źródłami danych dla hurtowni) stworzenie na jej podstawie procesu etl i hurtowni. Niestety hurtownie to też wolno zmieniające się wymiary które zmieniają się (wolno :D) wraz ze zmianami danych źródłowych a to dzieje się z czasem więc musiał byś też bawić się w testowe zasilanie bazy transakcyjnej. Ta strona ma niewiele informacji http://datawarehouse4u.info/index_en.html ale w bardzo przystępnej formie więc na jakotakie zrozumienie czym są hurtownie olapy scd czy jak działają mdx'y;"
"Pamietajcie tez, ze pojawia sie nowy trend (selfservice). Zyjemy w czasach informacji, dane mamy dookola juz nasze dzieci bez problemu nawiguja w smartfonach i potrafia znalezc sobie co im potrzeba :) Staje sie bardziej realne cos co sie nazywa data literacy, czyli nie dajemy analiz businessowi (ryby) tylko narzedzie/aplikacje  (wedke) , ktore business sam wie najlepiej jak customizowac pod swoje potrzeby i zna kontekst. Gartner to wyraznie pokazuje ktore technologie utrzymuja sie na pozycji lidera. PowerBI czy Qlik czy Tabelau to stali liderzy. Microsoft jest wszedzie to sie o nim mowi ale na pewno nie warto ignorowac pozostalych. Qlik wprowadzil dosyc niedawno nowe narzedzie o nazwie QlikSense typowe self service i mocno go rozwija (mashupy, zaszyty AI i ML w silniku cognitywnym, asocjacyjny model danych itd) Swiat sie zmienia i stare podejscie do BI tez sie zmieni. Kostki OLAP juz nie wystarczaja checmy miec mozliwosc odpytywania danych ze wszystkich stron nie tylko wg wymiarow ktore sa na sztywno zapisane w kostkach. Donald Farmer kiedys powiedzial, ze to naturalny proces czlowiek jest lowca i gdy mu sie da mozliwosc sam zacznie szukac/polowac na to co mu potrzebne (business discovery) to jest wpisane w nasze DNA. Praktycy tez mowia, ze na poczatku checili miec raporty na biurku ale gdy zaczeli uzywac BI i nie byli niczym ograniczani zaczeli coraz wiecej i wiecej szukac i samemu odkrywac anomalie, strefy zagrozenia czy po prostu eksplorowac dane aby poznac dobrze zachowania w businessie i zaczac podejmowac decyzej na podstawie infromacji z danych a nie przeczucia. Jezeli ktos chec widziec swoja prace w obszarze BI polecam  sledzic  aktualne trendy, stare BI powoli sie zmienia w cos co nazwano BD (business discovery).;"
"Witam. Sytuacja prezentuje sie nastepujaco: jestem na stazu w Business Intelligence, ta dzialka niezbyt mnie rajcuje ale tez nie ma wielkiej tragedii bo praca nie muli mocno ale wole programowac i juz rozmawialem z managerem, ze wole programowanie. On powiedzial ze maja miejsce do pracy przy PowerBuilderze i ze tam bedzie programowanko. Powiedzial tez, ze polityka firmy nie pozwala mnie jako stazysty rzucac po teamach jak sie podoba i jak poprogramuje w powerbuilderze to latwiej mnie bedzie przerzucic na Jave/.NET w przyszlosci juz jako pracownika. Wierzyc mu czy nie? Z tego co widzialem to PowerBuilder jest kompletnie zdechla dzialka i na caly swiat jest kilka ofert pracy :D Jak w ogole wyglada praca w PowerBuilderze? Warto akceptowac te oferte? PowerBuilder rozwinie mnie troche jako przyszlego programiste? Zawsze moge sie nie zgodzic i przemeczyc sie w BI do konca stazu. Co do samego faktu dlaczego jestem na tym stazu to dlatego ze mam za niego dobre pieniadze  i wole robic cos takiego niz nadal tyrac jak studenciak.;"
"Nie warto wkręcać się teraz w PowerBuilder'a tym bardziej jako młoda osoba. PB miał swój czas w latach 90 XX wieku jeszcze przed rewolucją webową i architekturą klient-serwer. W tamtych czasach DataWindow to było coś. Teraz nadaje się do muzeum IT. Chcą Cię w to wkręcić bo programistów ze znajomością PB ciężko znaleźć (ja się do nich zaliczam, jestem Java developerem). Broń boże nie rozpatruj tego w kategoriach pozytywnych że to niby niszowa technologia za znajomość której będą Ci płacić jak za zboże. Znajomość PB nie rozwinie Cię w ogóle a nawet cofnie w rozwoju bo zmarnujesz ten czas na archaiczną technologię zamiast zajmować się czymś co jest na topie.;"
"Cześć, Od niedawna (pół roku) udało mi się dostać do działu IT w pewnej firmie. Aktualnie zajmuję się zarówno szeroko rozumianym BI (pisanie raportów w SQL, wizualizacja w Power BI/ Tableau, trochę procesów etl w SSIS) oraz tak zwaną technologią Robotic Process Automation - RPA (Automation Anywhere, proste skrypty w Visual Basic, SQL). Szczerze mówiąc wraz z biegiem czasu chciałbym skupić się na rozwoju w jednej z tych dwóch dziedzin. Chciałbym w tym miejscu spytać was, jako bardziej doświadczonych specjalistów o zdanie, która z wymienionych dziedzin według was jest ""bardziej przyszłościowa"" (większa ilość ofert pracy, lepsze zarobki, możliwość pracy zdalnej itp). Prosiłbym również o ewentualne naprowadzenie w kierunku jakich języków / technologii / umiejętności warto podążać w tych dwóch dziedzinach? Czy w BI znajomość statystyki oraz matematyki jest niezbędna? Dziękuję za odpowiedzi! Pozdrawiam;"
Zdecydowanie RPA. Jest to stosunkowa nowa dziedzina i co raz wiecej firm chce to wprowadzac a wiec rosnie zapotrzebowanie. Zarobki sa na prawde wporzadku :) Sam dopiero zaczynam. Z mojej perspektywy uipath + python daje nieskonczone mozliwosci i taki kierunek bym Ci proponowal. Zawsze mozesz w przyszlosci przejsc na python deva jesli rpa  nie przypadnie Ci do gustu ;);
"Dziękuję bardzo za odpowiedzi. Szczerze mówiąc znacznie bliżej mi do Business Intelligence niż do RPA. Planuję zatem przysiąść do PowerBI lub Tableau + SQL. Myślę również, że zacznę naukę podstaw statystyki i do tego Pythona. Myślicie, że to będzie dobry zestaw? Co byście dodali do tej listy i ewentualnie czy uważacie, że jest sens uczyć się statystyki i Pythona w kierunku BI?;"
"Jako, że nie ma odpowiedniego działu forum, który mógłbym obserwować, zastanawiam się, czy jest jakiś sposób, aby dostawać powiadomienia o pytaniach związanych z ciekawszymi (subiektywnie) językami, takimi jak Haskell, Prolog, PureScript, F#? W wielu mógłbym pomóc, a czasami być może miałbym okazję czegoś się nauczyć. Niestety tagi nie pomagają. A może takie pytania po prostu się nie pojawiają?;"
"mysle ze wynika to z faktu ze ludzie, ktorzy maja na tyle samozaparcia/pasji aby uczyc sie hipsterskich jezykow nie biegna na forum z byle bzdurami tylko rozwiazuja je samodzielnie;"
"Na temat Prologu i programowania imperatywnego(cyt. z książki ""Prolog Programming for Artificial Intelligence""): http://postimg.org/image/cstjz75zb/;"
"Jeżeli ktoś ma/miał styczność z Haskellem, zapewne zna coś takiego jak ""Learn you a Haskell for great good"". Myślę, że już na etapie szkolnym ludzie powinni interesować się innymi ""gatunkami"" programowania, wybrać swoją drogę. Dlatego pokazanie ogromu możliwości, jaki przed nimi stoi, wydaje mi się sensowny. Dla przykładu, jako, że część z was nie śledzi zapewne takich wiadomości, serwer webowy Haskella jest obecnie bardziej wydajny niż nginx czy Lighttpd, nie wspominając o Apache. Stron takich jak haskellonheroku.com (tu akurat szacunek dla polskiego programisty, Miëtka Baka) pojawia się coraz więcej, a także komercyjne zastosowania tego języka są coraz szersze. Podobnie jest z językiem Go - nie jest to fakt faktem język funkcyjny, lecz spróbujecie znaleźć programistę Go na polskim rynku - mi rekrutacja do mojego zespołu zajęła trzy - cztery miesiące.;"
"Nie widzę analogii, drukarka 3d nie zmontuje kolejnej drukarki ani nie wyczaruje materiałów. Tymczasem AI, przynajmniej w teorii, wygeneruje gotowy program bo to jest dobro niematerialne. Więc mój argument nadal stoi, skoro AI wyelimiuje programistów crudów, to dlaczego akurat nie da rady z programistami AI ?;"
"Będzie pewnie jak np. z metavers. Wszyscy się srają jakie to nie rewolucyjne, a dalej w firmach będzie klepanie monolitów, tylko może efektywniej xd Co do AI to polecam rzucić okiem na lepszą pierwszą stronę, która pokazuje wszystkie ""boom"" na AI, np. link;"
"""A kto konkretnie sie jaral, ze metaverse jest rewolucyjny? Oprocz Cukierka i marketingu FB oczywiscie. Jakos sobie nie przypominam "" ogromna ilość ludzi jarała się metavers. Tak samo było z crypto(w 2015 roku miałeś wszędzie płacić wirtualnym pieniądzem), VR miała być przyszłość(a dalej to ciekawostka i pixelosa), w 2015 roku samochody miały nie potrzebować kierowcy i same podejmować krytyczne decyzje podczas jazdy, w drukarkach 3D miałeś sobie wydrukować 90% domowych rzeczy, roboty w Mcdonaldzie  miały całkowicie zastąpić obsługę, NFT to też miała być przyszłość. ""Za 2 lata to będzie rok produktu x, nigdy nie widziałem aby technologia tak szybko się rozwijała"" - praktycznie o każdym z powyższych produktów pisano tak samo jak teraz o chatgpt. Świat IT jest napędzany przez hype na dane produkty, to czy to jest dobry produkt to sprawa drugorzędna, najważniejsze to aby wyciągnąć kasę od inwestorów.;"
"Problem jest taki że AI już dowiodło swojej wartości biznesowej, podczas gdy crypto czy metaverse to był sztucznie pompowany hype, bez praktycznej wartości, który dopiero miał w przyszłości dostarczyć cuda na kiju. Tak z tego co widzę to AI w zakresie wytwarzania softu ma tylko jedną słabą stronę która powoduje że człowiek nie jest jeszcze wyeliminowany, tj nie posiada realnego rozumienia zadanego problemu, umożliwiającego samodzielną ocenę dostarczonego rozwiązania w kontekście podanych wymogów, oraz aktywnego dopytywania w celu sprecyzowania niejasnych wymagań.;"
"Na bazie hype, moja postępowa firma zezwoliła mi na ""ostrożne korzystanie z chatGPT"". Dzisiaj nawet skorzystałem, potrzebowałem zrobić małą devopserkę, pobrać jakąś tam listę obiektów, zapytać o szczegóły, zapisać. Nawet mu to wyszło, może nie za pierwszym razem, trochę problemów musieliśmy rozwiązać, ale szacunkowo parę godzin zaoszczędzonych w porównaniu do samodzielnej pracy, albo kilkaset godzin w przypadku zlecenia tego zadania do Bangalore. Dostałem coś, co nie działa, musiałem samodzielnie przeanalizować dlaczego nie działa, poprawić błędy w składni języka, ale w ostatecznym rozrachunku, na czuja wyszło szybciej. Natomiast na obecnym etapie, w żaden sposób nie jest w stanie wyeliminować programisty z procesu tworzenia aplikacji. Owszem, użyteczne narzędzie, bo nie mając pojęcia o Power Shell ""napisałem"" skrypt w tym narzędziu. Natomiast do etapu, kiedy biznes napisze ""zaprojektuj i zaimplementuj system bankowy"" i dostanie coś co działa dzielą nas lata.;"
Warren Buffett podczas corocznego spotkania inwestorów Berkshire Hathawaya zapytany o AI odpowiedział m.in:  A zatem nie ulega hypowi na czacika;
"Bardzo 'ciekawie' wyglądają ceny API(Piszę, w wątku o zwolnieniach, bo jest dużo szumu jak to zastąpi analityków danych). Zakładając, że chcesz wysłać CSV zawierający 1000 wierszy do API, to kost wejściowych tokenów wyniósłby około. (8000 * 0.06)/1000 tj.0.48$ 123,100,1683670098 -> około 8 tokenów (id, ilosc, timestamp) Nie liczę kosztu wyjściowych, bo to zależy od analizy itd. Ciekawie, jak będą wyglądały ceny 'code interpreter', bo cały Twitter już stwierdził, że to nowy analityk danych, jednak jeżeli koszty będą porównywalne z API, to wielu się zdziwi i zrozumie, że czasami oprogramowanie zbudowane do konkretnego celu daje lepszy koszt/efekt.;"
"U mnie w pobliskim kauflandzie również były zwolnienia, nie widać części zespołu obsługi klienta, ale również odczuwalny jest brak osób technicznych, wcześniej kasy samoobsługowe były naprawiane dość szybko, teraz od tygodnia dwie kasy z sześciu są popsute, część kas ma braki w produktach, a nawet spotkałem się z błędną ceną. Wpis satyryczny, ale na temat i ma taką samą wartość (jak nie większą, bo odczuwam na własnej skórze zwolnienia osób technicznych) jak wpisy o zwolnieniach w firmie x, ale bez konkretnej informacji ile osób związanych z naszą branżą zostało zwolnione.;"
"mam nadzieję, że chatgpt zastąpi programistę, który zastanawia się co zrobić, gdy chatgpt zastąpi programistów i wtedy nie będę musiał się zastanawiać;"
"Założę jednoosobowy software house Dokończę wszystkie moje nieukończone projekty Podłączę AI do sztucznego ramienia, każę napisać program który zbuduje robota Zakładam restauracje w pełni obsługiwaną przez roboty zaprogramowane przez AI, można zamówić dowolne danie z każdej kuchni świata i zawsze wychodzi perfekcyjnie Składam armię robotów która będzie pracować na mnie W tym momencie mógłbym przejąć władzę nad światem, będąc ochraniany przez armię robotów, ale zamiast tego likwiduję jedynie rządy całego świata i zastępuję AI. Urzędy nie będą za chwilę potrzebne ponieważ w kolejnych krokach wszystkie miejsca pracy zostaną zlikwidowane i zastąpione robotami. Zakładam plantacje, magazyny, transport w pełni obsługiwane przez roboty. Zmniejszam do minimum potrzeby transportu przez hodowanie, uprawę i produkcję lokalną na całym świecie. Transportowane będą tylko niedostępne lokalnie surowce, likwiduję transport gotowych wyrobów. Liczę że pozwoli to na zmniejszenie zanieczyszczeń, głodu na świecie, depresji i tiktoka. Ludzie nie muszą na nic pracować, pieniądze zresztą i tak nie mają w tym momencie sensu. Następuje zapaść behawioralna, ludzie wymierają. Światem rządzą roboty i AI. Brzmi niewiarygodnie? Poczekaj tylko na GPT-5;"
"Razem z kumplami z projektu zakładamy firmę budowlano-remontową. Na razie robimy kosztorys i panujemy zakupy. Myślimy ,że jeszcze 2,3 lata i AI nas zastąpi więc szykujemy się na najgorsze.;"
Pewnie będę robił code reviews w dużych ilościach. Ktoś będzie musiał pilnować żeby AI nie konstruowało terminatorów na boku.;
Czy w ogóle ChatGTP można uznać za sztuczną i teligencję? Jak dla mnie to po prostu wytrenowana dużą ilością danych sieć neuronowa i nie AI.;
"@snakeomeister: są 3 poziomy ai, obecnie jesteśmy gdzieś w bardzo zaawansowanym poziomie 1 aspirującym do 2 poziomu. Poziom 3 to samoświadoma ai o inteligencji człowieka.;"
"Pytanie co rozumiesz przez ""sztuczną inteligencję"". Jeśli rozmawiamy z punktu widzenia techniczno-naukowego to jest tak:  deep learning to podzbiór działu zwanego ""sieci neuronowe"" sieci neuronowe to podzbiór działu zwanego ""uczeniem maszynowym"" uczenie maszynowe to podzbiór działu zwanego ""sztuczna inteligencja""  Więc jeśli ktokolwiek zajmuje się LLMami (a tym jest GPT) to zajmuje się także i AI, chociaż nie każdy, kto zajmuje się AI musi zajmować się akurat LLMami. Natomiast jeśli pytasz, czy ChatGPT jest inteligentny w sensie ludzkim to nie jest inteligentny w sensie ludzkim. Co więcej, obecnie nie wiemy jak taka sztuczna inteligencja miałaby działać bo to co w tej chwili mamy to po prostu AI działające na zasadzie chińskiej komnaty: https://en.wikipedia.org/wiki/Chinese_room . W skrócie: jeśli nie znasz angielskiego, ale gdy będziesz obrywał za każdym razem gdy ktoś powie ""give me a stone"", a ty tego kamienia nie dostarczysz, to w końcu na chybił-trafił odkryjesz, że gdy usłyszysz taki zwrot to masz dać komuś kamień. I nie będziesz wiedział, co oznacza ""give me"", ani ""a stone"", ale będziesz wiedział, że na hasło ""give me a stone"" musisz komuś podać kamień.;"
"Po pierwsze zdefiniuj czym jest inteligencja. Przykładowo Petros Psyllos twierdzi, że inteligencja to umiejętność rozwiązywania problemów. W takim wypadku ChatGPT spełnia tę definicję, ponieważ potrafi rozwiązywać wiele postawionych przed nią problemów. Z kolei Andrzej Dragan twierdzi, że inteligencja to umiejętność rozumowania abstrakcyjnego. W takim wypadku ChatGPT również spełnia tę definicję, ponieważ potrafi rozwiązywać problemy logiczne, stawiać hipotezy i radzi sobie z pojęciami i zadaniami, które widzi po raz pierwszy. Inna definicja mówi o umiejętności uczenia się. To również nie jest problemem dla ChatGPT. Definicji inteligencji jest wiele i z pewnością ChatGPT to nie jest inteligencja równa ludzkiej, w sensie ChatGPT nie jest inteligentniejszy od najinteligentniejszego człowieka, jednak z pewnością jest inteligentniejszy od najmniej inteligentnego człowieka. Dodatkowo jest to sztuczna inteligencja co już samo w sobie definiuje, że mamy tutaj do czynienia z inteligencją wytworzoną sztucznie, która ze względu na brak ciała i emocji, jest pozbawiona cech inteligencji typowych dla żyjącego stworzenia.;"
Goldman Sachs przewiduje likwidację 18% (300 milionów) miejsc pracy w związku z rozwojem AI. https://www.forbes.com/sites/jackkelly/2023/03/31/goldman-sachs-predicts-300-million-jobs-will-be-lost-or-degraded-by-artificial-intelligence/;
"@Haskell: po przywołaniu słów Petros Psyllosa jakby był autorytetem w dziedzinie sztucznej inteligencji, już nie wiem, czy teraz trollujesz, czy mówisz na serio :/;"
"a możę to cosik nazywane AI wcale nie programistów zasąpi tylko raczej korpoludki w USA będą pisać swoje wymagania potocznym angielskim a ChatGTP przetłumaczy je na potoczny jezyk programistów z kraju gdzie są oni tańsi niż w Polsce. I outsourcing sie od nas wyniesie, przeniesie gdzie indziej, nadal programis ci be dą kod pisać a e Polacy na tym nie skorzystają;"
Jezykiem AI jest matematyka a nie java czy inny python. Prove me wrong;
"Chyba prościej będzie się nauczyć na przykładzie Pythona, a potem przetransferować wiedzę do Javy.;"
"@TakMaszRacje: prosta odpowiedź to Hands-On Artificial Intelligence with Java for Beginners. Build intelligent apps using machine learning and deep learning with Deeplearning4j. Bardziej złożona jest taka, że ze względu na swoją „prymitywną”* naturę python jest znacznie popularniejszym językiem w AI i znacznie więcej źródeł znajdziesz właśnie w pythonie.  – python na bardzo prostą składnię, która nie rozprasza przy nauce i dlatego stał się tak popularny. To język z rodziny easy to learn, hard to master.;"
"Nie ma książki do AI w Java, bo w AI programowania jest tak nie za dużo, a jak już jest, to takie narzędzia jak NumPy, SciPy (i generalnie Python), R, Matlab nadają się do tego dużo lepiej. Kiedyś był bardzo dobry i za darmo (a to zawsze uczciwa cena) kurs Andrew Ng, który dawał podstawy do wejścia w temat. Do tego Google miał również bardzo fajny kurs dotyczący Tensor Flow. Ale osobiście polecam zacząć od postaw, czyli właśnie Andrew Nq Machine Learning, gdzie przynajmniej kiedyś było powtórzenie matematyki stojącej za AI, statystyki i całego tego ""niepotrzebnego"" stuffu.;"
"Wygeneruj sobie książkę do nauki AI przy pomocy AI, z tego co widziałem to dużo ludzi tak generuje na rynek książki i znajdują się desperacji, którzy je kupują.;"
Chcesz libke do klepania AI w Javie czy nauczyć się teorii o AI?;
"Tak jak tutaj wspomniał stivens musisz pierwsze poznać teorię jaka idzie za AI (czyli głównie matematyka) i dopiero jak będziesz wiedział co z czym się je to wtedy możesz zacząć tworzyć coś samemu. Od siebie polecam zapoznanie się z teorią i próbę odwzorowania jakiegoś projektu/papera/kawałka książki, i przejście na pythona bo tam jest najwięcej przykładów, materiałów i prościej będzie Ci pomóc jak coś nie będzie działać (większy userbase).;"
"Zaawansowane machine learning algos, AI autonomiczne karabiny, biometria, drony z podczerwienią, wysoce zautomatyzowany, wszechobecny i całodobowy surveillance w praktyce  Mają Izraelczycy świetnych programistów i informatyków, a i wyobraźnię również, trzeba to im przyznać.;"
"There is a great deal of disagreement on where the threshold to AGI lies. Some people try to avoid the term altogether; Mustafa Suleyman has suggested a switch to “Artificial Capable Intelligence,” which he proposes be measured by a “modern Turing Test”: the ability to quickly make a million dollars online (from an initial $100,000 investment). AI systems able to directly generate wealth will certainly have an effect on the world, though equating “capable” with “capitalist” seems dubious. Jednym z współautorów artykułu jest Peter Norvig (autor, między innymi, wraz z prof. Stewartem Russellem, znanego podręcznika AI: A Modern Approach). https://www.noemamag.com/artificial-general-intelligence-is-already-here/   Screenshot 2023-11-17 at 16.17.01.png (2 MB) - ściągnięć: 0;"
"To tak całkiem przy okazji ja też podam ciekawy link. Nie wiem czy wszyscy już zauważyli, czy może ktoś się uchował i jeszcze nie wie, ale mamy (uwaga tu będzie link) Microblogi. Być może niektóre linki czy znaleziska warto tam umieścić i spopularyzować wykorzystując tę nowinkę 4p ;);"
